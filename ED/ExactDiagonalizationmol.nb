(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    818014,      15250]
NotebookOptionsPosition[    813442,      15166]
NotebookOutlinePosition[    813806,      15182]
CellTagsIndexPosition[    813763,      15179]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Molecular Exact Diagonalization", "Title",
 CellChangeTimes->{{3.797463916412689*^9, 3.797463934781361*^9}, {
  3.801333492799201*^9, 
  3.801333496094123*^9}},ExpressionUUID->"b12ddd7a-35b6-400f-bdf2-\
24eb5c84b069"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"d50bf871-2357-4d07-b762-f5f96a6a1274"],

Cell[CellGroupData[{

Cell["Read in the  Hamiltonian Parameters", "Chapter",
 CellChangeTimes->{{3.79746403353503*^9, 3.797464088735511*^9}, {
  3.801333636047392*^9, 3.801333644271916*^9}, {3.801840971942629*^9, 
  3.8018409752388153`*^9}},ExpressionUUID->"850a0c90-583e-4431-8d35-\
1e6cd71a1681"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{
   "OpenRead", "[", "\"\</home/thomas/Libraries/NEdyson/h2H.dat\>\"", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nao", "=", 
   RowBox[{"Read", "[", 
    RowBox[{"ReadFile", ",", "Number"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uijkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Read", "[", 
            RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naso", " ", "=", 
   RowBox[{"2", " ", "nao"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"states", "=", 
   SuperscriptBox["2", "naso"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8013337080832043`*^9, 3.801333746592285*^9}, {
  3.8013337767532997`*^9, 3.801333815649338*^9}, {3.801333877617845*^9, 
  3.801333884177597*^9}, {3.801333949539424*^9, 3.801333962227304*^9}, {
  3.801334002405303*^9, 3.801334154793351*^9}, {3.801334202474998*^9, 
  3.801334236431044*^9}, {3.801334317920527*^9, 3.801334325041441*^9}, {
  3.801334400387637*^9, 3.801334427828017*^9}, {3.801334554883069*^9, 
  3.801334564936801*^9}, {3.801841004170364*^9, 3.801841014427088*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"23d6e924-3c4b-4f78-b78b-778166e4b94d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "nao", ",", "states", ",", "states"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdag", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "nao", ",", "states", ",", "states"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"c", "[", 
        RowBox[{"[", 
         RowBox[{"j", ",", "i", ",", ";;", ",", ";;"}], "]"}], "]"}], "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<~/Libraries/NEdyson/ED/hybfermion/build/c_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "nao"}], "+", "i", "-", 
              "1"}], "]"}], "<>", "\"\<.dat\>\""}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"states", ",", "states"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"cdag", "[", 
        RowBox[{"[", 
         RowBox[{"j", ",", "i", ",", ";;", ",", ";;"}], "]"}], "]"}], "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<~/Libraries/NEdyson/ED/hybfermion/build/cdag_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "nao"}], "+", "i", "-", 
              "1"}], "]"}], "<>", "\"\<.dat\>\""}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"states", ",", "states"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IM", "=", 
   RowBox[{"IdentityMatrix", "[", "states", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796844257845168*^9, 3.796844464583516*^9}, {
   3.7968444947600317`*^9, 3.7968446305521507`*^9}, {3.796844674125202*^9, 
   3.7968446744898033`*^9}, {3.796849773114406*^9, 3.796849801761745*^9}, {
   3.796850058269848*^9, 3.796850061949156*^9}, 3.796850743467898*^9, {
   3.7968515835899467`*^9, 3.7968515845512333`*^9}, {3.7970652553589497`*^9, 
   3.7970652688693523`*^9}, {3.7974640935881968`*^9, 3.797464124689893*^9}, {
   3.797464157043416*^9, 3.797464188738716*^9}, {3.7974642374273853`*^9, 
   3.7974642510906887`*^9}, {3.8013345770341263`*^9, 
   3.8013345798009443`*^9}, {3.801334613257267*^9, 3.801334635830984*^9}, {
   3.801341388566758*^9, 3.801341469636005*^9}, {3.801341536644334*^9, 
   3.8013416110918083`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7f53f976-69eb-4fc3-9506-80bedeb75112"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define the Hamiltonian", "Chapter",
 CellChangeTimes->{{3.79746426707409*^9, 
  3.797464270433733*^9}},ExpressionUUID->"a38d7bfa-9038-4cac-a7fb-\
9df1652d2304"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datadir", "=", "\"\<~/Libraries/NEdyson/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"h0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{
             RowBox[{"cdag", "[", 
              RowBox[{"[", "s", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ".", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "s", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}], "-", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mu", "[", 
          RowBox[{"[", "s", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{
           RowBox[{"cdag", "[", 
            RowBox[{"[", "s", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "s", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{"0.5", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Uijkl", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}],
                   " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"cdag", "[", 
                    RowBox[{"[", "s", "]"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ".", 
                   RowBox[{
                    RowBox[{"cdag", "[", 
                    RowBox[{"[", "sp", "]"}], "]"}], "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ".", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "sp", "]"}], "]"}], "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ".", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "s", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"sp", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.797464460613619*^9, 3.7974644654589987`*^9}, {
   3.797464508441687*^9, 3.797464542855023*^9}, {3.797464655096546*^9, 
   3.797464713929524*^9}, {3.7974647821876183`*^9, 3.797464797481786*^9}, {
   3.797464841883972*^9, 3.797464889884922*^9}, {3.797465008430503*^9, 
   3.797465032573998*^9}, {3.797465260032446*^9, 3.7974652996472263`*^9}, {
   3.797465362349587*^9, 3.797465368893671*^9}, {3.797465400286263*^9, 
   3.797465638016383*^9}, {3.7974657723891287`*^9, 3.797465863866156*^9}, {
   3.7974659041133957`*^9, 3.7974659118985043`*^9}, {3.797465945450329*^9, 
   3.79746603188636*^9}, {3.797466096642254*^9, 3.7974660967629747`*^9}, {
   3.797466154128879*^9, 3.7974661836598577`*^9}, {3.797468183598296*^9, 
   3.7974682030579033`*^9}, {3.7974682823055964`*^9, 
   3.7974682833864307`*^9}, {3.797468643960297*^9, 3.797468683699593*^9}, 
   3.797605142745804*^9, {3.797610875877562*^9, 3.797610876814642*^9}, {
   3.797619244061306*^9, 3.797619253068817*^9}, 3.7976193369938803`*^9, {
   3.7976193990308237`*^9, 3.79761942707549*^9}, {3.798409654713818*^9, 
   3.798409670721448*^9}, {3.798409764187215*^9, 3.7984098387789907`*^9}, {
   3.798409885557926*^9, 3.798409940174778*^9}, {3.798410015546887*^9, 
   3.798410108241016*^9}, {3.798410149082053*^9, 3.798410186384658*^9}, {
   3.79849307303936*^9, 3.798493103959735*^9}, {3.798992735986924*^9, 
   3.798992737897847*^9}, {3.798992812172956*^9, 3.798992817243936*^9}, {
   3.8013346560936537`*^9, 3.801334671500423*^9}, {3.801334727340715*^9, 
   3.801334732497443*^9}, {3.801334785165166*^9, 3.801334788848414*^9}, {
   3.801334916388422*^9, 3.801334957202156*^9}, {3.8013350067677717`*^9, 
   3.8013350767711287`*^9}, {3.801335240362647*^9, 3.801335299079159*^9}, {
   3.8013353407615*^9, 3.801335388970305*^9}, {3.801335447626189*^9, 
   3.801335461705853*^9}, {3.8013355217184362`*^9, 3.801335540774569*^9}, {
   3.8013357835418777`*^9, 3.801335789503606*^9}, {3.801335855748032*^9, 
   3.8013358749266443`*^9}, {3.801336489061515*^9, 3.801336515444981*^9}, {
   3.801336571944233*^9, 3.8013365878896227`*^9}, {3.801337261384974*^9, 
   3.8013373111728983`*^9}, {3.80133839421137*^9, 3.801338436226214*^9}, {
   3.8013385088861113`*^9, 3.8013385094754963`*^9}, {3.8013399711122503`*^9, 
   3.801339975332446*^9}, {3.801340096998885*^9, 3.8013401465785027`*^9}, {
   3.801340451119326*^9, 3.8013404570668497`*^9}, {3.801340508315909*^9, 
   3.8013405347164803`*^9}, {3.8013407315816317`*^9, 3.801340749174711*^9}, {
   3.801341650246752*^9, 3.801341723189279*^9}, {3.801341777093379*^9, 
   3.8013419309989243`*^9}, {3.801341985766787*^9, 3.801342026120977*^9}, 
   3.801342791600747*^9, {3.8018410376146717`*^9, 3.801841039549314*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"14a85532-8a48-4c0c-bb4d-f36c3a5fd145"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Tr", "[", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HEigVals", " ", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "H", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HEigVecs", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Normalize", ",", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "H", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Check if the Hamiltonian is Diagonalizable: \>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"DiagonalizableMatrixQ", "[", "H", "]"}], "]"}], "<>", 
   "\"\< Max err: \>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"N", "[", 
   RowBox[{"H", "-", 
    RowBox[{
     RowBox[{"Transpose", "[", "HEigVecs", "]"}], ".", 
     RowBox[{"DiagonalMatrix", "[", "HEigVals", "]"}], ".", "HEigVecs"}]}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdagTrans", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"HEigVecs", ".", 
        RowBox[{
         RowBox[{"cdag", "[", 
          RowBox[{"[", "s", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", "HEigVecs", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cTrans", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"HEigVecs", ".", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"[", "s", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", "HEigVecs", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.80133771100261*^9, 3.801337714759758*^9}, {
  3.801342063883421*^9, 3.801342113639243*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"fe9b6f12-82fc-40ba-9a2f-8005b8cf81a9"],

Cell[BoxData["\<\"Check if the Hamiltonian is Diagonalizable: True Max err: \
\"\>"], "Print",
 CellChangeTimes->{{3.80133770090878*^9, 3.8013377154855003`*^9}, 
   3.80133844189402*^9, 3.801338514467597*^9, 3.801339981600155*^9, {
   3.8013401017771597`*^9, 3.801340150066349*^9}, 3.801340463924081*^9, 
   3.8013405119960814`*^9, 3.8013405448468447`*^9, 3.801340752731841*^9, {
   3.80134201048482*^9, 3.8013420292405663`*^9}, {3.801342106906845*^9, 
   3.8013421141584187`*^9}, 3.801342794358528*^9, 3.8018410427358303`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"aeed21c0-7f63-46a9-be28-8671742793af"],

Cell[BoxData["5.828670879282072`*^-16"], "Output",
 CellChangeTimes->{{3.798410087345234*^9, 3.7984101089182243`*^9}, {
   3.798410156389843*^9, 3.79841018689254*^9}, {3.798493085438073*^9, 
   3.79849310483496*^9}, 3.798992739846266*^9, 3.7989928351359577`*^9, 
   3.801335755610374*^9, {3.801337700915948*^9, 3.801337715487294*^9}, 
   3.801338441895362*^9, 3.801338514468972*^9, 3.801339981602022*^9, {
   3.8013401017786703`*^9, 3.801340150067857*^9}, 3.8013404639254*^9, 
   3.801340511997867*^9, 3.801340544848672*^9, 3.8013407527335443`*^9, {
   3.8013420104863987`*^9, 3.801342029242618*^9}, {3.801342106908823*^9, 
   3.8013421141605167`*^9}, 3.8013427943601418`*^9, 3.801841042754198*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"9b09ebf9-ddb0-478e-988a-fe11ffb675f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Matsubara Functions", "Chapter",
 CellChangeTimes->{{3.797466234409215*^9, 3.7974662410816803`*^9}, {
  3.797466501658165*^9, 
  3.7974665066992807`*^9}},ExpressionUUID->"33638414-0c5e-4f85-8575-\
c35d52a84829"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</_GM.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Params", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GMNEdyson", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"2", "*", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", 
       RowBox[{
        RowBox[{"Params", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GM", "=", 
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "Z"], 
              RowBox[{"Tr", "[", 
               RowBox[{
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Beta]"}], "+", "\[Tau]"}], ")"}], 
                   "HEigVals"}], "]"}], "]"}], ".", 
                RowBox[{
                 RowBox[{"cTrans", "[", 
                  RowBox[{"[", "s", "]"}], "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ".", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "\[Tau]"}], " ", "HEigVals"}], "]"}], "]"}], 
                ".", 
                RowBox[{
                 RowBox[{"cdagTrans", "[", 
                  RowBox[{"[", "s", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", "0", ",", "\[Beta]", ",", 
               RowBox[{"\[Beta]", "/", "100"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GM", "=", 
     RowBox[{"-", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "Z"], 
             RowBox[{"Tr", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[Beta]"}], "+", "\[Tau]"}], ")"}], "H"}], 
                "]"}], ".", 
               RowBox[{"c", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ".", 
               RowBox[{"MatrixExp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Tau]"}], " ", "H"}], "]"}], ".", 
               RowBox[{"cdag", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", "0", ",", "\[Beta]", ",", 
              RowBox[{"\[Beta]", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "sites2", ",", "2"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "sites2", ",", "2"}], "}"}]}], "]"}]}]}],
     ";"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7969175814354362`*^9, 3.796917594278741*^9}, {
   3.796918163265868*^9, 3.796918296695459*^9}, {3.796918329177977*^9, 
   3.7969185704836817`*^9}, {3.797466327903062*^9, 3.797466550328673*^9}, {
   3.797466671249156*^9, 3.7974666746051407`*^9}, {3.797467967091383*^9, 
   3.79746798912473*^9}, {3.797468089252339*^9, 3.79746810142557*^9}, {
   3.7974682939559393`*^9, 3.79746834553959*^9}, 3.7974684467693157`*^9, {
   3.797515785731844*^9, 3.797515790162521*^9}, 3.797605157844326*^9, {
   3.797610899905794*^9, 3.7976109003978148`*^9}, {3.7976200954919357`*^9, 
   3.7976200997927*^9}, {3.7989927590879507`*^9, 3.798992778289624*^9}, {
   3.801337960229953*^9, 3.8013379960723753`*^9}, {3.8013421847362823`*^9, 
   3.8013422397543087`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"9a835ecc-b544-490a-afdf-e9a865d79cb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MPlot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"\[Beta]", "+", "0.000001"}], ",", 
                 RowBox[{"\[Beta]", "/", "1000"}]}], "]"}], ",", 
               RowBox[{"GMNEdyson", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", 
                  RowBox[{
                   RowBox[{"2", " ", "nao", " ", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], "+", 
                   RowBox[{"2", "j"}], "-", "1"}]}], "]"}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "\[Beta]", ",", 
                 RowBox[{"\[Beta]", "/", "100"}]}], "]"}], ",", 
               RowBox[{"GM", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i", ",", "j", ",", ";;"}], "]"}], "]"}]}],
               "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", "2"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Joined", "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", " ", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nao", "*", "nao"}]}], "}"}]}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.01", "]"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\[FilledSmallCircle]", ",", "10"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nao", ",", "nao"}], "}"}]}], "]"}], 
      "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<NEdyson\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Quotient", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "nao"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "nao"}], "]"}], "+", "1"}], 
            "]"}]}], ",", 
          RowBox[{"\"\<ED\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Quotient", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "nao"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "nao"}], "]"}], "+", "1"}], 
            "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nao", "*", "nao"}]}], "}"}]}], "]"}], "]"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<\[Beta]=\>\"", "<>", 
           RowBox[{"ToString", "[", "\[Beta]", "]"}]}], ",", "13"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", 
          RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.79746713527752*^9, 3.7974671391370773`*^9}, {
   3.79746725456009*^9, 3.797467260066148*^9}, {3.797467383765308*^9, 
   3.797467455532628*^9}, {3.797467532390675*^9, 3.797467535397292*^9}, {
   3.797467842794339*^9, 3.7974678480162086`*^9}, {3.7974680275791197`*^9, 
   3.7974680328164577`*^9}, {3.797468729401087*^9, 3.797468782979974*^9}, {
   3.797468871574152*^9, 3.797468897878109*^9}, {3.797469048669941*^9, 
   3.7974690660755463`*^9}, {3.7974691862759647`*^9, 3.797469309657954*^9}, {
   3.79746935316368*^9, 3.797469393094695*^9}, {3.797469426427697*^9, 
   3.79746942756353*^9}, {3.797469464348295*^9, 3.797469542369519*^9}, {
   3.7974696076323137`*^9, 3.797469612283038*^9}, {3.797469645510569*^9, 
   3.797469649132533*^9}, {3.7974697146892023`*^9, 3.797469740993402*^9}, {
   3.7974698511357393`*^9, 3.797469851722827*^9}, {3.79746994651974*^9, 
   3.79747006839165*^9}, {3.797470133223145*^9, 3.797470157108676*^9}, {
   3.79747021670677*^9, 3.797470631449254*^9}, {3.797607019228973*^9, 
   3.79760702364147*^9}, {3.797607167542128*^9, 3.7976071776255293`*^9}, {
   3.80133803764583*^9, 3.8013381216148443`*^9}, 3.801338216982005*^9, {
   3.801338811632988*^9, 3.801338824311083*^9}, {3.801342246618931*^9, 
   3.8013422479453793`*^9}, {3.8013423640762157`*^9, 3.801342364715371*^9}, {
   3.801342396378277*^9, 3.801342488859335*^9}, {3.80134252598174*^9, 
   3.80134258183552*^9}, {3.8013427191537933`*^9, 3.801342736685853*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"cd94c9dc-5801-4518-a62d-1725fc62b57a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
srr0f2phRAw=
         "]]}, {}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1m3dcTv///1OihTQlo72197oe1w6FaJgtRCpaZkpKSVYLlVGRCpVUpNIg
EUJGlFm9KVtEIurX53s9f9c/79u5eZ37eZz7ufPfW9Vvw8LVwkJCQu9FhIT+
99///1uzRDG/xarRPivzf78zjNbh6qqAvGt0XcW4clhn2TT5a/Zm//drZDxw
nF13b89V+vNbjD8hO/rWCV+1F9BaGT4Nhb3Pohvo/COG09KlKpOH6+39/+/3
hNG3V6uiRrSe7u9g9EfrJ+2Rq7O/2/K/3wuGy4TNT+fp1RKvk7E55vPUTt4V
Ot/FKNl1ykhmXQ3x/2OslvVfUZ1WTfe/YazVj19T0lhFz+thpE8bzLz++zLx
3jE2rep//MjiMvHeMzZVih0p31xJvI+M+KH3ovb1l4j3ifHhWu9PrtQl4n1h
BHiw+856XSReH0O8INCae6mCzvcxHp+wa/0qU0H8b4yi2fMjEyLK6f7vjGL7
XVffPiuj5/UzlOMv933glhHvB+Mo+9n0iIsXiPeDEfZjsaaP7gXi/WTc4oid
O5BbSrwBRrdtnFLn9FLi/WI8vG3LCrQ/T7xBBjv6ZVA3p4R4g4xT3yVVP7oV
E+83Q6/riItzUBHx/jCEl3FW3Es6R7whhudwkold6Vni/WUof/g9zevFGeL9
ZdzbbfNSZNIZ4v1jiPTeTP/DLyTeMGOr2qbrk3cXEG+E8XhqOWdqSz7xhPC9
ttixRyGfzgshXXqx5uw1p4kvhFjuohLF2jy6fwz4ri23tafk0fPGIPv0/JwF
W04RTxhfx2btXPfyJPGEsa0qsHce/yTxhCHV5RfQfjGXeCIw7u+81K2TSzwR
fNUeOTgnJ4d4YzH2W3rdZ+Uc4o3FyRP5Mzyssok3FlrPvhy67niCeKIImjnL
+53LceKJQt1Z4vGuVceINw6KnRUzvGOPEm8cNIbUZzkWZBFvHD5Ozsj78DCT
eOMx8Gdpm6FoJvHGI+NIQ8kThwziiSFCIqD8/PYjxBPDDrWmz4lXDxNPDM7e
L9+YSh0mnjg0q5al7Fh+iHjiuK3avpBVlk48Cazfvebt/AnpxJPAsV9BntHB
acSTgJ1X0Ujew1TiSSLZ4UT4MftU4kliMFsk2vFcCvGk0B9cJe8/I4V4UtBy
vO329VAy8aSwKa92Q+XkZOJNQNBn/lIb9YPEm4BZ/1VX/9U7QLyJGLC3Or3V
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
         "]]}, {}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1m3dcjX/ch1NmkYakRHtpaM9T531G5xyVFNKgpGRHKVIkSigrFS1p0ECD
UmkgIbIzy4yi/IwyGkSenud8nvOP1/06933d73N9Ly9/UfXfMD9QVERE5KOY
iMj//vn/n7+p9f59DQ2MjPT//ZxiNiT8d8vF5v+va5i1z1NNP2+4zDD9v89V
5s4s5fP7Qi/R981Ml0g+zKIvMoS0B8xPCr87cpLq6f5HzL2dIf6HSuoYK/7v
85T59FuiZMP9Wnq+jVmQfb+gb7CGcffO/35eMkvT5pv16dQQr51p7nXzc9zS
C3T/W+YAt25qyLFq4ncwRfZI9e58U0XPdzJddm46GqdTRe/7wBx1Pe6bY3gl
8bqZTcmRx/NunyfeR+bjAZtXvprnifeJebW8aPuCXRXE+8yUbBB/7N5dTryv
zLdjIrMZbuXE62V+1LQa037pHN3fy6zkvIhSMD5H/G/M13KM5quFZ+n570yn
Rrl3tWpn6X0/mDMfHO6s5pQR7yfT8sLqQ+KOpcT7ybwwxTJZ37OEeH1MXw+J
V6+DionXz8zRZwR2Jpwh3gCzv3FASbTsNPEGmbceFb4cbjtFvEGm5D+5BSck
ThHvFzNigUNfDaeIeL+ZcX/7vkrGFBJviHlRoVk2uKmAeH+YC+OGHhRLFRDv
DzN0QZnyUb984v1l9trVhw9XniTeMHNorMjVGqmTxPvHDHDRccsKPkE8EbS/
6Lkd/SSP7hcB40GznjUzj/giWHekrzivJJeeH4XoK/3Xjqrk0vtGISdk3bRv
qTnEE8Xnr5yQg7I5xBNFgH/cmnStbOKJolv9Zo2c4XHiieFGmOQTN7ss4olB
S/bx1ckLjxFvNFouv4iW3ZhJvNGQu897r5aaQbzRCDMxPzHmajrxxkD1ard+
XF8a8cYgrW3FmXWGacQbC6VtyT17g1KJNxZPi64sLyo/SryxSNp8Xizz7xHi
jcOOwYk8E5cjxBuHxFGqiqyTKcQbj62TLZ9l/ksm3ni8v6duMs0vmXjjcfuB
g8mB60nEm4AVhi+1Hs1OIt4EdP46f+zq8cPEE0fYNqOF1jKHiScO86VHLaUS
EoknjuTfNW6aYxOJJ4EOh6fxJRMPEU8CXk3Ldo2TO0i8iZjomzpKQfMA8Sai
fMmvtScZ+4k3Ea3nlBXXL95HvEkw95vLZOxMIN4kmPTEvHxaEk88STRem1A+
7u1e4kliTXiYcYbiXuJJgusoFbzYew/xJiNQ95qCYs5u4k3GpEyv5QWf4ogn
BVmGvthDRhzdL4WkCMb04ORdxJdCm2eepXtPLD0vheVWPvYerrH0PinMOxwV
OLcqhnjSiGzN15FSjSGeNJZdeGMfkbiTeNJo/NGYGDB6J/GkUeD5yfDMth3E
k8aVHZsPe3+PJp4MBL4PeIk/thNPBqPDjqtV/Ykingy6ns94tH9SFPFksECs
+d9TzW3Ek8HUyBRrL4etxJOF5H+nPrWtjSSeLAqXZTmrpkcQTxZV/6a5/rqz
hXiy2OIylGYwbgvxZGF5tnPtPn448abAY6lR3tsDm4k3BfNz3LNEnm8i3hSs
fVNiU6u3iXhToHDo2I23MWHEm4J3lXL9Tm9CiSeHZpMdLfcQSjw5lLf2VrAK
NxJPDudS62yjZDYSTw53R3myFseEEE8O0w4dvVvVH0y8qTBV1JBatyGYeFNR
wCkvPtu6gXhTIfX25Ojzz9cTbyrYl3NH53YGEW8qlvfVJVr1ryOePMzrVuyy
m7yOePLgrLueFzZ7LfHksbp5y56Ti9YQTx7yB96nHtm1mnjy4Cf0/pSuWUW8
aRgq1A96/2Ml8aZhhn74hldmK4k3DX86hv/e3LqCeNPAfFyeu+VmIPGmQdRM
zveSYiDxFPA7aUN+0MblxFPARdXAuYvvBxBPAT167bE+xgHEU4DWZ49rTmn+
xFOA2ODau8Ni/sRTxJ20h0ddw5YRTxHlEal8pY9+xFPEYr0ifXt/P+IpYuIM
z6Xal5cSTxG/Ux2P9V/xJd50dGmcUz11x4d405Fz+/tYkTdLiDcd0dXGXpcG
FxNvOjxWnZI4pbCYeNNx9mh8926WN/GUsPjjnBiVYC/iKSG/cqMm8j2Jp4S7
Ws9unWv3IJ4Sijh24hw1D+IpoWdZ8KSrqxcRbwaW1NXGila7E28GzvzXeOTR
BHfizYCuya22Cf4LiTcDJvsEgsjLC4g3A9GHOoyGVBcQbya8Vl6cvTx+PvFm
wnGUgvrBPjfizUTzB1fVBSvciDcTksozNxx84Uq8meBn6W9WcnclnjKyC/rC
K/PnEU8ZLUqjy+edciGeMrqqHNubzs8lnjI0o5qdX95wJp4y3O3zzRe8cyKe
Cm4UJV3sFXMS3q+gAq3Siy+36jsSXwVeLrrzLy6eI3zeWQXtY3cdiT4soPep
oIMf1HzwLl/I26GCyNU6pRcm8+n9Ksg+X5Nyx4Mn5FWoQMZszfzMfAfao4K3
CmVmA4NcIe+DCn4eC+mrcOPSPlW4upwvKyjj0D5VOA4nPc6X4dA+VSz2yVCJ
j2TTPlXMywg7rNvFon2qqFvavXiZJ4v2qSL7qPY7iXugfaqQjVh7eowAtE8V
nydVn/Hcz6R9qpBWiJx9MdGe9qki9EOL1+AxO9qnBktficLbZxm0Tw0vFozd
/fu2Le1Tw1+LEoHjVxvap4Z5ud1TYuRtaJ8a5H6IP13Dt6Z9alhlcNbwfpQV
7VODd6Tk2q21lrRPDU5PK0Lt/lrQPjU8jC5p6HSwoH1qYD6Um8tOMad96jBb
PWafTrcZ7VNHx/pOj7UsM9qnjitSCt/eZJvSPnWsgtTHJWKmtE8dKp1ZSrVr
TWifOoavnyt60GpM+9TRl+bbHuloTPvUsXWvESelwYj2qePtwwehv2yMaJ86
Xqh3+0iFzqZ9GmAVqMbZbzGkfRr4HH9B3C7OgPZpIP2oXNbddH3ap4FDJSdf
VFTq0T4NLBrw5Fe2zqJ9GniUUGyaLjqL9mnA8Jz8BR1TXdqnAab6n1zDNTq0
TwM74kRWhhdq0z4NdNS2yrf8p0X7NNGYHb5AwkyL9mni15sCm4EYTdqniU23
Ri1f+UyD9mni+eC8B7ONNWifJlTeMd5oJqrTPk1oL13NVfmpRvs0wV32+E//
EjXap4nPmmnc2FuqtE8Ty21/7c9mqNI+Teg1X9uoXaFC+7TQWDN0fsBAhfZp
wTIs0eOllzLt04LIzc3Rj5bOpH1aUNmT25gSNIP2aSHh75pR72KUaJ8Wimzy
JKKzp9M+LWzImX7Y+Koi7dPCcHK9zJUvCrRPC3MChx/1z1SgfVq40t55J2vR
NNqnjQ0ly4/FpMjTPm1cZFpsDW2dSvu0Me2x9GyoTaV92tBiug3XhMjRPm18
9v15oqJpCu3TRo7MGO4o1Sm0TxuvOj38tuyQpX3aiGUV3O3plKF92qho+FfE
dJGhfdrQiTk0l1UvTft0sFu/wvG+oTTt08GzPj/v6/lStE8HbPvnHiKqUrRP
BzvPuAbVYzLt08E1l8YfW/mStE8HX1UCPP65T6J9OtAyWnR6/LqJtE8HCbyC
z4vjJWifDowb3v25VCJO+3QgcLGM/9U6gfbp4sua3yJPxCfQPl0UWJTtVuKM
p326yKve/O7YznG0TxerF34J02gaS/t0sVgpZFas1Fjap4vKDXfXJ/iNoX26
GDN6juqkqtG0TxcDHrLxb6RG074Rvpqk47NgMdqni+lrer1uPxGlfbNw2qah
L5kpSvtmYZFdTqp46SjaNwtauV8/T1AdRftmQexu+Z2gNBHaNwsy2z0MZaeI
0L5ZqNziwzqr/c9WuG8WcuW3xljOHrYV7psFNfGMldvs/9oK981Cq3OUGcv9
j61w3yw8Os5RcAwdshXu04PIPyl1n7TfQp6CHvTFTAzY134JeaZ6GKNW9bCx
f1DIc9bDicJtfqdnDwp5K/Swp/PsjevrB4S8HXowVipP7Kjop316iBwKuPdo
uI/26aHNvlN61bw+2qcH+Tl5vqH5P2mfHqRSnsy8JfKT9uljz0HXaexlP2if
PloUipeVN32nffpQLmj2+GH0nfbpo9PxVPLr7G+0Tx9PZia2u8h+o3368B6z
3URlXy/t00fg4Ndjs8f10j59MIPvJFdJ9tA+fdx1j3k3Wv4r7dOHSGVWjrj2
F9pngFeGizgJ9p9pnwGKEs/PEvh8on0GqBMIksRj/6N9Bmj7uigmvewj7TNA
cufOK5feddM+Axxoed3koNRN+wwQPGl78dDiLtpnAMltPmpluR9onwHSva4u
M/rynvYZYJ7yXxU3+/e0zxDZU3fu6UzppH2GqHsTpHa5t4P2GULZYUVblVsH
7TMEJ/x6R171O9o3ch2ve2mx2jvaZwhmjJtK3eG3tM8Qk1ucfmSOeUv7DOH0
+Af/eVQ77TPE1e7QzIKfb2ifISaVByXf6ntN+2ajoWa80pvhV7RvNkRm1Lw7
OfkV7ZsN/qW+A6+1X9K+2ViVuq3Elf+C9s3Gv5NTzlwJek77ZuOqW3Pdr4w2
2jcbfW6ZLY33WmnfbLB9Th7oHt9K+2ZD/mSRidWcZ7RvNsTEp6TtOPSU9hlB
WdR3RtKLJ8L7JxrB8NmjLHuDJ7TXCE9Ery732vVY+LyWEcJbRqlVtz+i/UZY
M+HxawP2IyEPRsg00vmRUvSQfo8RWkt0h67JPhTyvIygP0XnbmpsC/0+I+zh
39nQPfBAyAs1wv62LKnk4Af0e43gMamw7+Pz+0LefiMkP3mm1PbyHv1+I+js
mLGh/MNdIa/ACLesA+5YDN4hH0ZwVRKZqCt9R8hrMMIn9/Ff5hrfJj9GqJqg
OG6d5y0hr80I8Q75dU67m8mXEV4tPqVdXXtTyPthhEkT38pF9t0gf8bIu+z3
bZnFDfJnjOcJxy7YRTWRP2MoNrT2vmq+Tv6M4eHzO32K0nXyZwwXp4tqlaHX
yJ8x+g0cfFIeXCV/xljzXDxsr8lV8meMGeJqb1alN5I/Y/QkP/aSHNNI/ozB
357YOn/TFfJnjJ8MzWjp/xrInzH8trmlagU0kD9jZAwYT37TcJn8GWPJ/bsp
R65eIn/GKBvsvDX73kXyZ4w09ovG9e315M8Y/1m9jZX7XUf+jEf+vVw01K1Y
R/6MEWh3/EsZu5b8GSMmcHOXSUgN+TPBvJt1sxkFF8ifCQLr82tS31aTPxOM
XbJWXla9mvyZ4HztwqCoNVXkzwSGWmaBhdWV5M8Efb0ctQDxSvJnghiPpea7
/M+TPxOcY+cefnO5gvyZYMu1RTud1CrInwn0ZrllZseXkz8TDO7bdeF83zny
Z4Ksxf8+Ll9xjvyZwCXEaMO+F2fJnwluq20pHu1+lvyZoOueHHdJfhn5M8G1
dxpNd4pKyZ8JchOgqHi+hPyZgFVWGz3mRjH5M0Hppz+689+eIX8mcPr43ei6
6BnyZ4rs5P92auqdJn+mYNf2PbD1PkX+TOGaXJfw8FAR+TOFrXt1U+XtQvJn
ijrfL9YVkwrJnyncd4+aleFeQP5M8WFBnZ/tiXzyZ4rAG13Kq/tPkj9T/CjM
lhtwOUn+TLGL89G1tvgE+TOFxoUqi/jJJ8ifKfptrcJtw/PInym++OwRO92R
S/5MMex7QqxsYS75M0VvavUdzVs55M8UDukXn/3HySF/pvjELg6ujs0mf6aY
KPVPu3TPcfJniqzXv00ikrPI38j+Y0bf2gqOkT8zRPurn0++kkn+zGAZWVW2
tiOD/Jnh4D+lTzoTM8ifGS4/tzVJsU0nf2Y4ZxozbktIGvkzQ42I2dGcklTy
ZwbbN4r5L3qOkj8zCOIK4gctj5I/M4RMD5t+M+4I+TODp6NJkVJbCvkzw9uk
nq5m4xTyZwb9bdXfTh5KJn9mSBFLNtr1PYn8mSFt03tPpncS+TODtL2Ub1nT
YfJnhtLu0FWllofJnxma9527LV+SSP7MMKy34O8NrUTyZ4bN7g7y1nMOkT8z
qFcW63Y7HyR/5jhZPilqiecB8meO07dKvT3W7id/5nheO/QrM24f+TOH4bjG
4J6CBPJnjlfu7JPT7seTP3NsUPW3af+7l/yZw0oxdZ+U6V7yZ47bbMUjm9bv
IX/mkLfZ9+ll2W7yN3KdKl0qNxBH/syRtqwpopcTR/7MoSeZ6MM8uov8mcPd
wvfeky+x5M8cGxMuZO51jCV/5pAMruo0KI4hf+YQu2EwKUsmhvyZw4/vXVEa
tZP8mePw3Iv5jC87yJ853lUualNdtoP8meOEnFlDWHk0+bNA2NLdl5tObyd/
FuiTuSXdfzqK/FmM/H0KVLpSvo38WWDqJ1er7itbyZ8FxNdk5Bq0RpI/Cywu
Kl/p3hdB/iwgkzDoo6kQQf4sUHXw6cRAzhbyZwETHd6JV6Hh5M8Cb0IudXud
3kz+LPB+1sHZBR82kT8L6L3I4yfqbCJ/FmDfyQrp2hBG/iwgtWfx/G31oeTP
Ah7zWz6oSIaSPwt8jzfbUrR8I/mzwIVlSYldl0PInwXOdWX1VCiHkD8LxDS0
R3fGBpM/CziPX52W17qB/FnCJe/XfwXn1pM/S/TOcHdLSAoif5Y4psKYJbZ1
HfmzRNBzXlPzmrXkzxLKmfHuacvWkD9LPF916smspavJnyXmj40QYQasIn+W
KNz82yYlaCX5s8S95ou7PkWtIH+WuMZtXDkuJZD8WUI1pLj7TNly8meJJcoR
4ccfBJC/kb3u3u35/f7kzxLHC5XtElT9yZ8lEn63f5jitoz8WeKb29eVUnF+
5M8SyRedXyZGLiV/luDU/Y2U/eFD/iwx79lbB27oEvJnCQcPxfsNv73JnxXi
j9Xt0Yn3In9WsMufWKg005P8WaE71ksGNYvInxUOHLzBtfR2J39WeG+sY1Uk
spD8WeG4fNVcm+L55M8KGrwIy6NL3MifFfxmXnobKO1K/qwg+8+1tihlLvmz
wmr9E4enSzqRPys0382N2H5QQP6ssPD+y9UGcjzyN7Jn1OqBuFwO+bNC9Zn2
WV0mLPJnBYHzu1L/w3bkzwqbR6/u2HfNivxZoWCb7T3JYVPyZ4Xf+yc8DYgw
JH9WeJTxUCJyWIP8jfDD95Z0SMuTP2tEpIXu+VbeayP0Z41V1qzC8+sn1Qn9
WcPjwzPvY/dV6oT+rLGo6da/F/xZdUJ/1ljIeNW9rsO4TujPGlVXHfNiCi3q
hP6s0Z+VJLsqxFbI87JG966nD/RUIeStsMaR672Xmw6whbxQa0yI8hbR+McV
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
WuSTrlhoywl5phwcil8/z+uJnJBnzYHy2ZlL5OKnCnngYF6gi0g6W17I43HQ
cEP1gazoNCHPmYMTk1Z3Vd2YJuQt4GBli1X/+WQFIc+Lg13/Ps5lr1AU8vw4
WPJh19cU5nQhbwUHr1IyUjqVlYS8dSPfeybeWDNuBvXHwannft3+/TOoPw6i
Lz6F+JeZ1B8HHbFc2ZxPytQfB77Dvk9MIlSoPw5aD38yvy+iSv1x8DWo//uN
/arUHwcm4tu/Y4Ya9cdB/L0x7KXlatQfB22tU1XmOKtTfxwwBiXHan1Sp/5G
zscf5TMPaVB/HEy6vtzEx0qT+uMgJWDF14ldmtQfB7t7dlZ4Z2pRfxz8kbl2
Ocxdm/rjIHTP+7sJcjrUHwcT2/aq3nuhQ/1xEP7xZXJIkS71x8FwaGHOqa2z
qD8OzPtrQ4vd9ag/Dro8X/Sfs9Cn/jiYP16u/cdMA+qPi0kyCQ0lkobUHxcb
ptXIzhg7m/rjom5CbmGDqBH1x4XduqO/Duw2ov644Ld4z02TNKb+uPD82bJb
NNOY+uPi6w/5U716JtTfyPM3Lr7Zc8WE+uNCtMZt79fFptQfF7d8LRjOQ6bU
Hxcdh249b842o/64kBvqTD48x5z64yJBrOD7vUFz6o8L5Qt53aUlFtQfF2/O
r21busqS+uPi9seNBdK6VtQfF0HeC+r6eqyoPy6mf4lSZF60pv5GrjNd1qgd
tqH+uHjgekD06Vpb6o+L9mGf34fnMqg/Luz9TlgkWthRf1zEWbdumahtT/1x
Yf7Ifz1XmUn9cVExz7S9bjKoPy56JCfK/EwG9ceFaertynVKLOqPiz+Sp28L
TrGovxF/g6PCim3Y1B8X/1mnDNY/YFN/XCyLmPY0Zy2H+uOiWEepKVqCS/1x
4dNh0hxzlkv9cZFyOtL4sbcD9cfF6urNJdniPOqPi9hSzgKZBh71x4WbrE6x
91Y+9cfF6W+xDUUMAfXHRcADNQ3D0XOoPy7GTv0hOvPhHOrPAZNVtQxLChyp
PwcYbKrXlYlxov4c4L1lp03ccmfqzwHX50eGwWUu9eeAoaLbzdFMF+rPATfG
KSrutJpH/Tng/SYz1UYlV+rPARNw6Whgriv154AItWXfnWe5UX8O6N32zjWz
2o36c4CC6rTesDnzqT8HdLibWf17M5/6c0DeWt/rflsXUH8OyFqSEXJl+kLq
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
         "]]}, {}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1m3lcTO0bxqdFQqVQaVUoSfb2be7ZB5Hwkj37EmWNEkJCZIvsLYpCKGtZ
alSiLBUVxS+RSiGVtVL9zpm59M/7uT7P81znnu9835ymk/l8/0mLlDkcTp0K
h8P+998Xtf4XWHlkXebJE+zXBW5I2D7/bjfWIKdzZdvf7O/fuSpztPwrm7vt
QB537Ec/rOdxQ75kfnjRa0Wmoq2Q2xkwrtFlxzLsf8ndqul3eMvwJZmL5V+l
XI7/yqvmvRbhfBmXs3Bdro3lgsxnT9mvt9ytdg3djJfMQ18lV+lB2YhLcXOx
/z23Y/ayVdzMWeiv4nKcXv0ZbjYD5z9yle7+CZqaMQ3Xq+Eq9VGLMz7yH/o+
cZXI7ZXf6cnoq+MqxceMT3nhhb7PXM4lT92UURPR94XLOVi32X31ePQ1cDlm
rjk9s8air5HL8Xn9bY+XFPuZ7H23/qeBGP1NXE79N8v+ekKcb+Zygpcsn8rj
43rfuZzXo9Olxwh9P7hKNst2WVq5o+8HlyPdt23qUhf0/eRyrAJcUz85ou8X
t3Ntee2seHv0/eZ25ul4qkfaou8PlzPh1ryKa6PQ94erNOf1u6COEehr4XK+
WJnKqoahr5XL+REpK+9lg742rpJP2bvLOwaj7y+3c0P1CZcRg9DH5HjfTzq9
LdDXzlXiRL5zGzQAfR3cjg1RerTUHH2d3A5PcldN6Jf5T7+OTK/qEw+MsZ9D
nNcPtoT0N0Q/k9U3c47K9HFeiTixY04JonRxPSbvPnIpKLo3+pSJozrgTXSx
DvqYvLt0WoitNvqY7B2gcXadJvpUqLO2aKTDw+7oUyEladq3gCnq6FMljs+e
vIvGauhTJaUku6i4vqroY3LIfu94gTL6ujDzjxm9+AQHfV2o81vmfXWbjgxF
nxp1HljVu8a3LUPRp0Yc2THDH5//ZCj6mOyTmOd9/leGoq8rKcmuJ2Yd/ZGh
6OtKnMJx02fdbEafOnVerfV8wGlCnzqpVD5Qrq1tQJ86KcX+zzRB7wv6upFK
SPBh81116OtG7f321fiMrkVfd+rkbg77pluNvu7E4dzqLBtchT4mFx5ZHrv8
Pfp6kJJZY/a0pHfo60GcEJP3ex6+RZ8Gccwc7upalqOPzWv3vMp+hT4mx859
6nyiBH2azOv/4TY07iX6NKmzX1Bzr1dF6NMiDq3ff9e+EH1Mln1tTNn4DH1a
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
4Z+UbKLivmq9boB/Y2jYDE1uaem3zP8DTs1UFw==
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF03kwnHccx3FbLeKoY1DZOnYlzlCLxTr3Y5e1TCMNIiQxilAaKo7GyESQ
JimahCCRIKkgkohpDHE0UyxVYZAgVA63oCmpI0ZMdNpmZr8zfWaeP17zfj4z
zzPz/Njh8X6RsjIyMpHvb8b7+wOZ/6+peUHfQNFyG4n/11T7tNP0PHmFn5g7
dn344hR5k8/m/Wa68O8oWQYTjarNR8MGyR9CmVe+p8Sih6yAr80j1e2dO8jK
SGx5ZCgf/YCshlwb8VaFQT1ZAyV/xm6brbtL1kR3gj8DqpVkbfgWbk9YUblG
1gGzP4J3WfESmQmbYwz+u9QLZF00nUvLc9Q4S9ZHuHe6aORtOpkFhdJ6807j
FDIbawqd4ZzOo2RDnGcL60fF0eQd0HcoShJeDiPvhK2ujkQvNZhshOOlHlXX
E/3IxngZuGYrbvYhm8C4x/hRR7CQbAp+0+EqdXkXshl8ec3KDp9zyeZoHloc
cI2yJO9CnFwhK9vHiGyBd9MHGcW/65Mtka+8r3n3Pm3yZ3jTtd590kKNbIUf
j53uYcXJkznQS8+xNXorI3UGB20LvYs38zdbpd0aH9dN/9zYuyp1hjXcDCqa
s7peUbfBTP/SjXvVM9Rt8FN+o1XathfUbVGt8lyUX/iEui2MtHazcKiPOhcx
PsmRC9md1LnYs8G4UtTWQt0O4u/jYt1+aKBuB4cez/3+3HvU7TF2Y33A8moV
dXusxplWVYWUUXfAiUucaP/7RdQd8EwypNhgfpE6D2qi2q6A8SzqPGykaT/s
Y5yi7og55uNbk5rHqTvCxz65/shsInUnGIyqhFUfPELdCWPKnEWtgQjqzhj+
9WVMct0h6s6Yea3LC+wOoO6Cm8F6KvJMX+ouCDzxoKa1z5O6K6K+HD9nX8Cn
7oqkjdDJV+P21N0gCE2rSMzlUHdDR4PLnfS/TajzYaVj8ZFiKJs6HwpPk8v8
zbZTB7InalMsHDVaiRCGecj5RSnS88De8kFuP0tWagkwEhooq9q61SLdu8OY
FWsVYb4uNdwRKccLdT/1WuoMdzgrzXK0tuaklrjj6ReW6Y9Np2kvwNCZuzu8
F8ZpL8AnS5tGBcuTtBfA9XBJ0DX5edoLkFlWP2davkZ7IdJ0vOy4Vxn0/kJU
tFUGG8aq0/sL0RTy5M3tXPp+iRD+mcpJ+wet6fs9YCbRYS7pC2jvAWZ2dG9/
gh/tPTDA/Gai9GE47T3QXxNYk2mQRHtPnD+g0m6T+h3tPdGVwvYrHi6gvSfU
soxiG6wrae8JYfWnSll592kvQkpISbfOKv3/ECGAG+sT7z9CexGmnP6oLWia
o70I0fFB4Rf0Nmjvhbxnuza/OiMnPb/wwpWAHJ7ZMp3/DC88l4vXfHHARGqJ
F26rx9862+1A51+M4kYWz44npr0Y356U8FbuBNFejL3/LHu168XQXozkXzKs
6wpSae+NnWzRcp9STtt/iP/mBA==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF1X8s3Hccx3F6t9SviLGzTY8VG0o7TnE47vu6O+7O0vq1lXQbh7nTdD9o
0WYrdWVKWsVoRX/Q4Nb51XZ+pH6cLkppbbaSMIabky4snaLTH1OtTXLvZJ/k
88cjz8/r749jUmq0kmVkZKTcvMabd4vR/4fF6v8292ZvkEF65hvFAFdg1kle
YY4lxkUJI1rI/zD3pcY9sWv1ZCOsBUJobFZLZiOt7I7WlHOBbILCu2u6KV0Z
2QKOzq2ttuGnyVbQGmfeLu/PI1tDc2Ap5WZVFvk1OAzm9ll3ZpBtseHyU4LQ
+AvyG2gay1J5dyvJdth3gePcd1RB5uJOQ5e0ZyiG7IBqmyTBNXUkeTueDuUW
Ls3LyI746G/HufciRGQnMPevpoutA8jO4PlH33rTzZv8NricM3VRe9zJ70Ay
ahpUYu5MdkF2s2XN0LltZFe48LtVHs9tyG6IuTwnUS1bkHdgsOqtlKOP2WR3
xOnTA5b3bwgM9sB+c42cvf6EvBO7Zhwn/H5dJu9C4VeVzEHLBfK7aHPJTC5q
1ZM9MWMywZF5TpK9sM82f747b9RgtRd0RZU+/vFD1HkYaz914lVFH3UeZpjk
+P6L3dS9ofbn14yFtFH3hnjpe87LhSbquyFkaSqu+Gio78b42cR5nqiKug+4
42Wcax7nqPvAV98k/7G6mLovWpX2ZQX2J6n7woy/0Dmsy6Huh1O6zKwPfztC
3Q+dG9OREkEadT58ZNVhvDoVdT4aRoTLJonx1P3BrNfWftkcTd0fFRkdaQ+n
RdQD0HjFKmfl2GygoQdgtbL2xJlYkdbQA8Fwwnz3JkQbrA5ErOuf2baseOoC
qGO9dAUqFXUBKu45Lb6wTqMeBJW46Gd23RHqQXDxGCqYKs+hHoztKe2itQf5
1IPReHeqK2t/MXUhfi9QNNu/OEtdiO+ePfhk5t9L1BlkL5ol9W/VUGcwcHuL
cE9jE3Wg5/rOqFS7Ni0RxdxHyuzEbnoPTJYkPWfz+wzuBVIW+tY8XIdoL4Lg
ZInlfNwo7UW41fV+qWx9gvYi2BwUHBop1tN+s6/W8vfq5mkvRph+68CNsmXa
i3GcV/6oZvgJ7cW4+Zj3gZfdBu3FmHuoZBrvsnsMewmuTvQ7+LZZGAwJPD/L
EIyM2BislqDVuXbH04+3GdwrQXtLT0z+H060D0EFV1t83dad9iE4H+uQIGF5
0z4Ev3BfCWqc9ad9CC54JQcX7xTRPhTq4fyvmQ4Z7UPBSWuqe6aIpH0oovQR
M/pLMbQPRXpv9q7wQAXtpdA3lEa4lSppL4Wpg+3F8Tuf016K3HSz19dLM2gv
xaf3Uq1uHMiivQwN9Ye1o5fzaC9D/UamXOZwmvYyxMax7cJ/KKO9DJMXV9cD
Fs/TXo6lQc5fh1dqaC/H3HHzcuvpetrLodBqgt2ZFtrLcUgwuzX8ZQftw0D/
R89/EETYzw==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF1X8s3Hccx3F6t9SviLGzTdFhRf1oneJw3L3uDneW1q+txDYOc6fpftCi
zbYzv6a6VjFaM0rjRze/VvMj9eO0MerHbZqS1bS4OenC0vnVVduhtUnuneyT
fP545Pl9/fdJvjYJyREyho6Ojmzn6u7cXTr/HwZj8GrOjX4/rTT8r6VDllyD
bvIaXxEfE84LbSP/w38QpNsXtdFA1sGmL3i6BrVkJlJKRpT6rAqyHr4a3VBP
q0vIRrCxa283DzlPNoFSN/1W6WAu2RT1x1aSblQpyK/AejhnwLQ7jWwOHYdf
4ni6n5BfQ/Ndhdy9V0a2wNEKlt3AaSnZEiONPUF9qkiyNarNErjXssLIb+Cp
KufsyoKYbIP3/raZfytUQLYFHvyQKjT1IduB7R3x0+uO7uQ3YcG6UBd+2Im8
DwET+n5FhnZke2S0GNeoLu0hO2Afp1fuvGlGdkTklXmRfNWIvB/DVXuTTq8z
yU6I0aT6rEZvc7V2RrRhvYS59YTsAtdZmymv31bJrjj7WTn/uPEi+QA67NMT
C9o15IOY0ZtiiQ/eI7vhqHneQm/uhNZZbvi9oNzDO1ZFnY1fO89lvywdoM7G
ND8xdrCyl7o7srw5NXcDOqi7Q7jyI+vFYjP1Q+Ax6su+86infgiTF+MX2IIq
6h6wnCxhXXO+RN0Dnppmyc/VhdQ90SGzKsm3OkPdEwacxe4xdSZ1L5xTpyve
vX+Kuhe6t2fCRNwU6hx4iKuD2XVy6hw0jPNW9eJjqXsDW7W1n7ZEUPfGN2ld
KcszAuo+UHxvkrn2+Zyvtvtgvbw2+0KUQKntO4+fFex5JC5C6yxfRDn8mWHO
iKXORXaUmzpfLqfORdkd26XnpinU/SATFtxm1p2i7gd7Z1X+dGkmdX/sTeoU
bDzMo+6PptHpHkV0IXUe5vKlLVbPL1Ln4eqzhx/M/nuZOh+KJYOEwd311PkY
urWLd7ipmTrQ1+oSnmzRoSSiwPKRLCO+l74H7hclbDI5A1r3A/LFgQ1nBxXt
BeCeKTJeiJmgvQADPW8Xi7emaC+A2XHuifFCDe13+uNazhH1Au2FEGt2D10v
WaW9EBns0kc1Y09oL8TNdfY7bhbbtBdiflnGbxpl9mn3IrRODVp7dhhpDREO
fJTGHR830zpLhHa72v1P39+jdb8InW19kXl/2NI+AGWWysJWcyfaB6AiyjpO
xHCnfQBuW77k1zTnTfud7pboX+gioH0gssfyvuR3iWkfCFZKc90zaRjtAxGm
CZ3VXI6kfSBS+zNcQ3yltA+CprE41LFYRvsg6FubV06OfEz7IOSkGry6VZxG
+yB8eCfZ5PoxBe3FaGw4qZy4kkt7MRq20yVi6/O0FyMqhmkRcrOE9mLcq3y8
5bP0Le0lWB5m/XVyrYb2Esx/YVhqOtNAewmkynp/J34b7SU4wZ3bHfKii/bB
oP9H33/4Sdeh
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[1, 0.75, 0], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxFlHkwHGYYh1etRFOKDZpDxMaxxBH3tY7fXpYEk6IrFUUkRCeHIx0im6kl
UukKaaSKRjoI2mgVRdq0VtSUhiErJK040kUjaQXNKKWVamb2zfSb+f545vme
mfef92PHJ4claDIYjITnV+P5fYnx/9FlB8z3vSK/qSaV/5nRVaWJMJP4D/+R
TUbVh3OSiJf97+a5FGV1RxIzEHcs28xTX0zMxKqKszMx1p1YG+Il03u/NFsS
6+A1efi507pGxPqIVzlMGh5lErMQYVHVkKNcaFezIbi9Rr9WeEwRG+NynejS
nupB4k3QXFLNxxp1Em+Bs+KGpE3eRGyCj7rmpWBWEpvCUEtrsT/7A2IzeHxs
1RmkKSNmIzhrxpZnkEy8A2PptVE15jHE5sizkDNt/EKILdDQtMwKi/chtsSt
bQpp64e2xFZwuVLEkkxuIebg7tyewYzkDcTWcBt97FtY8bdCzTaYiS4sR/4T
4p0obWuR+pVMENtijBvsuz1plNgOJ/KbpiOLXrA9dIZ1jm3NVxE74OC+mtO7
qh4S7wK/+4u424GzxI442Vk6GrHxTzXLHLF6aS27q/Yf8k7oPRmTu8bSVM8r
c0Kj3vYTRREv5ndG0d5LBW/Zs8g74/pxbtPhzZvJu8B578hPiGCTdwErUpk7
Nssh7wqjtIuLOWcdybviX6W29OiAO3k3PNmVwHgk8yfvhoeZv5uFdYjIu6PE
44zA7uVQ8u448OX6A4/bIsh7IFGi/HqxKpq8B6yns58Udx0k7wmFjbQhJeQI
eU/U7Hb4rud+GnkvyGQPxPfWnyLvhfQmk5WV5Wzy3tgYkhmVcOcceW/wIrzS
ru64SJ4LjQ6O8si1EvJcMPIecIIkFeR90Fv3qZHPhVryPgiXDyw8smog74vg
EnGzU04reV+kfrO19VCzgrwfKjTTxxqyfyDvh0avJQPH1/vI+yMxydOYXTBE
3h9v86IrpWsj5IGFdvn40tXJdkLweDZlOYrf6D1gt64s/FrXUzV3AEO+LVHv
y5ep54E95Dl3/SlDvb/gQZVqrjWesF7NMh5i1/Htqjn6au7gwXpIS3co1Jj2
nY/zpczLS/2m1PMR9+P48C0h/RcyPsrTbE1KY+yp58OiPjLeXOxKvQC2t2d7
JAwf6gUITJ0fDX1DQL0AgixufuJXu6kXYHCmP6r9eBj1QqSUvdrDfOdN6oUQ
FdTlzhQdoF4IpwvrnmUI6f/rEEJnSsaTfJ9CvQhunGCRnnkG9SJMsYYntBey
qBeh5q93n7H13qNeBP37yyLN9ELqAxDimRKtp11MfQAkF9o+U2y4Qn0A5spS
jf10q6kPgFN92P5DjZ9TL0a3VINpYtpMvRiVzKR8+8RvqRejPLWib5t3J/Vi
3LA+37/Ptof6QNif+qS4Pe4O9YHI3W9Q77D2M/WBWClsbMm6qKI+EE0NljzG
xDT1QZiY5vcNlMzf/A/VNulL
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       InsetBox[
        FormBox[
         StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
         TraditionalForm], {10, -0.5}]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50.}, {-0.9949752074706504, 5.334057207810938*^-16}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"NEdyson11\"", "\"ED11\"", "\"NEdyson12\"", "\"ED12\"", 
       "\"NEdyson21\"", "\"ED21\"", "\"NEdyson22\"", "\"ED22\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "False", ",", "True", ",", "False", ",", "True", 
                 ",", "False", ",", "True", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.797467854486163*^9, {3.79746799414371*^9, 3.797468041579607*^9}, 
   3.7974681046246653`*^9, 3.7974681455387583`*^9, 3.7974682360828743`*^9, 
   3.797468403456513*^9, {3.797468453835156*^9, 3.7974684590690603`*^9}, 
   3.7974687044115353`*^9, 3.797468898523316*^9, {3.797469051124695*^9, 
   3.797469067146501*^9}, 3.797469190530583*^9, 3.7974692529034224`*^9, 
   3.797469310112705*^9, 3.7974693939763947`*^9, 3.797469428446279*^9, 
   3.797469523848424*^9, 3.79746961842489*^9, 3.7974696496840477`*^9, {
   3.797469722425274*^9, 3.797469742931172*^9}, 3.797469858708305*^9, 
   3.7974700015276403`*^9, 3.797470069744763*^9, {3.797470140903644*^9, 
   3.797470157581531*^9}, {3.797470220196026*^9, 3.797470273803886*^9}, {
   3.797470336295229*^9, 3.797470342097331*^9}, {3.797470451389311*^9, 
   3.797470481435363*^9}, {3.797470516320307*^9, 3.797470528569899*^9}, {
   3.7974705858264847`*^9, 3.797470632781145*^9}, 3.7976051615618963`*^9, 
   3.7976071018128*^9, 3.79760717921529*^9, {3.797610890968569*^9, 
   3.797610904279212*^9}, 3.797619259861477*^9, 3.7976201081398563`*^9, 
   3.797631665696686*^9, 3.797638213724299*^9, 3.801338013968431*^9, 
   3.801338068799262*^9, 3.8013381236230087`*^9, 3.801338218779442*^9, 
   3.801338448872942*^9, 3.8013385180043087`*^9, 3.80133882805075*^9, 
   3.801339987413623*^9, {3.801340105344441*^9, 3.801340153669928*^9}, 
   3.801340467432919*^9, 3.80134051511268*^9, 3.801340547781558*^9, 
   3.801340756342594*^9, 3.8013422516262627`*^9, 3.8013425144337387`*^9, 
   3.801342584859845*^9, 3.8013427402761297`*^9, 3.801342796823135*^9, 
   3.8018429118233128`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"0a419273-b583-4787-9194-d8ee01bc5e86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<H2Mat.eps\>\"", ",", "MPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.797607057136236*^9, 3.797607096724431*^9}, {
  3.801342819757872*^9, 3.801342831962772*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"680bb8be-28c8-45a6-8082-55df911738b2"],

Cell[BoxData["\<\"H2Mat.eps\"\>"], "Output",
 CellChangeTimes->{3.7976316879977303`*^9, 3.797638491385627*^9, 
  3.801342838632966*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"218e06dc-99ea-4321-96aa-a34e14e839ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retarded", "Chapter",
 CellChangeTimes->{{3.797470826729397*^9, 
  3.797470829372262*^9}},ExpressionUUID->"9218f325-0557-46c1-8dee-\
95118d392943"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</_GR.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Params", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRNEdyson", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Params", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRNEdyson", "[", 
         RowBox[{"[", 
          RowBox[{"t", ",", "i"}], "]"}], "]"}], "=", 
        RowBox[{"Read", "[", 
         RowBox[{"ReadFile", ",", "Number"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tp", ",", "1", ",", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", 
      RowBox[{
       RowBox[{"Params", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.797005433891361*^9, 3.79700544149122*^9}, {
   3.797005698348235*^9, 3.797005698840514*^9}, {3.797005989091308*^9, 
   3.7970060207505913`*^9}, 3.797006886424909*^9, {3.797506663352304*^9, 
   3.797506709958435*^9}, {3.797515796987644*^9, 3.797515844723921*^9}, {
   3.7975169252026176`*^9, 3.797516930526369*^9}, {3.7975171170852823`*^9, 
   3.797517431782233*^9}, 3.7975175123434963`*^9, {3.797517558978759*^9, 
   3.7975175718885317`*^9}, {3.797517646159463*^9, 3.79751764903553*^9}, {
   3.797517698765895*^9, 3.797517735348546*^9}, {3.797517765754191*^9, 
   3.797517768662232*^9}, {3.797517830997418*^9, 3.7975178485281067`*^9}, 
   3.797605174259474*^9, {3.797610935647678*^9, 3.7976109362226257`*^9}, {
   3.797620128099765*^9, 3.797620132163089*^9}, {3.798410213510977*^9, 
   3.798410230567704*^9}, 3.798419943907239*^9, 3.798420284883144*^9, 
   3.7984203861641417`*^9, 3.798992790627393*^9, {3.798993034358411*^9, 
   3.798993036122761*^9}, 3.801342872545833*^9, 3.8013436184386683`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"14b63a35-09eb-46d3-a129-9b8918ced47a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GLf1D", "[", 
    RowBox[{"s_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["I", "Z"], 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "+", 
            RowBox[{"I", " ", "t"}]}], ")"}]}], "HEigVals"}], "]"}], "]"}], 
      ".", 
      RowBox[{
       RowBox[{"cdagTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}], ".", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"I", " ", "t"}], ")"}], "HEigVals"}], "]"}], "]"}], ".", 
      RowBox[{
       RowBox[{"cTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGf1D", "[", 
    RowBox[{"s_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "I"}], "Z"], 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"I", " ", "t"}]}], ")"}]}], "HEigVals"}], "]"}], "]"}], 
      ".", 
      RowBox[{
       RowBox[{"cTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "t"}], " ", ")"}], "HEigVals"}], "]"}], 
       "]"}], ".", 
      RowBox[{
       RowBox[{"cdagTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GRf1D", "[", 
    RowBox[{"s_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"GGf1D", "[", 
     RowBox[{"s", ",", "t", ",", "i", ",", "j"}], "]"}], "-", 
    RowBox[{"GLf1D", "[", 
     RowBox[{"s", ",", "t", ",", "i", ",", "j"}], "]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.801343046906828*^9, 3.80134309053613*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"b2fe4b85-b08b-492d-92ec-d70aad551803"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GRPlots", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}], ",", 
             RowBox[{"Params", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GRNEdyson", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{
               RowBox[{"2", "*", "nao", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}], ",", 
             RowBox[{"Params", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GRNEdyson", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{
               RowBox[{"2", "*", "nao", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               "2"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{"Params", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Re", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", "t", "}"}], ",", 
               RowBox[{"GRf1D", "[", 
                RowBox[{"1", ",", "t", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"Params", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"Params", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}]}], 
            "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{"Params", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", "t", "}"}], ",", 
               RowBox[{"GRf1D", "[", 
                RowBox[{"1", ",", "t", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"Params", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"Params", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}]}], 
            "]"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Solid", ",", "Solid", ",", "Dashed", ",", "Dashed"}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None", ",", "None", ",", "None"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nao", ",", "nao"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<RE NEdyson\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<IM NEdyson\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<RE ED\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<IM ED\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<d=1.4\[Angstrom]\>\"", ",", "13"}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Beta]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Beta]", "]"}]}], ",", "13"}], "]"}],
            ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.8"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<H2sto-6g \!\(\*SuperscriptBox[\(G\), \(R\)]\)(t,0)\>\""}]}], 
     "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.79751797170925*^9, 3.7975180361742153`*^9}, {
   3.797519954125556*^9, 3.797519954735573*^9}, {3.7975217493002367`*^9, 
   3.797521753620278*^9}, {3.7975218878578444`*^9, 3.797521950129917*^9}, {
   3.7975227153072577`*^9, 3.797522759915256*^9}, {3.797522791244419*^9, 
   3.797522826076889*^9}, {3.797522981492872*^9, 3.7975229836615467`*^9}, {
   3.797523043875614*^9, 3.797523057598378*^9}, {3.797523362870523*^9, 
   3.797523367507451*^9}, {3.797523557956566*^9, 3.797523708495351*^9}, 
   3.797523739421755*^9, {3.797523991718943*^9, 3.797524000788056*^9}, {
   3.79752516654109*^9, 3.7975253175590878`*^9}, {3.797525386249136*^9, 
   3.797525421354431*^9}, {3.797525524001862*^9, 3.797525526629169*^9}, {
   3.797525565412768*^9, 3.797525613283798*^9}, {3.797525729093439*^9, 
   3.797525792799324*^9}, 3.797525823180767*^9, {3.797525899205019*^9, 
   3.797526079470299*^9}, 3.797526118339623*^9, {3.797526200753789*^9, 
   3.797526220428784*^9}, {3.797605619611458*^9, 3.7976056228296432`*^9}, {
   3.797605665898609*^9, 3.7976057085838118`*^9}, {3.797605740105689*^9, 
   3.797605769566183*^9}, {3.797607316316571*^9, 3.79760732151167*^9}, {
   3.79760762309769*^9, 3.7976076335600433`*^9}, {3.797607673420329*^9, 
   3.797607678246169*^9}, {3.797611077078154*^9, 3.797611143699147*^9}, {
   3.797619450191695*^9, 3.797619454189501*^9}, {3.798411229652029*^9, 
   3.798411236386766*^9}, {3.798411273539187*^9, 3.798411312608404*^9}, {
   3.798419950742193*^9, 3.7984199543605433`*^9}, {3.798420118585657*^9, 
   3.798420124860505*^9}, {3.79842015936849*^9, 3.798420162168129*^9}, {
   3.798420230684946*^9, 3.79842027108006*^9}, {3.798420371680369*^9, 
   3.7984203974676743`*^9}, {3.801343102939026*^9, 3.801343137754917*^9}, {
   3.801343276731827*^9, 3.8013432777222557`*^9}, {3.8013433266347523`*^9, 
   3.801343341818966*^9}, {3.801343384875424*^9, 3.801343400139412*^9}, {
   3.801343810332841*^9, 3.801343842982606*^9}, {3.801842930424714*^9, 
   3.801842951591668*^9}, {3.801843012954557*^9, 3.801843125781053*^9}, {
   3.801843170288518*^9, 3.8018432034334583`*^9}, {3.801843253020878*^9, 
   3.801843254263555*^9}, {3.801843292459384*^9, 3.801843360258389*^9}, {
   3.8018434037184477`*^9, 3.801843521622917*^9}, {3.8018435840602913`*^9, 
   3.801843590727919*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"4c8585b8-8ebb-40a9-9c36-377bd2d7272c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxd2nc81e/7B3B7732M44w0pdKU6r4q2ktTaVApZZQipaGl0pB2iEqkaCki
0SlRSNl778NZiGx+Pl/X+5/f+aeH8H6/7+t5v8593ffB3H1ovaOEmJhYi6SY
2H///v/XSa03S2u9L5KaZb9yXX1OcEa/vkvO/ziQtcrHj5NA9+XZJISSo0/k
N6wzvoPfDyfBa0M+pZ8J5AQF/vd6Sfb09tCGKx/jz78hIr1+b3f6Mw7f5r//
iSHLzUq5Mauf4+/HEqM0saCEUy85CsXPDs9XiCexUw9vOB39Cq/3iUz+1lHe
XfqWM2H7zZSu8Ulk/RnTIdWLMXj9L2S1aQnnn/4HTvjIbxc/+0r8piXTXsXE
4v2+kffR7X8nLfvImf6/13cSIjMw+0hVPN4/lTCDBDneHp8437vGj9whjXxt
OhW9UOEzPs9PYuRi/DHlcRJn/f9umE6cNdm1vTO+4PNlkKHxP+n1GRxOrfd/
F8wkpq5R0+a//YrPm0V8HgXn7TjxjeP+3+Md/k1M7PzcbBan4PP/IVXKQgkd
5e+cUYUcsv2Yl//Lou84nhyiFKqurvAklbPsfzfIJcIj7ddmHkjD8eUSY+3H
4hPNf3D+u9v2m3mEWTjs2dj3A8ebTw5X7hI6fv/J+d9wivOJ0uWT7i+vpeP4
CwjT9orsmw0ZHOP/HodeSOZEzk90N8jEehQS84aKux11mZz9+/57FZF1lyzC
zaJ+YX2KyerAr//Y7lmc/66m9aaYpLT6PMqZ/RvrVUKulZpGmg/95vz773Jd
JaQgeeLEZal/sH6lZKA9YK7q1WzOgv9dsIzUWTzsThmXg/UsIxkBq6ZuuprD
+d/j+ZaT8KU3Nybzc7C+FcTP0u1I35pczu+s/14VZIV95UPFmFysdyUp9E8o
FmnkcbT/94BVZB8rjTz3yMP6VxG9nR/qJhflcf53ue3V5PIT43zf2fnoUUM+
2N8Z8/phPo6nhqzv9eWF9eajTw3ZPn/H/H3bCnB8NaS6zHXqv8QC9Kol5pf7
y20MCnG8teR2/xzb4ycL0a+WxCcu/eJUXojjryNXImaPZ1kWoWcduWQvE/Ms
qAjrUUeGfUI9+L1F6FtPhq8V3ey3Lcb61JPs34cYOfHF6F1PNrVpWR/QKcF6
NZCXh22NfniUoH8Dsax9n9GYV4L1ayAnh886/5xaivOhkcQ+Ejc56F+K9Wwk
v+020H7zSnF+NBLnJUdcRMvKsL5NpH/GzMU5EWU4X5qIt+bK724S5VjvJjLY
N1szc2c5zp9m8nXc+m21ieVY/2Zy5NeXrx90KnA+NZP4T26H4EgFenBJYqd+
wKXfFejBJWtoC1f7jq9EDy5piDbOs7xQiR5cMnfJ+xUvKyvRo4Xse/W6Pmt2
FXq0kM7vJzMjblWhRwsJ8pg9eTqvCj1aybDri7keVtWcgP95tBLfqgUsp5Bq
9Gglp1VUtVT+VaMHj7zx3PfEfFwNevDI9u/1LrM21KAHj7wgR+Q0fGrQg09O
xqxWSouqQQ8+OX2mR31tUQ168In7RosPb8Vr0UNA4n/oXW0yrUUPAenmV039
u6UWPQTERVx9UeH5WvQQEq8eN9vrr2vRQ0j20dtV9Epq0UNIHrxLEzsuUYce
IqJwck1GtGkdeoiIxwm61IfNdeghIr+9ulfdOFuHHm1EIuknmRtVh+NpI5yY
yOOf8uvQp43YhhbfURisw/G1kaZtyZMnj61HrzaSpltXx1hbj+NtI37j2tY2
etWjXxvZVvRO3ftJPY6/nRQuV0irSq9Hz3ZS7jooo9lej/VoJ/tEzzx0aA3o
205KFptFc6EB69NOupNql/o5NaB3O5GO0eF232zAenWQqDezJsyIb0D/DsJI
S3wxv6oB69dBJldMkNKSbsR8dpBehm7px0mNWM8O8ugiI81kfSPOjw6yc53A
0f54I9b3L8nPNt26L7QR58tfkqd8b97s1Eas91/y7lXt67yWRpw/f4l3Xt6K
OapNWP+/JM3MNGb/jCacT38J0GLP2G9tQo9O4phhbsM604QencT7hfuPV2FN
6NFJznDmnhr+0YQenYRNbNX0eU3o0Uk82XcZAyrN6NFJqrriV0SYN6NHJ5kW
dd1Ue3MzenSR18Fle1aeaEaPLnI74oD/0kfN6NFFfm0TXyHPaUaPLnJy54EZ
AbXN6NFFrpYe4JVLctGji3xVy1Lim3DR4x/RMrKb9XUpFz3+kT9fGqRtD3DR
4x/ZsWku7cNVLnr8I9P7p6nkRnPR4x+Z8jnyfEwWFz3+kTzeGa2NAi56dJMV
r545JCi3oEc3mXxOSa5qcgt6dJNkzaSI1NUt6NFNPLS/lzi7tqBHN2HNX0Ty
r7egRzcZe9TFqy+6BT16SKGan3FtZgt69JCyVf8KL7W0oEcPSfo+yYIn24oe
PaSRldysPLYVPXqIdtf2s8LFrejRQ2YFVD+97tCKHj1kOXsBr/lMK3r0kg1N
gf3Dwa3o0Uv2OpEjBQmt6NFLesWjhHsLW9Gjl1jsvKwW096KHr1k7ZTPXgnK
PPToJeHdu1O9J/DQo4+UdZfe77bioUcfiTJPvmlmz0OPPqIUJFprfJKH75d9
hLY29HjGPR569JFTYtbRpu946NFHbBzf+y3L5KFHP3lcpPTRsIGHHv3kXF9R
3otBHnr0k9M3O8/zdfjo0U/M17090DyFjx795Enr54mBy/jo0U/0NclBcQc+
egyQxNd5WcYn+OgxQIqlr3X/DeCjxwD5YzJw8/QLPnoMEFsLMi+Jw0ePARIv
0xP2toiPHiO/f2yb8xYBHz0GSO30qfM/SArQY5AorKv6mkIToMcguSTh/Nh3
igA9Bkmc84Xz/VYC9Bj5+sA5rTHbBOgxSFK83cWG3QToMUhmhel1XLsgQI8h
MmV3373MBwL0GCLMmJ2BidEC9BgihcNbouw4AvQYImGLM7xe5wnQY4hoDDvH
vG0UoMcQAdsi2d09AvQYJrvGnTNNVRCixzC5qfwnt9BQiB7DpOW6cvR9MyF6
DJNv6r4uMiBEj2EyrOz5a4yNED2Gicsw/Uy7gxA9xOCR1y9LlyNCHI8YTGLm
JN09L0QfMVj48V7iwdtCHJ8YRLSFiARPheglBv6efrr0GCHnf8PdJwa010ai
Po4Q/cTA+e6KGRf/CPH9QQy2eU99/qlCiJ5i0BhvIh3cKsR6jHx/XZLG+B4h
+opB/5mft+ylRVgfMVCd67DESkOE3mKwO1jUlUcXYb3E4Zj5xP1Kk0ToLw55
K4x3t80SYf3EwV7e4t2ZRSKcD+Iw9/Iiw/jVIqynOHRyXI4E2opwfoiD+eEN
Z032iLC+4hCfLa5t5yrC+SION+Z1i831EmG9xeHPx0k6KWdFOH/EIXGl1vi/
fiKsvzhs3R6p+Pu2COfTyNef7B+sDRahhwRIfbR+5v1MhB4SkN7NlVsTLUIP
CegCt2cZ70XoIQGCoRtrBZ9E6CEBr1If8hK+inD+ScDve95bTH+K0EMC3sl/
8Vj6W4QeEhC17uZYhXwRekjASimOjUeJCD0kYHt5aoVvpQg9JCBsQsrbBXWU
hwQstLwYG9pEeYw875VLRRGtlIckDMZ1SmwUUh6SEOT6avzLdspDEgpUyZyI
TspDEnjT/rKXdVMekmDVkVZ9q5fykITndBeH8/2UhyR8N9vwhDZIeUhCmkbY
vS1DlIckHMiymDdvmPKQBI/GuICfw5SHJBx863Krd5jykIT+LYcW5A1THlKw
K9cv0GaY8pCCa5cXPfcaojykQLet9IDVIOUhBS9ql/Pi+ykPKWBmWE3P66U8
pGD5sxmr7nRTHlJgWGKxqL+T8pACheoJbIUOykMKzny+McQRUh5SIGP9pNGQ
R3lIQf/6VTxGM+UhBexXE8dk1VEeUrC92Oc5vYrykAZBnMVVvVLKQxruSgi4
n/IpD2nwCcqrlPhDeUhD0LNU378/KQ9pULxqOXztG+UhDRsLVxzMSqQ8pGF7
QQg39gPlIQ0bJnqEWL+iPKRhxpTQ12fCKQ9paJt2gtg/ojyk4cZtnnfrHcpD
GioT7P2MrlEeMiDXlnqv9xzlIQMn9c9lnTlOecjAzhXH7F67UR4yoGbZ6+67
l/KQAfL8N8huozxkIOkSs898LeUhA+Zzr+TKWVEeMuB8oav/yhzKQwY8Tie8
/WBKechA/eFjY/wYlIcMKN00uSOvRXnIwIZg2VkzZSkPGQg7F75MqU+IHrJw
LjtV9iZfiB6ykDfRJSa5inq/l4X6Z/kXH+YI0UMW8qX3phinUO//svBa6130
hg9C9JCFS4luF2aEU+uBLEwz9byRcleIHrKQOvhOZegitT7IwqfprNXNHkL0
kIW6pYU3z+yl1gtZsDSppKduEKKHLIQar16csIhaP+SgS2i+1G4atX7IgaN/
gOdrY2r9kIODczfrv1Wm1g85sF2z/bx9vwA95GB47o7+b1xqvZSDtS6i/PxC
AXrIgd8CH7v7KdT6KQdp/GV18m8F6DHy8zfWfzILptZTObimuM9c+rIAPeQg
ZrbikxtHqPVVDlakntuUvkOAHnKw0/Xz87hl1HorD581NnM3Taf6B3nQ5N07
9NJIgB7ywI3fdfudLNVPyMMNnemRzu189JCHTYVjpMvL+OghD5M3l0oOf6f6
JXmIV/PpL37FRw95KKRlWO27R/VP8rAvuWVO1Gk+esiD5Mwb08IdqX5KHu67
F1zZuJqPHvLwum1t4OcZVH+lAFNi+pJLDfjooQABi2aufytB9VsK0Fr/NWZe
C9U/KsCD5MQ557N56KEA7yweLD4bR/WTCpB3xGjK7GAeeijAvS+7bSPPUv2l
Alyx+WGY68hDDwWwlRWUxq6g+s2R+81LFqyfwkMPBXiWve1jtCbVfyoAay77
Nqeb6qcV4H7my2r/8lb0UIQZ4rGDNA7VXyvCwODMlQ5hreihCCVj1o5z9KX6
bUX49HtJu4lTK3oogp+Rn1z4Cqr/VoRTkuFZ1aat6KEIJ9dYhZSqUP24IvwT
mpfdaqP2F4qQvnJ9vVxeC3oogl16sB75QO03FOGhg1HZjLst6KEIlW7dl1s9
qP2HEny/tu28/aYW9FACwQPfCQ9mUvsRJVhR973SX7sFPZRA4ajz8NIuLnoo
waYT5cKUAmq/pQSy+d5KYrFc9FACxrePCcO3ueihBMsSxTemuHPRQwlqNuYt
WLaO2o8pwftdYaW3zLjooQT62sKLj5Wo/ZkSTHGf/tS9ldpvKkFWSLu/XHoz
eigD4/aLN3sjqP2nMlxMKrG/dL4ZPZThc5mEjNsuaj+qDKUtkUMG85rRQxmm
zFoeHaBH7U+VYZevk0tWZxN6KEPU3ith2TlN6KEMujdM3wS9ovbfylDpVCaa
fKUJPZRh82taut8eaj+uDHH6ng/eLGhCD2WwWXHyyyMatT9XAe4jTsjGzkb0
UIEFi8rvFf1pRA8VCNzkJst+2YgeKtCsw9ww90IjeqjAWfOIUsMdjeihAv9M
4vszZzWihwowE431rdUa0UMFvPzj7l1raUAPFbgXuzM7NKUBPVRA0lljvE9w
A3qoQFtpmdhkjwb0UAHN9qLEF6sa0EMFPJfPi+8Y04AeqrDScOsWxUHqfEYV
Zi65P9BRUI8eqvB65wm5qFfUeY0qROU8r5h6sR49VGGsXEPZZTvq/EYVsiJp
jm/N69FDFaZnbaqMlK9HD1VYsuZPhHsNdR6lCm469Qzl+Dr0UAX104wY7xt1
6KEKP0IWfkrcU4ceqvCFY/7otwV1fqUGJSmayR9UqfMvNfDwnevj2kidn6mB
7YaZS/oTqfM3NdDb/ttzR0AteqlBhIH8kbuOtTheNZida/b4ydxa9FODtJYf
DudVa3H8anDwcCh9bkMNeqqB2rGMuekJNViPket5RxhMvlGD+xk1mJVRPvaA
Qw3WRw1Wlu5JOTWTOi9Ug/ZHvhud5KnzRjU49zL+sm1iNfYPamDy+JXwlkM1
1k8NYlccf3VarhrngxrQSu0CDN9WYT3VoCZp7cFDm6pwfqhBcpmsold/JdZX
DfQTuhfPeFqJ80UN3Jw2N0cuqcR6q4HzaVZ6Hq8C548aNKSbJMYFVGD91cBP
sfeWzcwKnE9qUOgmaxJZWo4e6tDYd2t5/GnqfFgdxH69LzrPLEcPdeg1tQ9X
SCtDD3WIenLo2lqnMvRQh7+BDx3XK5ahhzqMm+alrPWmFD3U4VC4/85760rR
Y+T7T1fOLO4oQQ91MD4kc6jsbgl6qMPeNqnWx7NKMG/qAM6nfMeXFKOHOtw1
vcP0PFGMHuowIHB4fEmfOo9Xh3MTu2p2fKbO89VBQ2dNRr9dEXqow/abe+Y5
DBSihzpM+sYyvvmoED3UoSLs0JZL8wrRQx1ezTbJWlpRgB7q8DlG27HgZAF6
qIPaPAXFyQYF6KEOegkpkesT89Fj5H7mXSZLtuajhzpsZax2l+vJQ4+Renoe
PBZ0Pw89NOD5sRrW4Iw89NAAoz0zHKfl56KHBpi0lJvOcc9FDw2w22Z5UEM1
Fz00gJb0TOXbqxz00AC/W+uUrFfkoIcGMNR+vVqQnY0eGlAcUfztqXw2emjA
YUHowrjFf9BDA+JuJOiePP0bPTQg/aDntK6PWeihAbMkS0+btP1CDw0Qt74t
UJ7wCz004KJe55F3DpnooQHVpwTiqkEZ6KEBfTvEAyblpaOHxojnfC05hXT0
0ICenOmXny/8iR4acPAzv07uxA/00ADVv7Wsae/S0GPk+ZZ0LGY2p6KHBoSV
bLEqN0pFDw3QfxTCdtj4HT00gLvpbl3s1RT00ADP8KUXSr5+Qw9NWLK/Q+7P
v6/ooQll9L9eD0y/oocmnOH7RLumfkEPTbitFWezfUoyemgCh3epfSjwM3po
wgWb8uCtUonooQnPe3fvOeyWgB6asMzWZ/vSko/ooQnRw+NC6hbGoYcmlL7N
nrck+gN6aELOvOUbj2m9Rw9N0C6OHjx2+h16aILgiduLh1mv0UMTYjUOcztD
otBDE2pWFnYpHIpED03Ywv+iVE/C0UMTmHJJB33VnqKHJgTnGId0fgtGD02I
+dMuurP7HnpogpJPcUiHtD96aMK0+1OPH1xyDj00oedrWc43/d3ooQm+fOXc
GUcOk1EPTTBP1qMV9lwkox4j432huHpKRQAZ9dCCtw3WXZmWD8iohxbkpByU
mRwcQkY9tEBmfMM51uBTMuqhBV7HQy3OmUaQUQ8tYN8qcIuye0FGPbRANeVt
872r0WTUQwsSTq9wsfz0hox6aMGL3KN7Mv6+I6MeWrBmh1ZdxtX3ZNRDC46t
DqMFM2PJqIcWTLOm/52TEEdGPbTg4Qy5rY/XxJNRj5HnfXJidmZDAhn10AJS
tuBUnHciGfXQgoHxbTo71JLIqIcWpG9W6E2KSCajHlpg8VVGJ3cuh4x6aEH5
yU8xmfu/klEPLYhsuMCXMP9GRj20ILxi1xzVgW9k1EMLFp45dkeQlkJGPbRA
cuu4weCb38mohxZwGzWO6W1NRY+R3z88RsyBlYYeI+PtDg49yktDD20Id9fd
vCb2B3poQ2B7sKno1E/00AbVlaETNlqno4c2JHkqbj6pnIEe2sC4sS5pd2EG
emiDrdtuJ7mQTPTQhhui1P0H9/5CD21YU30r49KkLPTQhmobn1C7jiz00Iby
zsaepoTf6KENPoE/+GN9/qCHNoSEZd+kWWejhzaMaXt3aqd0DnpoQ0DAiqey
TjnooQ3dY+iLL2fmoMfI8/p5HK4wzUUPbZB66TVH5mYuemjDLeH0aMn2XPTQ
hvHXA0vz1+ehx8j9Tp8u9IzNQw9tCHMKiuFq56OHNrSZ3zo3ySsfPbTB6XzL
1vkl+eihDcca1dcZWRSghzas79rlnRlYgB464KGq1ra4rwA9dIClYp1xZVsh
euhA7DtZ44eJheihAztrrBXd9YvQQwcKP+e+0PAuQg8d4Hnaa54qLUIPHfip
6Lf/1Zxi9NCBhV9SUsIeFKOHDqS47Fm8818xeuiA/8cQuaqNJeihAyZdZ8yZ
H0rQQwcWKAtqx6qXoocOROiGzxG6laKHDgTlTd96LKsUPXRgUGJw35cJZeih
A8WBZpfSLpWhhw5wOSnlV+vL0EMH2DEnbyhDOXrowK5bNd9WPSpHDx2Y3GXx
ZGlPOXrowPyD/usGN1Sghw7cqgrtd3lbgR46UFRUl3lPoRI9dEA+9CL3mGMl
eujAhvU7fFS/VqKHLgRktyXu1K9CD13wCDzwc49HFXrowpbAu7lGf6rQQxd2
FVbIXB9XjR66wFBZeu/12Wr00IU8G9foc6XV6KELdgvnJ0nSatBDFwpqNHSM
rWvQQxfihJtParjXoIcubNpx8GLloxr00IW7KwUZPuk16KELmfFJDT1/a9BD
Fw6btLkuM65FD10Qm1885LqiFj104cuJ7qkHPGvRQxdWZMmHWjypRQ9dOL64
p7oqsxY9dIEfXx5g21WLHrqwzLt3xXPjOvTQhZUy3178XF6HHrpg8TnDKulo
HXqMPG9IzqcLIXXooQuRuh/DjH7WoYcuxGedDPJrq0MPXZBxXzTvJ60ePfTA
/PlSdtGievTQA8m2+tY453r00IPisCtm++7Wo4cejP2X7NeUVI8eehCtwHw4
q7EePfSgXHN31yblBvTQA97VRfOtZjaghx6k7bujKL6jAT30IPT49IFrFxvQ
Qw8OZSlHN0Q3oIceWDL1YhXyG9BDDxa723wY7G1ADz04//CrVTKjET30QEzy
qNTypY1kdP+pB0zvk/5PXBvRQw/myrSf+X6nET30wJ0rcI/51IgeemD/0l/y
YHUjeuiBrVV7Nl+qCT30YIvLjKMWE5vQQw8ONhzzW7u2CT30IH+46I2ZRxN6
6IHZlCM+RQ+b0EMP/r7b+2BJchN66IHjzozbZ2qb0IMGsg8+KZ+RbkYPGqxc
vDrcakIzetAgozeoI3dVM3rQoHRRwl2Tw83oQQOTgU9jyZ1m9KDBlbxYK/rH
ZvSgQaIg+WpKSTN60MA7nHd3Un8zetBgz4HNw7ZGXPSgQV4Kbd8KwkUPGjAO
bXIctueiBw2ORZkFep3nogcNBP65Ie+fcdGDBq8eH1F9l8pFDxpMOrju6qFG
LnrQoHxNXFSbdAt60KDgcK/S9LEt6EGD00kXV89a0oIeNHDQzpXrc2xBDxos
e+FSftq3BT1osGbTgMO38Bb0oMHYlQssUr+3oAcNzsYoDfnWtaAHDewv2K+W
EW9FDxqsOLcx1cq4FT304c7S8WIL57eihz5wLy0O7dvWih76oLfZYp778Vb0
0IfqN7+8wu+1ooc+RAwKhXfet6KHPjyr/k1Idit66INLQ5bcc14reuhDyz1/
7k9ZHnrow3KP7tPhbB566EPGFHMnS8JDD304z/2w5Po2HnroQ08QfLrvyUMP
fTh3T7RrWwAPPfTh+Zip5UVRPPTQh4qpf34ppvHQQx9Umd15PVU89NCHtrgF
t0N6eOihD5aK4dG96nz00Ie6t/e/KU3io4c+FP3uP1a0mI8e+nDo4PRDm7fz
0UMfFqcYrbnuwUcPfdB/zkjwus5HD30QSE5erxfORw99WHgg9ZvrZz56GMDF
iKFXXnl89DCAzcdvJs5s4aOHAfxcknUrcpiPHgYgLYgpy9IWoIcBSNxpnR8x
SYAeBvD6Qv7eqQsF6GEAs8de6HXdLEAPA2ji/3m+w1mAHgYgv85Gb9hHgB4G
MD7vUJ/NXQF6GMAPZYe+TS8E6GEAl7+Z/1BIEqCHAWytyVY6nC1ADwOwD5U5
41snQA8DWBXon7miS4AeBvCoWCWcIytEDwO40cxOrqcJ0cMAznIdMz5OEqKH
ATg9djs9Z74QPQyg80i1v9MaIXoYQJXH/tglu4ToYQAZWzMi8g4J0cMA/jjU
GiidFaKHASQtj87puClEDwNIoC3zufRYiB6GcLRfsuHHGyF6GELYX7ukD8lC
9DCET4GSP1dlCdHDECw/tH6/VSZED0N4kbTI4zxXiB6GEHT0YhD9nxA9DGHp
TM8+R0kRehiO7C9Mt9qqidDDEDYt0jvdZShCD0Mob5Y0mz9BhB6GEOlpMHPK
TBF6jFzPq337LxChhyEoRl5wV18lQg9D+BxJQHyLCD0M4c5T2YdBDiL0MIQ/
6bOWVzqL0MMQVBMjTDI8RehhCENf3ojt9BGhhyGYdk17G3xFhB6GcGhBoOz5
WyL0MIR/5hW1akEi9DCE6rQLusvCROgxUt+G1xfGRYnQwxDSmtQk38aI0MMQ
6NlDR6sSROhhBEdOOH2M44jQwwgkr9ZEz/ghQg8jyF8eOtsuS4QeRnB4ydkF
E/JE6GEEXmUqkaHFIvQwgmSfM1s/V4jQwwgYvTHEp5byMAJLu3nWrY2UhxHo
Z+/eMtBCeRjBZhu6Y5yA8jCCTCOjXdrtlIcRWEmnzjbspDyMQObWlPqMf5SH
EWR3zdhC76U8jOB58e5rtH7Kwwjut4qf+DxAeRjBdAdtA6khysMIfhvYuf0d
ojyMYN3Ple5+w5SHEXh81h/zY5jyMAIIj7vycpjyMIIgg9Sw6cOUhxE8aHvu
tXeI8jAC7W1eKvMGKQ8jYAulDyf2Ux50SDlR+ry6l/Kgg3HIZE50N+VBB4fF
7T/oXZQHHRz5qb/ndFAedLj+u6ehV0h50CGfc9V4N4/yoMNM6TG33ZspDzrI
8XU2jK+nPOjwZfF270tVlAcdLIMCmNdLKQ86XN3fvseigPKgwyXZbTv9/1Ae
dCg7A1OupVMedBCZv/83JYXyoEO267qiU58pDzo8ebuq3T2W8qDD6f69Lqqv
KQ86xLVUu26KoDzo8DLoipFVCOVBh3d+UeHldykPOhxZrmxmeJ3yoMNm+bZG
6QuUBx3i9aX7Hp6gPOhgZOkaWHiI8qDD/qL3nZ8dKQ9jsGOkzV9lR3kYw3b6
38hL6ygPY4j0b9rvbE15GIPGt9APfRaUhzG8WO2cMsOM8jCGD/FNWTQW5WEM
/5TalaK0KQ9jsF8bldwoR3kYg3eHi8HvfiF6GEPcxPQ99kIhehjDzgXehY9r
hOhhDG3xB99dyxOihzHcCA2fOSZViB7G8O3GusgDcUL0GLleyZtl258L0cMY
FPzVdw7cp9aPkesfKzJdcZlaP4xhcKxDv7WXkHz6n4cxPKvXUm/bR60fxtD7
aM3HZZup9cMYSPHOGeusqfXDGFoiLhTKzKDWD2PYcbWuwYVFrR/G8Gv3+Tfn
1aj1wxiCNlv7LBsSoAcDHPPqwr/wcD2UZkCGe61rY4kAfRjwsDNgQnKaYHR/
pcqAPyulxi95L0AvBsQ9VEw8G4rrJY0BbvPNprleFaDfyPe7w6sVjwlGx89m
QLTMRr0dDlQ/wIAI2zQzh1WC0XqYMSDmF8tLbzbVHzDg9bGpSy4wBaPzdQ4D
rKSWtj9VpPoFBviy1/zx6ML+ZxEDfPo/Th+o4qP/yPN8O3Z8Tjr2Q6sYkLpJ
vHNCDB/nAwM6+xYP5QRif7SFAd7jn4gmn+fj/GCAyZYmxsKD2C85MKBWw4an
sJ5PRj+fYYBlp8+LaxbYPzkzYFHBkfffGXycPww4Ke+754Ms9lOeDGj54qRj
J6T6QwYkubDGfi7gjXqcZUCbs5QwP5HqFxngHhSVEfGEN+pxdeT6E/9pTbvE
w/0uA9R95U2POfNGPe4yQGGtlbPnOqqfZMDaa2TKlJm8UY9QBnQVZRQ8o1H9
JQP88uoT8gexX37BgOP3kuZwaltxfo54b3oTsy8N++cPIz9vYnku80Urvn8w
YEuBvDTvGvbTyQwwba4LSndrxfnLgJkZr5/sscH++icD7si4eSRNb8X5PFLP
WPDI124d9chlgHT/1qEX3dT+gQHdsRLu80tbRj0qRq5nfX/irURqPzEyP8+d
9QsPbhn1aGJAAceS73WK2l8wYKHC2hjFHS2jHm0M8HBdNdt+fgvmgQFnPbMr
PI1aRj36GGDx5aTY6kEu5oMJF+P6xZoqcD8lzYTLLsPzFiZxMR/MkWbfUnNX
MBfzwYTvUU51xJuL+WDCE8NF8g22uN+iMSEj2bdp5Wwu5oMJheRviZc2F/PB
hPqMlcTpL7WfZELwV5vjRrnNmA8mPHqcXvfgDbW/ZEJil0dl8bVmzAcTHM4a
/qx0ovabTNBxujT00roZ8zHyfb+TdfNY1P5z5Hr/fuTeH8L99ComaJydNSmh
rAnzwYStm4NXP/2I++stTGCUZz5Yf7sJ88GE8FOPnbJccb/twIS7L3vpqsub
8P2UCX6tX2kGY3D/7cyEHdKN8W1DjZgPJlyx3mUbUNqI+WCC46/p2/o+NGI+
mCAuf9Rwin8j5oMJ9JmWQ2ZO1HkDE5w7P+3sW9iI+WBCR9fkkFsGjZgPJrxP
4up1dTZgPpige3jdNJM/DZgPJjDjaq1ZkQ2Yj5H6vJ32ke/TgPkYuX+XqPai
bQPmgwl3nnPH86Y2YD6Y8PymDM9YvgHzwQTRqk1X2LX1mA8mdPlIOvxLqMd8
MOErzbHwYUA95oMJHs+7rBWd6jEfTFB+sE1zDanHfDChItox1EGnHvMxMj9W
6y5bIqDOn5gwXuKp+8D3OswHExQL9p+6GESdRzFhdY5MZtXhulGPJibsdbNJ
UlxKnU8x4bH+5jhFozrMx0j9o+x1qztqMR9MuFE6YHUpvRbzwYSF33ueiIfW
Yj5YYLZ3v7/NUTyPk2bBYblnh48tq8V8sKD419row0Z4PqfKAr74zjDoqMF8
sKA1Uimx6UcN5oMFcT94m/cE12A+WCBTUlX58VAN5oMF1jTj2NrFNZgP1ki/
PJ806NZgPljwJGB15uli6nySBStXWek1nKnGfLAgY+D1zAET6rySBWU3gtp+
ZFVhPljwhV+ta320CvPBApUp9JNetCrMBwucPb+37uRUYj5GxlukOmdgbyXm
gwV0NdrMdQqVmA8WlE/9E2tHndc6sOBOb99V440VmA8WHISV1x/1lGM+WHDM
cI1//qNyzAcLTv07vj8NyjEfLKDtmSg60lCG+WBBc9GrwYrLZZgPFvgvsHCR
mlSG+WCBjmuvVuvvUswHCzgWCvn+h6nzaxbsCj99/q9GKeaDBU4vt4vR4kow
HyyY1vNiotiWEswHCxQdd9a87CnGfLBgo42HuG5QMeaDBXPeVrktsyzGfLBg
k9RNBVKB5/cfWLDY0DO+/1QR5mPkfrd9tvoY4Xl+Mgs8TR8VZiYXYj5G5kNH
vHr1jkLMBwvGTuB0Jg0WYD5YoDH4aJ9jSAHmgwWaRpbrSucVYD5YMCA6G0yr
yMd8jMy3n+unjztJfZ7BgrDEAElJ/XzMBwuStmn3vk7Iw3yw4JZZrPiELXmY
DxYkDM9W8uzKxXywIK/OXu7OnVzMBwsKx9U1XZiWi/lgg7BrV+CybPw8R5oN
tSkuGnUuOZgPNhg8vWRto4Cf76iyR9b78WvM1mZjPtiwQTnV9oDfH8wHGxxO
zHuw6ftvzAcbTpq96u4cyMJ8sEFia/2B5bOyMB9sULa3r9546Bfmgw3Rz5au
pL3IxHywYVDNLuxhTQbmgw3GY9vLCvQyMB9sSCrm8bPXpWM+2PBR+Cb32pWf
mA82TF+qc1Hh6w/MBxteuTmLrelOw3yw4ddaOytbszTMBxuYVrw1kxxTMR9s
kJZyY2QE4+d9DmzIJMcTp+elYD7YkNZTYOwql4L5YMOhByc2ei34hvlgw5PU
Ezs2enzFfLChOK3rnNJGDuaDDZG0tUp0TjLmgw1LXawP1k5IwnywYZxM1+tt
dxMxH2zYN3UW78ZQAuaDDWe8zs/2cYrHfLDh4aTSl+Z5cZgPNpSZhm97ZRmL
+WDD5I7gPW3h7zEfbJhyN7paQiUG8zHy84ovC7MFbzAfbJBUHmO1lBON+WDD
mE0nlngEvMB8jNQzrIy2yyEC88EGQdHXAVXzMMwHG9Sk9+6gS4diPtgQnKZc
kxHxAPPBht4OB8npS25hPtjAlxW/W5Dli/lgQ6D7knIx/SOYDzZMtSubFf1g
B34ezgbFOGjkHTk7+vl+ExvW1R9XTDG/gX+vMFLve/NdJ/XeHf28v40NV7Uf
RqfaBuPfL7AhRbGQpVLxZPTz/z42ZGvcrw1QDMe/ZxgDx/sCttTNjeT8H9jG
a0E=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k8VO0XAHD7vg3GbsxSIq3SXp5jSeqtlNIqLdq1p31XWrWXNhWJSqVE
omJs2ZOl7MtgjGU2FEL4eV/n/vGbf/pouPc+5/ucee5z5xzW+l3uG+VkZGSa
5WVk/v33/1+t3KP6kbNrj5wl2t+/eRQNSPHn28SxXH/5/MGf4xj+wkVxj4nY
dYfqzn7q/WekpNR658Q+KffB/X9fL4n1kmUBob3U70eSvN+ffeK6pVzRon//
J4poPiym+3ZRfx9D6nOq7hT/lnLVSkJ3z1T7SPLPJP6paaOOF0+m1JnMvy6R
cq09r6V0WH0h4leuoY0t1PETyZQHbpoCgZT7bPCvS0KTSMSxxseX66jzJROH
cQd2lFZJuRP+e6WSYXs0r+eWUudPIzHHt1hsKZJyUzusBs/wlbCvN0989Y26
ngySZHNXeidDynX/74SZ5Jmz8TarZOr6ssgth9i09Z+k3Noj/x4wm5TmuzFn
RVPXm0tK7q958v2VlLvn38vb/Y2Upf/aKPeMuv48kubz6n7VQyl3yCGfzE1/
v27dLWo8+eSiJ1dw5ZKU6/rfCQoIp0t9sfdpanwFROnIksLag1Luv2fzvFZI
zJ4U3FDdSY23iEwPsEsq95Zy/xtOSRFRW/D0iscKavw/iKHdW5sjC6Rci38v
h/GT3NRZ+c3ViYrHT7J0hfLz5MlS7uZN/76KCdvumIRvQ8WnhNh4l5W/t5By
/z2afmQJeWsW+MxGj4pXKSnLPuLvpiTldv57uI5S8vbDwzhGtwTjV0ZkAhcf
uS+UcO3/O2A5OWJor5JUJcF4lpPnLrYhN79LuP9dnn8FuSua4U9LlmB8K4ln
5YOOGe8l3G+5/74qyTjbaDt6qATjXUUWnKSde3BLwqX/d4HV5GH7mjHfzkgw
/tVEa8e6fW/2Sbj/Hc6zhpy8KXw43VuCHjzik8eTHnSX4Hh4xGjRyLj1DhL0
4ZFa1ff2f8dKcHw8cvCeZ54zQ4JeteTkTPnoGRrUeGsJLX3HVH63GP1qSeqh
eW+nN4px/HXESsbW2+mHGD3riM+KK896k8QYjzqSmxSauuGNGH3ricXzS7ST
98UYn3oiecHizfUXo3c9MQ3Q8MvcLcZ48clvpzdz/6wSoz+f5A6YXy13EWP8
+ITjaBOya7wY50MDeS6zoOyjqRjj2UBMC8MCohXFOD8ayLoRv2jeUhHGV0Be
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxd2Hk8VPv/B3C7LNl3hlnS+o1Qt6h83nKTe0OlTZtKWdqlkmhzSyoqkkqh
/ZZ0lWiRGNlJWcqWfRtmt2QL+al5zz+/84/HMWc+57xfz/f5nDMfmscBV08p
CQmJfkkJiV9///8WpJW0rCXwGskzuEKZs+kCU7T/kHyxP+byamMM861xCHfV
2yRiPjwesF/6AX6eSjqmTNErdktg3or5taWRqns0xpz/nuPxmeTcVZt4C4kU
Jm/Vr/98IA77ymU1Z7zG7+eS+eGUO5RVaUzF6ge+ixULSKCPb65lwHscr4jU
yc74ahXPZM7YfCW7f3oJ+ZIYqxe8/QOO/5nkBlTdI33ZzIcT365+UEbkr91c
5HA2F89XTnQ8Su+HaOUzrX5vX4j66+xIwYMCPP9X4uy3ufigZREzp3/6xBkq
Sa6pr7pEVjFeTzV5+lp6zkWnEqbr7xPWEKNZMX0SNZ/w+mrJzjvHzNZ6lDJb
An8N+I2UvZeoTz9ShtdbT5T7/V8/sy5nHvx1eb4NJKat8kb/aDlefyOpZa/+
fplZwRQpNJMw25X2B4O/YD3NRCfi+Pi1JV+ZjqITkDW+8o97pSqxvhaSGlGQ
/k92JfPX2TZfaSWbv3rnLA6uwnrbSKTttWVGpJopKqeNGOdMq9IZrcb620n5
2EbJqW9rmCa/Lse4g1RV9W1dcqgW8+ggsnr+l3bO/sb09vq1sUjc0JqZIaxv
mE8n0XtgWh8bX8f8NZpWUie5nFbh/HBtPebVRXbUl5lfU2pgDvwarr+L/PXH
mgWeWQ2YH5tcVA9lqB1uZNr+HpBDTgZ8SLk0tQnz5JCM9g/JVdVNzN+XF8Il
jFOHBnrsmzFfHrnzxyvK+tvNzE8lvzYeyd3qsli3txnz5pMMi8gCM8cWpvbv
CxSQ5fU3LW/FtWD+AuJnuGtobW8L8/dwm4Xk6TqVG+4OrejRTeYsz4x4EdOK
9XSTPLvhPY68VvTpJhKliSl02zasr5uUU1YNLrzShl49ZH+O9seIpjast4d8
MxwpoJi3o18PSZ89EtZ0oh3r7yXLtWa/q/jYjp69xEDA/tGn14F59JJPLr0j
xLMDffvIdMtrvikvOjCfPrJ3f7n68pEO9O4jdQ/OxUsvZWFe34nK46t1tZdY
6P+d5O/4GVVcycL8vhPXeaYxFUad2A/9ZDi5IVvg0Yl59hN11n2h4ZNO7I9+
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
zP8DnNQUWA==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJw92XVcFOv3B3C6G3Zp2EDF4CsoKmI8B7wqmKjotS+gGCAocREDFQNXbEQU
r1wTxMIExLgriKDS3d1sjCJIyw/dM7/5h9eyMDPP531mZvcctsfulZ4yUlJS
PdJSUr9+0pvnyK+N4h/QS1jYsD+SSN0Zeev0/6/vknXzooY5wxT/ldkJwYpX
CYRhH157rp9+/yWRt849f6ab4l+L/rWlkDz7EFcTMf33/5EdPiVH57ZSfOGK
X79JJUHV1se/V9P/n0626A8Xzyqk+Cpld/bMUckky/WfyRlk0Pv7TA7Epiby
XlH88RvPp/VYZpM79pEx5+7T+88l1uv2HJ8QTfHvjv532Z184rB19/xNJ+nj
FZDBHq/ccYEUf+rvrYg4JXeYn/6LPn4xsX6rspTnTPE/9FiOHqGEjNm++wBr
Cn0+ZSShlNvkakjxV/4+YDmprT+RO3ZEjOdXQc7dmHDtSpOY37D/1w4ryc2L
aS/jM8R4vtWkwnXo3w3xYr7fr9PbU0N8hzwFz3hiPP9aEq20dO7j7WK+RKOe
PJeNWbp8vhjXU0/sPr+tj2aL+U6SA5CGA17554ZEuL4G4jU5SsG6VMT/dbSN
5xvJicWzDh1OEOF6m0jXI7t5h0+I+JLlNJGE8HH+NhtEuP5msszCxu7qZBHf
/NfpmLWQDNJUmCgjwjxaiPdB2QtnioX87dt+ba1EPdQ9xyxWiPm0kXLV+D7f
QCH/1970EtpIT8ek84cdhZhXO3lQwzddpSnk//i1u552ErQvGISVAsyvg+j3
Hr29NFbAn/t7h53EQls4vM9XgHl2ErdWb+PA6QL+79M7ISDdosmFc4c7MV8h
CZS9q1iT1snPyf61CcmWCPsnK052Yt4iMqd96pcbizr5jN8nKCYVL7du/6LW
ifmLiff7wdvFOR3837vbSBGFugVxqWc70OMrsRy/917kkg5cz1cyLXRrh4tK
B/p8Jf/5uLzpz2jH9X0lf7rEB0ccbUevb4Qtnckzm9OO6/1GckoTN9/60YZ+
34gnVxRs9qQN199FHljpuUdva0PPLrL8yfuHDNM2zKOLaNZP64sqbEXf7ySf
wf3KOtmK+XwnQ9IeC5PtW9H7O2FGvnyzSdSCeXWTb6eO6hncaEH/buKYGMXp
XN6C+XWTcSNV/LKRZqyHHrLRxiivOaEZ8+whB84+n8XY1Iz10UPU7Df271Jp
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
4blY0R4WEEhlpbgYUvz/AyCaEl8=
           "]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 10.}, {-1., 0.9999877343196224}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson11\"", "\"IM NEdyson11\"", "\"RE ED11\"", "\"IM ED11\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
w2xmLaO59H/IWDyh
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
9xeE/W98HCxvFY/7JcZQsTko427nM+b/AbM31os=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
PGcr/D/ukVZD
           "]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 10.}, {-9.670266932668377*^-16, 
         1.057525281818254*^-15}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson12\"", "\"IM NEdyson12\"", "\"RE ED12\"", "\"IM ED12\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxd23dcje//B/D2Xqe9O8OIJLJ1uN4yGkQkK2TzkZGRkj2jjKQyUiJRaZ3R
Pu3OaaNBktEgRSQpTb59Pud9//74nX8+jz4d931f7+f1uq7rvq87xpb9K7ZL
SUhItEtLSPz73///OaadaNfke56o+BzX3GjtzBb/HEyUXpmtXGS9iZ1ueuHr
8vQI4jxz79wxi3fh7x+R+Qrp2R8ne7Lv3vn3E0usz+1Ypzj3MH4/kfQqJOlG
O/iwO5b/+384xHP2JEkv1+P47/lkDP2yxpRJp9lKdVGec5TSCHc0XzFr2lk8
XgbZevqXVsPs8+xx668X9JgLyGbaqsBachGPn0NWv+TvObvgEvvRyL+ui8oj
SdWTBZ/t/fF8+STEvaFuYMkV9pT/PoWE8fyldZrzNTx/EWlgjQ9QHh/ILuwx
HzmDkFwLza+9bHEDr6eYfJQNptVMCGKv+O+EJWSMls6aj5Y38fpKidrAjPeZ
E4PZTb7/HrCM8AP2BbhYheD1VpCVvtZGT61C2Qf+vTzPSjL+u/3JHKtbeP3P
yO8Zm+r9rW6zxQovyLaWw3NUre5ge16QygjWTduJd9n2/52ginyrpFeMtQzD
9lWReU4fJDIt7rH/Pdv669Xkuk2FS++4cGxvDdEvkKqpHxvB/q85dTXko8Hu
C5tH38f215K7SZ22C2mRbLN/L8f0JelKuCARez0S6/GSkDWLA9+oPmDv3PHv
5xXp/OZ77nXAA6xPHVn33mT/A8WH7H+Ppp1YR5p833RO8XuI9XpNSr4GRF+T
iWL3/nu4ntfkmYuNVfKZKKxfPXm9YaflrT9R7Ln/HfANMVxcu9D22COs5xvS
FCzNSv79iP3f5V1oIEoH7A58OBSN9X1L3A33vn/WGc2urPj385ZcNukxOuHx
GOv9jkRq0xrbWh+zdf67wPdkq+3ajxpbnmD935MhmZKP3W+fsP873PoP5N6o
s5GBq2PQo5HYXPv+5lNVDLankewml9x+Lo5Fn0ayJkH3G18Yi+1rJCE3kjZM
IHHo1UQOTNtxanV6HLa3iTBYwebTJj9FvybySunMlKLYp9j+ZnL88riT0sx4
9GwmkTy/L1134rEezcRyavvGa7QE9G0hY363CusuJWB9Wkhq/3S1yr8J6N1C
inszxu89koj1+kgWrk3VTOtIRP+PRO/cz/zYLUlYv4/EVT5q5oLXSdgfPhFH
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
+g==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxd2nc81d8fB3B7731xuaO0txTdOu++DYq0qVCpjIrMrNsghbTsPa5R0UDJ
vjSkLU0VKkpKEbJXfvf7ve/7z+/+0+N27/3cz3k/z+vzeZ9z0fe4bXIQERIS
ahcVEvr33/9/sNXyTFsCTpKWZ6N3ZwZVV/CfxxBW8m2689bIilK9U782lqYR
kcMpY+1CT5bwX88m7va3Fm3Tbl6SlPjvI5dIq/SY7aV2LuG/P48UOby78iRs
YEnHxn//5waJCbKys8yYwM/fIk7zpt2+KyTOknmX5b5UpoRUbLv/3mdUhsU/
XhkxXiHr1tesxJpme+Fe/1QuKV4gllwWr8biH7+KdP1svGmZqsXK5n36XdYd
8meu0Lq3o7os/vfdJSpWKtWPm2isBf89qsn8NJp5pxOTxf/++8QzZ0nkFR0D
VnX/VN431BDHowZtYsNT8XwekpoN5z5Gi8xkbfrvCx+R+Nt1lz4vmoPn95jM
sznGmmk+j9US8O8Bn5DwB4qzwhUW4Pk+I+/Wm/vGtRmyPP49PfdaYupxcWPY
ayM8/+ck+PHk2PI3i1l8hRdE0TO/+mS7CY7nBbnnGhD1SXkpy+y/L3hJtEN+
XOpcR3B8L0nshg9Lip4D699vs73wihhp2ZDWieU43tekuaTg+Q6TFaz/hvPu
NZns0pigdGwljv8NWWDQldj1ZBVL/9/T0XtLFtfNnaimmWI93pKzfUH0HcfN
WE6O/z7qybeNrJXRbWuwPu9Iw6pas61W5qx/j6aW945QdEKDfJ5bYL3ek3uq
MaL3LS1ZA/8erv89aZDOv6Dybj3W7wPRrj7gmF64gbXsvwM2kIvP7u6JOL4R
69lAxK5eU1q5fhPrv9M71UgaxRYYZjI2Y32bSGcinR47vJlV++zfRxNhbS10
lXyzBev9kTRv+GDVcmMrS/2/E/xEwqK/l0lHW2H9P5F355dtdva1Zv13ONvP
JGfEI//bzm3o0UymSfQc279mO46nmUglUKc1GO1An2biZHmimzrFBsfXTBZW
eKbqaNuiVwuJ1tzeUKZoh+NtISMjUac/Se5EvxaSfatIxU1kF47/C3nmGjK2
YWIXen4hhrnOfwyP78Z6fCHdPydC6yZ2o+9X4rMsO/dAkD3W5yuZGulTOCS6
B72/krwHcdIuoXuwXq3k/OABkRLZvejfSorqB18+jdiL9WslGbPZcSka+3A+
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
zP0f29Wztw==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxd2Hk8lNsfB3BbyDrM2BmzqFvatN22yfOltGhBdbulbkQkCdEiKeS2adNC
KoXsJWv2Ifs6W0V0lSyFhESWsv3UfOef3/zT62nGec75vL/nPOc5dDu3bQ4S
YmJig+JiYr/+/f/PaUrS+hbvO0T8sLnTQIwLS3gdTaQZDVoYxfiwsqnnv1hl
JxGhCysd+rzP4/fPiTFxCZrB46us+/d+fXKILmrveGfbTfx9AdF3LdOGczyY
1W3163+KiBMGvYlXpO/h35cSloblx4eCw1hy9VHuq+UqiPQVNxb3qkRge1VE
A2NjnHRDJGv23hvFg7M4xOsVcGPuwyhsn0eQ5GR+rN8fw4qe+uv6KAGxNfKm
rIlBHN7vJXE7wejn5Kd41uLfn9eE58AlgyOxT/D+tQRl1sWf7g6JrJLBWVN3
qCP+tLZQ/M5Iwv7UEx4LZil9aEpmbft9wwbi6jMjp2ucFOzfW8Lu1v0ZlfGp
rBbvXw3+RxB7Xm2h/JuG/X1H0E7+EeC4L5119Ff33N8T1tkRPunLnmP/m4ji
9y3SfcoZLKFCM7FrVHGaSkcGjqeZ0I2KPSqfn8naILwBwUk6aFN7MwvH10Kc
var/09Yhm/XrbntvtBLOfQEXY5fl4HjbiLs8Caf7srks4XDaiEK/GxqLGnJx
/B+JA2OH59vH5rH0f3WH+om4O9Gzn+nJxjw+EcZkOO9knM866Pjr006I2VAD
Z8kWYD4dRLvqDf/dggLWr9YoSR3EdY+QsG8hLzCvToI0xzNkYF4ha+hXc4Od
RO2l0m2hNwoxv8/ElzclW+z6ClnGvxvsInYmmbVttizCPLsIikK+3/bkItbv
7p3/QnTOuRhzVLEY8+0mWj8taXvsXMzicn59uoncCy/ft5YXY949RJ/2H5vn
MUpYar872EtcnyE2csanBPPvJYrzHAsEdSWs383t/UqoTzbfoM8vRY8+wqjv
ibvL+VIcTx+xPrjH61ljKfr0EbJuA7XNRmU4vj6ia5l1mcT5MvT6Rgx9NglX
bijD8X4jPsmc4kgalqPfNyJ7ZmxNo3c5jr+fcMtwNbpTXY6e/cQS8QdRs7Uq
MI9+ovnYsrZQxwr0HSCKVdOLm9IqMJ8BQjBr1HBkvAK9Bwhj4o526/pKzOs7
ccI0JeZeUCX6fyeKP5sM6TRUYn7fCdiruNmRWoX1MEhkq2eOHbevwjwHiTpK
teeGuCqsj0HCy6R6UePnKsx3iHBfaPRyzpxqrJchwmre0bFlh6sx7yGi5/rE
yfGEaqyfYaLy5Bo9745qzH+YsGwPb3zKrMF6GiZ4C/ZnB+2rQY8RQrY9izcz
tAY9RojABU8tXAQ16DFCfL83/ZyNDAc9Rog3rn8XT7A46PGDeHMr99yGoxz0
+EFkjbSZr4rmoMcPojdlKKuujoMeP4mmcBcfdWkuK+i3x08i7uOIzdgSLnr8
JFRHDxIX7LjoMUr4RZ1RSL/ORY9RQiJMwPXP4aLHKOH8Z/Sjb61c9BgjaPUv
ksTleegxRpAOrTVNXchDjzHC67Vv6uROHnqMEwfPFjh1e/PQY5wwH9DuPPGQ
hx7jxMy4TSWPCnjoMUFQx1wj7Zt46DFBvLtUxyob46HHBMFOr7Yr0eKjxyTR
lLJn4J+lfPSYJOK/6bbcseCjxyTRS+k1cnLio4cY2B1k/6j35eN4xGC55NoD
H4P56CMGO8L5T6494eP4xMBHb1izNp+PXmJQ27FXPpvPx/GKQeE8568rmvno
JwauJLk11l/5OH5xiOfb39Ea56OnODyVrAa2lADzEIf5Fxe9WyUnQF9x4K6R
HJVXFmA+4tCibSc5jyxAb3HwUGmyC1cXYF4SYK5uft1eS4D+ElBw7q64t44A
85OAB/tSiDZdAc5PCahys3oVrifAPCWgQe/jxpSpa2F9SIDuol2r1aauhflK
wkOf8Y38qfaE9SIJMx3/IX+Yup8wb0n4eZKyxkxDgPUjCYtbnl6SoAgwf0lY
K+F5T4MkwHqSBD/p3Ubn5QXoIQWKd8oVN0sL0EMKJO6fHHYRE6CHFNy6/MT9
5YDIQwpMTSLA75PIQwo4bcdkO+tEHlLwX7DZabkykYcUlHH/+etzmshjGtx6
3LPnQrjIYxq4FBfubQvko8c08NQfmidxnI8e0yDUNvvZx3/46DEN5GYMF101
46PHNFD6g75rbA4fPaRhweYPB5aq8NFDGi4mC9pWDIrqWRra09bXyzfw0EMa
qEzZDc9yRPUtDaWnpc1o93noIQ3Ff81qczzFQw8Z2KcgvTrgbx56yMCtqGce
J5fw0EMGnH86JpiReOghA4HbT8n3dXHRQwZqV/dXeJWK5rcMJLUfUW0N46KH
LJQ3NTPmHxPNd1mwsrZfamPORQ9ZSP4+fvmkPhc9ZMF38uSBUwMc9JAF7wN/
KBws56CHLJDoxTWmoaL1TRZYdgu/KR3ioMd0qFvnyOUuF6130yFxi9Fz/6n1
UOgxHWjH1cbm1tWgx3Q4Tpo78TKyBj2mg+PfQ2qeR2rQYzo0phORqstr0EMO
PghGJ9PEa9BDDmRc/7izs1q03svBqR9PiiZvVuN6KQeB/ca9KbtE678cVKlv
83ehVqOHHPB3f2tb0laFHvIwNyHVT2Hq+SL0kIfO0w9KBg9VoYc8+M7T1B6Y
U4Ue8mDNbOmX7qlED3m4mteXv/hZJXrIwxzJ492nXSrRQwH8Fpb2tRiKnocK
INu+zdipswI9FODxjMSNKjEV6KEA7uTDlz7YVqCHAjjv//NonU4FeiiAzLH8
04N15eihANQlWTTTG+XooQgBl1vf5q8vRw9FKPaSZRyeLEMPRfB4P3lsc6Zo
f6AIGblpFgdcytBDEcq1Zxhl0MvQQxHETpwJNnlTih5KkHxPSUwhsBQ9lGC1
tP039dWl6KEES9gbuw98LUEPJZh0/XhsJEK0/5n6npJFqrUqQQ8lsCrLXvdT
vAQ9lOFAl0P4kdRi9FAG78evo41si9FDGQQ2pa1mSsXooQy2ifntyXlF6KEM
0+T14ahTEXoow/muFX5XKUXoQYILD51XShUW4nhI0LJpkVSjcyH6kOCKwOo4
WU20PyTB2d5qC9szov0lCYK1JY8e5Bewfg/XkQSBbuFXTWgF6EeCUCnr9gG3
fFwfSDC44GZFQAEbPUnAWXTBd0iejXmQIELiob3Vrjz0JUEh+SH/XlQu5jN1
LTMwo64nB71J8J05wJed2m8L81IBAw9d45W+2eivAiFH9na6lmdhfiqQqb99
a6JCFtaDCpReuzs8bJWJearAWusxz79DMrA+VEDqdO0ewdvnmK8KKHUss3TS
fY71ogKBuhtGDabeL4R5q0DT/mMkhfA0rJ+p+z/O38z8kIr5q4BX9Y8T7tRU
rCcVqPdVt/2xNwU9VIEFmeUXlyajhypw8rdznyY/Qw9VuP7GN8N5ViJ6qMLa
kc4TgvAn6KEKiyx69D+rJWD9qYJzNflNYWAceqiC8Zpzb+wnYtBDFcYuuJ9o
co9GD1VwUwxlrm59jB6q0MCIOHB1WyR6qMLVUIX01IBw9FAFe7tpXvtsw9BD
FZY/FrxYvuoeepAhNEb8oDUlBD3IsO5whe/7L7fQgwxzuYyY7IAb6EEG0rEd
+a1zL6MHGeLVgjJcX59DDzJYqW14Y/DVCz3IYM+vSyE5OqEHGTbOu9RgFUln
Cz3I4LFh1aB5pDNb6EGGI8Ozabs1vNlCDzIod/jEWrsHsIUeZLi2WtPT4M1l
ttCDAq69faecqEFsoQcFWnaO7SJvu80WelBASSqvefB8CFvoQYEmakpzf849
ttBj6rrtXU93Txhb6EGBkEOHF7aRIthCDwoE7hpKTnkSyRZ6UAA2PftksTaK
LfSgQG1UeXzq+2i20IMC6/xz08pPxLKFHhTYNe4Z4asczxZ6UGBiR2A/Jy6B
LfSgwBnVc4rhxFO20EMNTMzVV7a/SWQLPdRg88TlmFtHkthCDzWofiu2sFo8
hS30UIMXsR7pRzgpbKGHGjzSiql8GpLKFnqoTe0fF23zsU1jCz3UgL9Makb9
7HS20EMNutcETX/en44ealC4kMmWy3uOHmrgTZvV8+pcBnqogeWRkyZS5pno
oQaG8xO2hZCy0EMd2j4cTvZ7k4Ue6sBb96Ex90E2eqgDzWfAimWbgx7q4DWD
4z/GzEUPddjN/+NVf3sueqjDUYeaCPWEPPRQh54X30xtnNnooQ4Fxi+mlRrm
o4c6DB3Mmc/qykcPdYjwMx0riC9AD3VYQdaKXeP4Aj3UYWZiT5KtSiF6qIP5
yoo4DbdC9NCApAKKlSmnED00gKOtyno3qwg9NGBPjtRI879F6KEB0VcvqG5u
LkIPDbjAf6WhtaoYPTQgzI9ye01wMXpowODVTKWK3mL00IAdkRmU8PUl6KEB
ASED8yvCS9BDA867Xu1YOVyCHhpAq59bNbilFD00QHems81AVCl6aAKpRGfZ
gh+l6KEJCf0ZTdFbytBDE74PxrRbRJahhyYUH01umfO9DD00QVd5k8OSdeXo
oQknNkjLOdwtRw9NcN3x8XBORzlb+PzUhB20QsN5yyrQQxNsNyV35Z2vQA9N
6CM77tj/ugI9NKF9ZpiaFq0SPTTB09SjpelwJXpowvMHDe5JmZXooQVOw4Pn
AsSq0EMLqhxuvN+9sQo9tMAmyH3LvJtV6KEF0ZdrY3/UV6GHFqxS5Jfl6lWj
hxbQaZnXXeyq0UMLGiau9MrFVqOHFoxtONR4s7MaPbRg266OHeOza9BDC0JS
Aw9sdK5BDy2wPjOP6pFQgx5acG74UIRnRw16aMP9Yik1cwMOemjDmOLfqd9s
OOihDTWnszMd73PQQxs8Mjo9Yl5z0EMb2h54wRN5Lnpog4LE4otHTbnooQ2Z
Tf+yh09y0UMb9nz8aL8ikYse2rDDZaXy4g9c9NCGhKg1Ni0kHnpM/b7jp6SJ
CQ89tGGt8Sh7qzsPPbShq6ltt8wjHnrogEZybu7Bah566IBl4haByyAPPXSg
3fB2GFmfjx46MPGf7OLd6/nooQMf/VVyVrry0UMHmnZaOWbc5qOHDhT3y54v
z+Kjhw74F7l6HP6Pjx46sOWTdHjkKB89dCA832d9uqIAPXSgMHRxT6OuAD10
4JZyU8jGOQL00IWVB8VmjC4XoIcuLMq4c+6rmQA9dGGu38KYGdsE6KEL7+wX
XAv7R4AeuuCWwjXb7iRAj6nvJ/76tMFDgB66oJ5ufM3ntAA9dCHWYbNzT4AA
PXRBY37a8/tXBOihC1KVRikBtwTooQvxV5ckxoUK0EMXKKv6JaUfCdBDFzZe
Pkd99FiAHnpQ6TXm6hYrQA89sDx0/dipBAF66EHCx+DcvKcC9NCDGGpmw9Jn
AvTQgzyDHo+OqWuhhx6UZ8etEExdCz30oODV689fEwXooQfHyr5tXjfVntBD
D25KGKx4HS9ADz2w9l59MyRG5KEH0nd4a4MiRR56EJRnZFkYJvKgwvpzQeyZ
d0UeVIiwGAovCRJ5UKEvfIve3csiDyoY8J0PRPqLPKhw+4hyWquXyIMKp/V6
LPa4iTyo0DUce0feQeRBhaGTL9sGdos8qJD4pe8ZZavIgwpyzifcXU1EHlQY
3ZKXIb5E5EEF8z9HKfwZIg8qPA7cvKheXeShD3cu3C3QlhF56MPPYI2vS3r4
6KEPp3pnWSRVi+aHPniGBG+KihXND32YH897quYvmh9Tvze3t5SxFs0PfbhE
vF/kvVA0P/QhKvi+g7uMaH5M3f9sNLm7kYce+rBve4Df1yQeeujDaLWy7Bk/
HnroQ9chE+pdSx560CB70c+toC+a7zQwesRffbqbiz40GG0TxJhnc3F8NJAP
M9+deo6LXjTwKbpokraJi+OlAY0etM+SzEU/GvSyPpZff8vB8dNgY/Kfce6P
ROsdDdZqMk1/7OdgHjR4FdH6dc7U+il8n6HBUv0JPYVPNZjPVP86x7c+jK5B
bxpkWmtot9nVYF40WLawwbBFvwb3DzQIj+PDg0bRek+D//yXLlALqcZ6oIGO
xI132yxE6z8NTN5Zme6Sqcb6oMHZpeddZhdUYb40sHthe6raswrrhQYXxj6H
ErOqMG8anHhxQ+Fao+h5RwOHgZKZWdcqMX8aGBfcNi82Fj3/aOCoaPwlrbcC
PejwNKzyyrWHFehBhy2Xbxfs3FSBHnRI8f9iQB4pRw86vHt837Uiqhw96NCr
5rXba2s5etBhx9mhFMMR0fOfDic3pW5piyhDDzoETY5Q4jaI9gN0sDuzb8T7
ayl60KHLbfWgfXApzjc6tL83oxxcWYoedNAdkzp0uakEPeiwyfKIisC/BD3o
YLt831IwKEEPOsh2Gkp/KBPth+hw6yutINWxGD3oYGijFJEvXYwedCgPrRiS
iS1CDzqs/ZhICVlbhB50eFW/YPuR1kL0oMOe+F2qt30L0YMOfp6bshV0C9GD
DkvnP9j/wu0FetBhzCLkLSO2AD3o4PNnTsnWxnz0YMCQ4z3yVuV89GCA45XV
pXNM2ejBgBGuYX2/Zx56MMBnjuf2pOhc9GDAhQ+law/V5qAHY2q/dTp3vqRo
f8yAxXXJ5dMXZqMHAzxeWpyZti8LPRhwed+CgbmBmejBgOwg+uorGRnowYBF
VBW3Oc3P0YMBrVY6DzTlnqPHVP9mPxP8szgdPRiwv+ixjvTeNPRggIPBoQDd
f1PRgwHWSQy5xKcp6MGAv/TD/vaNSUYPBuQYNeeW9j9DDwb8W+OnaUwkogcD
SLppK8SvPEEPBnzmvqplvolHDwaYijVcyaPFoQcDGhpfdL13jkEPBliOyDlG
PI9CDwbMKmPt1pyIRA8mXGDaT9uzPgI9mGBUaq4/SnuIHkwQXMyYnJ1+Dz2Y
sNnf6qyLWQh6MKF7w7Z53fW30IMJZs222dF119GDCTv3zjUMGruIHkxYZ5+z
pNvAHz2YMLT9UBD50TH0YMI+Cdq7qrd70IMJgSuLip+lWuP7MhPmN/v+6Nh4
DN//p9pPqKGn9/nh+zMTnP/ytZuRcxHPA5hwhPs2fvzMdXyfZkJl8IfKk+G3
8HyACeZqNtn148F43sEEDrNh9o/d9/C8gAl0prZkVnoYnn8wwbAczE5Mi8Dz
Aya8S17/PDc5Es9DmJDLyawN2RWF5wlMsDQz+jAyGY3nI0w4FniL4MfE4vkC
E743PQyWNY/H8xIDqN4SlHG7O4H1P/SV1vw=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
fBAPqte8OlRFqvBBXDyrvGzpYKnChzbx07bMH0ykCh/ERq/vfLg4UqrwQRw2
MDHYx0qqOC+JLe6nej6YIFX4IJZtX2+RZiNV+CDeWrpibL+dVDHcQOKOs7qh
jlKFD+LWmSczCpylCh/EnX+tHdToKlX4IA6Kups5xUOq8EH8vuXk7DxPqcKH
vH3rjZw6XqrwMYhJYp3Oe5h4SRU+iM84BXV6e0sVPgYxLt12pd88H6nCB8XF
175T2eYrVfigeIHPoZ6LU6UKH8R1XfUDav2kCh/UPiIno089QKrwocO4ja5N
p60DpQofOkzSlt3ZHhQkVfig+FzH4MJ5wVKFD4pnWcpyNoZIFT4o3h0VmHU0
FD4oPrJQNepKGHzoMomowfl9lRA+dBlzfe6wPjMcPnSZ7InD7yGqIvggHljF
FW8UwQexxsrUgsER8KHLuLdlpn07IuBDj+6vj3/8aRIJH3pM9njD08qCSPjQ
Y+znpoU65lHwoce49pe7l+6Jgg9qf8y0pME4Gj4ovvl2hHhrNHzoM1nPsFip
dgzWQ2y76VWzJAZ+9BlrXDnr3acYrE+fSR4t2pmXFgtfxE0L//3341jpt+Wm
6VO+/TcVe8fBH8UNbk5TPxUnVZwPxFp9xuWG8fBJ7c+6m9ZkxSMfFL871W1q
dTz8Eh8LO/TWIwH5oflNfN9SsisBvml+I9pHFbYlIF+DmWTy3CM7AhPhfzDj
LO1it+xNRP4GM9muq2tXNCViPxB/9+xDkCAJ+aT+Y5tvtK9Lwv6g/on3bs25
k4T8En9oG11okIz9Qtz7YOWGyGTkm/oH2Peb5Sdj/9D4DT5JolvJyD+1L79y
zVQ1BfuJ4mZtn5Y4pcCHAZOZbpgYNisFPgwYy13j9Ft+CnwYMEn2i7mLSlPg
g7jO/8yxmhT4MGDck4JsfxUx9h/Fx8157DdCDB8Un+IZfsBNDB9y/jIsIlwM
H3S97/qaomaI4YPmU2057sgSMXwQ+9486b1KDB/UftglVet1Yvig68U984na
KIaPIYwVPhx9nVjhYwiT9V5s/nG9GD6IVeZszpSI4WMIk7TUSS4uE8PHENof
O+rYbDF8EJ/PTNePFsMHcYRe2gReDB/U/3ny1fyxYvggHndOM0hLDB80n5Vz
hLHvUuCD+relxZRdUfqg+bhf/OHfu5U+DKn+ebX69AKlD0PGmU7S8+OVPige
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
CufVGMpHxemKK+MF/wdF+1j8
           "]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 10.}, {-9.258878597383064*^-16, 
         8.946161145843344*^-16}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson21\"", "\"IM NEdyson21\"", "\"RE ED21\"", "\"IM ED21\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
f23jLHk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
3+mh+p1HQeiXk4NKXaKk/wEHQGpn
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxd2HlczNsbB/D2Xfs+LbOQQpZbiBvnkUJcUpZEV4iy3UKWlHuVlK3SipCt
lCxR0kIaLWRJqaSivaZmpllUkla/mGf++X3/8Rozc855Pu/nfL/ToW3zddkh
JSEh0S8pIfHr3/+/ArXTl7YGxJF/nwTk5m84Q0Svk4mFv2GH3YYEkmsS2u2c
m06eDvzTliCZhO9nkW8bTl/ctD6NXE74deUR+6NG9y3uPsTPFxC515TrnmOZ
hOf8638KyQG2TO6wWTZ+v4QskfTIKliVR5Rqk/YtUColarFpUyIP5eN4bwjD
Lj9rxRUmsXA/X9RvXkZeGFP8eR6FOH45mR19hHmup4gkj3+7NukDcarLCjl4
ogTnqyT3DJIvX9R8Rax+X9WkIKy1gXWzFOf/SHSz1M1Wz3xDivvNx2eoIU+N
DNeVPn+L66klw+27/rJdXkZcfk9YR05yZvRer3mP66snWnY3Z7Z7VJDWgF8D
fia8WOPAwIMfcL0NRP6pNMXLppLs/7W8fY1Ea2NPX9pwJa6/iUT1bz1JCqqI
SKGFGCuErDQNqsZ6WkjYA7fqRYs+kmWiCciqOZyr1yVrsL5WwszcaD2rsIb8
ms39fBvRDZw0WXj8E9bbTpLzbeSqFtQSUTntRFbTzKtqqBbr7yDrLFc2s7Pr
iOmv5ZiwiONlBVXVA/WYB4u0J36JmT/tM/H2+nV1ko/zbmp6sz5jPl2E65o/
JzzxC/k1mnZ6F1FjOD64tbYB82KTWTFOFklKjeT7r+H62eSR+cC2MGYj5sch
8j3P9Bz8msjC3wNyiWdWslLdpGbMk0sOHwiQsaltJr+XF9pNZkVKcNMXt2C+
POL0Vn8y7UoLeV/26+IRWuD8ycKeFsybT4Ji9m3SWdZKdH4vUED2rPnTJiqx
FfMXkJUdD2e797aS38O5C0l22KWKQ0va0OMrOXUwPrQ+oQ3r+UqOblv4JYTX
hj5fyfFU+w37F7ZjfV+Jg8KF09fOt6NXD1lhFjQi39KO9faQRdEfl92d0YF+
PeTe0QnyJ/7rwPp7yVRpv5pzZR3o2Us6rRe5lhiwMI9esjWs3Nrci4W+fWSN
3GNKVgYL8+kjjwy+FmwfYaF3H7H8oF87Z0kn5vWNpL0LoE8+34n+38ibnKU7
/qjtxPy+Ef9VzF3rTLqwH/rJzk43iYjtXZhnP6k41fezJq0L+6OfyJ8ccLAU
dGG+34lReHj2+Vls7JfvxMOu0HbIj415fyfP7PLe7nrCxv4ZICcSP7t9Ge8L
Uf4DxPzFMHfFbA720wAxLY0Oy/XjoMcPom3dbGuSwUGPH8RNmmEWwOegxw+y
kPJ62xtzLnr8II7q8RRFTy56DJKpNg3Bc65y0WOQOMvdr1j1kYseg6T83s+l
Tsrd6DFEOr4J58xe1E2ifnsMkcy/O3pGD3WjxxCx3VBSm5LWjR7DpDjf3Nmy
oRs9hsn6zREfIifw0GOYsPNPVL1ewEOPEfLsfXNj3V4eeoyQjOq+kPzLPPQY
IbMhd8v+Uh56jJK0eClKfy8PPUbJTPvs7Q7GfPQYJd5Hvw95LOGjxxjJ++Ka
YufDR48xUm+h+Wd3HB89xsjd7FkJrk/56PGTMJ6+vh/axEePn8TRl+rjJylA
j58keYDTasIQoIcEbB/xMQhbLMB6JIAqW/RH6jYB+kjAsWOCDUFBAqxPAt5u
NC9RSxSglwT4+AznrRnfh6J6JSB2fkDE8ioB+kmAm+fe671cAdYvCRtvHNu8
XEqInpLQP81r6Wp9IeYhCXHpNJaUpRB9JSHltEblFhBiPpLw44Ll450uQvSW
hBiH6XYGnkLMSwo4Y9mL9x8Qor8UTGIfD/cNEmJ+UnCz/T8JrQgh7k8pkKpS
i914SYh5SkGfotFSh1tC7A8p0P0JM6ruCjFfaaCof/9HIlOI/SINYwczZlfk
CDFvaUhwUHmzIF+I/SMNjGhWwAqmEPOXhmvHT6YPvBBiP0lD7KG82kWFQvSQ
gQirsQCL8fdFHjLwmRNnmf5ciB4yMDIvJb4iT4geMqBhunl3RJYQPWRgV7b8
wa4HQvSQgcHWyeGNt4XoIQNLCi4k+l4VoocsnGVdTE6MFnvIwtSAnnTvULGH
LBzulWx4f0TsIQs91z+6f9gp9pCFMp71Qd8NYg9ZGHZ8cfjeErGHHKS+/v72
pJXYQw4MNy7nDJuIPeSAnjHNXUNR7CEHO15QXrzsEaCHHMhX3i82qBeghxzs
tbwwWZUpQA95kHHPKUhKEqCHPNh1mvp8CROghzwMpGpbZu8UoIc8FCVpyc52
FO8HeVjs9knDzVyAHvIgcdklmCEn3h8KYP85Lza+jY8eCmAzfPjKo+d89FCA
aeFTRg9d5KOHAhwJuj2jy5ePHgoQuaHtmexSPnooACV/xLbaiI8eCjDl5OQt
zj3i+4MilFvd7Agu4aGHIoQ2pVzxuiC+XyhCTOCOnZLePPRQhJLbHLJ2Dg89
xj9fOsFiqwwPPRRh0mMv2ymV3eihBP6p05Mzrorvj0pwv3D61UGvbvRQghsN
KftlZorvl0pQ2WQV8nGAix5KcNQ/C/YWcNFDCaJdpk0tD+GihzKszbj9cWQp
Fz2UYfs5jZYhJS56KMNMfTPJd2Uc9FAGrbo/R3wjxM8LZdivb5HC+4uDHsrg
OEDpWKwsfn6oQCX7wD3/12z0UIHSoljJyJNs9FABK+fC4TDCRg8VaDwiLPAa
7EIPFdjDij8+M7MLPVRgy6bg4K5dXeihAqejkvTOU8XPzwnwMKM1acqnTvSY
AJPCWi88P9uJHhNgyLbGd8XCTvSYAKvYDvm1X1noMQEc7zfoed1ioccEeJQ6
ZdqQCws9VOH5Fd9HF6VY6KEKyW4eu+wyOtBDFTRGWOZjmzvQQxWU+7jvy5U7
0EMVVnI07XNz2tFDFTzOBIUUbGtHDzVYPSUuiqXSjh5qcHT33cBZ2W3ooQa+
L+q3pGxuQw81AMWH3svk2tBDDSIonCLKg1b0UIOpO60eTVzTih7qYP2w+Yj3
jxasRx3uVl3by74q/n2nDvblNt33oAXrU4f6vFNZe0ub0UsdFO4+WaOv0kx+
l+ulDl2ht1M8nZrQTx3mXmrOcI1uxPuDOhgW/3FutLIBPdVhXwLFbbNGA+ah
Dg22U1xCnL6grzoUanrnHwr/jPmow41t2byFr+vRWx32fJ2/hC1Vj3lpQP3t
nHmBtuLf0xqww/2rveShWsxPA4q/KPaG3P+E/aAB8qacTyrtNZinBmz5Fh13
W78G+0MDlBVDP7mu/Ij5asDiw8YulsHV2C8acL6F/3JGVhXmrQGOC40Hd3ZW
Yv9ogLRr8dM2vUrMXwO+qTm0piz7gP2kAfdnbI39r6ccPTQhVMUqfc/q9+ih
CeyfnHbz9HfooQkzuN2qb5XeoocmGGlXa3h6vUYPTSgLmvxJvvAV9p8m0Jr0
V5QZvkQPTXgA87aX+BWjhybsemujL1NWiB6akLTtlsd1xgv00IR5y6281/bn
o4cm9DpbG+y/lYcemmAbua8of1U2emhC7tgrR4+hTPTQgh3hdw0lVzxEDy14
FiP/IurGHfTQgk3MqarP+2+ihxZ8Wz/YdDf+AnpowXm7ktvJQSfQQwt2NV5e
9NJpH1PkoQVq6VYzT3hFM0UeWvDomVpdUfY1pshDC3odQ2jKUilMkYcWjFbu
7hWm3GeKPLTgqm0hryU5gyny0AKDnKPnDPqzmCIPbVhy2MNweHEuU+ShDamN
0bIe0c+YIg9t0OwMaDNpLGCKPLQhmz1oc1arkCny0AbB4lmV4TlFTJGHNnzN
61p2cmMJU+ShDQuqB0v/HnnJFHlog0mEaZRcYilT5KENs/y6R/fYvmGKPLRh
JOHlmcDPb5kiD23w2Nn2mn6kjCny0Aa2/mwfJ81ypshDGwLa/l4hvFfBFHno
wOP6N+Y/bn5gijx0oCfH3pH6TyVT5KEDlqtTqd5zq5giDx1YWBRfXyxRzRR5
6EDBfNtHlm+qmSIPHRhbmtt7JeojeuhA75vjknKuNeihA7n+L508jT6hhw5s
Hvrsea/lE3rowLyTUbU1SbXooQOmUjEbPu+oQw8dqGYW3nlkVo8eusA6H3Vt
dWc9euiCtc+aSZnJn9FDF5wTLix4v/ULeuiCNt1nNMG4AT10oZdfHKVe14Ae
upA3NWmeRXQjeujCVZvg1Q3LmtBjfL7+EHv6zyb00AX7yJdX+h43o4cuCGve
Hk22akEPXbit5h4UEd6CHrow59iHpRkdLeihC4OKrnYqtq3ooQeyajMEl2Na
0UMPpE8V1bixW9FDD26qMs87LGhDDz3wuWbJ3Bjdhh568EbujNaFjjb00IPQ
GdXLvs1pR4/x943SJh843Y4eenAqf12oSn07euiB53/ti1+Yd6CHHjzIm+Zy
9kgHeuhBTzv3nvfLDvTQA+6VErd1miz00Icr5zbuX72ZhR76oG22Rmd9Ggs9
9OHq4h2HPPtY6KEPETe3lh+y7UQPfchZ9ufusyc70UMfAppVb1x714ke+nC3
2/zjQ40upuj5qQ96isr+z9Z3oYc+mBnsU2Je7kIPfVDd76SX29iFHvoQrdQ8
N9mUjR76IFkQpxm8hY0e+uB1xmzTXzfY6GEAbO6ZKulmNnoYwOy1vUtuG3HQ
wwAk88tjp7tx0MMAnqx5dTMxjoMeBmDgneX1tZyDHgYwc28Sa6ICFz0M4Nay
0unzgIseBnCn+rDH1CNc9DCA+Zcn3hq8z0UPA8jpXj/9VisXPQzAf/b1ZQyd
bvQwAI2sKLvApd3oYQjs49kBd/y70cMQgkdOu6fd6UYPQzB/tG3Lsdpu9DCE
0+cOKlNleehhCC9S8oQxs3joYQh7A7n3qt156GEID276dreE8dDDEJz01nrl
PeShhyFo6s1t3VTLQw9DuHpqgWXpKA89DKFGXtp8iM5HD0PIun72Wd8SPnoY
wgqjGU2Zu/joQQEZ49iYOef46EEBp/qorn/v8dGDAuHJFj9OveWjBwXWzD3U
vYbNRw8KcIqjvrXICNCDAn4NES7TqQL0oMDWWVtX/zlfgB4UqLSstJdfI0CP
8c/7b4+J3i1ADwoUb16dWh8kQA8K3J/pPdoUL0APCiyIkTO8mSZADyM4/UY2
0jRfgB5GoKSa3O/2XoAeRrCj+fAPp0YBehhBwc4NjpI8AXoYgdz3dSn/DArQ
wwhyg67VxckK0cMIsjfszzqsLkQPI/AXqBhoGQrRwwgOFCd+3UUXoocRGIRa
zgy0EKKHEXi6xtQumSFEDyPocdncU2YlRA8jMP+zImbCXCF6GIPfvoIvCvOE
6GEM++nR3wvGX4s8jKHnpbn+zPHXIg9jWF9Vfdx9/PsiD2NIfrPwiL21ED2M
gRW5w4U9Pr/IwxhOTQj1XTZFiB7G0Gg9Ye4OhhA9jCFueSyFUIToYQzbLpQk
fNIQoocxPNzlZjNNXogexqAaqnAahsUeJlDSGMDQFog9TMD0JXmY2iz2MAFb
v8L64QqxhwkkfJ+3SYMp9jCBnjN3+tn3xR4moONcejAkQYAeJvD1X8n01pMC
9DCBBU27gmR8BehhArurMj7yXAXoYQJdD6iJV4gAPcbXE3yuRsNMgB4m0P7X
ypDVygL0MIGP18iTDULx/jCFnAuPQ6ZWifeHKUSu2aP+9rF4f5jCUGls2Ow4
8f4wBf9vBYa+fuL9YQrnw5qU/J356GEKvl8WXnOezkcPU+B6npg0qshHD1N4
tjNxKLCDhx6mcG1aVVDFcx56mIL87gcTB+N56GEK+6ZIuw/t5aHH+Pjfum9/
tOOhBxX0VxWdPaPHw3qoEBxFvWrYLb5/UYGp2HzwzPNurI8KWrs182ojxfcz
Khz3V9KV9+jGeqkwoOxsZzBdfH+jAsc+bVRthIv1U+GVtJoG/zUXPakw4VL2
qsw4LuZBBXqySsxWDy5T9PcMFYz+yGaOmHMxHypk9EW9DO3hoDcVau8+vjyW
y8G8qOCc5UN2Hefg7wcqBGX89bzUnoP5UeHTcq3JRooc7Ifx8eVLLu0sY2Oe
VPgyK3Huw0g29gcV+t4Z/tHrxMZ8qXA6eIBppc7GfqHCu2uW9MMVXZg3Fbx+
Dtx6FtGF/UOF9b1V8XIrujB/KpSp/OvqJt+F/USFqM6BldlFnehBg8S802zT
fzvRgwZjzbnXL83pRA8aPLRY308XstCDBnNl/A4Wpoif9zSw9vXKOPw3Cz1o
4JP9ztFBS/z8p0EzL7hjxusO9KBBPe3erHnHOtCDBuuW3+N6zuhADxpU1JlV
Zba2436jgeeoRJZ5bDt60MDxtNuO14vb0YMGC3aeLYnra0MPGqQyJ+ZF3WpD
j/H5z/CtmKvb0IMGeW/rpzPGWtGDBtKLlR4w77aiBw0+3Xr19OL6VvSgwZ3Z
/v+kS7aiBw0CJJLb5e6Lf//RYPqqDvvkdS3oQYMHDsUhWqPN6EEDe8YF80Mr
m9GDBkZNV0b9rjahBw08nhhc1uU2ogcd9llPS/Wc04gedNgZktm8NbgBPejw
3MFGXf/dF/SgQ+pYo26E1hf0oMM8IWkv3fgZPeig5r3pcMWNevSgw6R/D7Td
ZdWhBx2WmwmWb7WoQw863Lq1sGNwTy160GGLzdO+wAef0IMOE60DKgT8GvSg
A2finCY3yxr0GP+8k/HFkj3ivw/o4LAyPXhOWjV60EGlJnx2DqsKPeiQdmPd
xlW0KvSgA9tnX6q0eyV60KFPt6W9Kf4DetCBt45WVpFYgR508LRfOnmlajl6
0KFH9WCRw79l6EGHK45Hk99w36IHHRrW2few179BDzooJHpxHheWogcdZmUm
cOZPfYUeDPBzJrsjY0vQgwF6CxrHCoaK0IMBUvy4dY1bCtGDAesnTf/n2zkm
ejDgr7pJ8ivX5qMHAxRK7Hw6DfPQgwF7Ol1ftzU/QY/x13XXdm9PykQPBkRe
5zyivEtHDwbkHjc5Kb3yDnowYMO01XKvym6iBwO2B4SFucRfQA8GcAPUt5ZT
QtCDAdaDk7rtW/fgeQADbEYL+1adjsLzDQZIvjvmPBqfiOcDDFDPkVzn4nIb
zzsYsND1+ZPP9ffwvIAB4e/sW1NnZuD5BwMe3fe4Yn0wC88PGPCf6dblvjk5
eB7CAAurB3FWQ0/xPIEBmx9Hyv9tW4DnIwxouHQ0vL3gBZ4vjNdjezHOzKMI
z0smQuadbXassWLyPyZsE5k=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           "]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 10.}, {-1., 0.9999970161006999}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson22\"", "\"IM NEdyson22\"", "\"RE ED22\"", "\"IM ED22\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8018429548995543`*^9, 3.801843023717614*^9, 3.801843057473448*^9, {
   3.8018432458119707`*^9, 3.801843256342861*^9}, 3.801843325012644*^9, 
   3.801843364289874*^9, {3.801843413309013*^9, 3.801843451064135*^9}, {
   3.801843494820908*^9, 3.801843526956911*^9}, 3.801843594332118*^9, 
   3.801845111524887*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"b76ec57c-8e60-4404-9676-be46d5b6a824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<DecompH2Ret\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.eps\>\""}], ",", 
       RowBox[{"GRPlots", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "nao"}], "+", "j"}], "]"}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797607347010544*^9, 3.797607466194126*^9}, {
   3.797607512176837*^9, 3.797607514865728*^9}, {3.7984111845438766`*^9, 
   3.798411207660467*^9}, 3.798419964311166*^9, {3.801343895763775*^9, 
   3.8013439188014183`*^9}, {3.801845110461526*^9, 3.801845116962352*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"99a35514-1ff4-4be9-b489-c10c4973aa3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"DecompH2Ret11.eps\"\>", ",", "\<\"DecompH2Ret12.eps\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DecompH2Ret21.eps\"\>", ",", "\<\"DecompH2Ret22.eps\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.797607436479678*^9, 3.7976074717997503`*^9, 3.797607527101053*^9, 
   3.797607639927979*^9, 3.797607690712029*^9, 3.797610998516843*^9, 
   3.797617992661826*^9, 3.7976317358785467`*^9, 3.797638496268594*^9, 
   3.798411214801408*^9, 3.7984113203414383`*^9, 3.798419937663118*^9, 
   3.798420028711028*^9, 3.79842078491251*^9, {3.801343901940154*^9, 
   3.8013439230247*^9}, 3.8018436082533083`*^9, 3.8018451198213587`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"bfa8d1d8-35e9-4479-b317-59fcba440cb2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectral Function", "Chapter",
 CellChangeTimes->{{3.797526424131311*^9, 
  3.797526427139022*^9}},ExpressionUUID->"ee0de9ce-15c3-45ad-84eb-\
f37421f2c5fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</AU_A.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Param", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ANEdysondata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SuperscriptBox[
          RowBox[{"Param", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "2"]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "1", ",", 
       RowBox[{"Param", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Param", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Quotient", "[", 
          RowBox[{
           RowBox[{"Param", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "-", "1"}], 
        ")"}], 
       RowBox[{"Param", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ANEdysondata", "[", 
         RowBox[{"[", 
          RowBox[{"w", ",", "i"}], "]"}], "]"}], "=", 
        RowBox[{"Read", "[", 
         RowBox[{"ReadFile", ",", "Number"}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        SuperscriptBox[
         RowBox[{"Param", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "2"]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", "1", ",", 
      RowBox[{"Param", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7975306429029284`*^9, 3.797530647223732*^9}, 
   3.797530699782598*^9, {3.797530784707673*^9, 3.797530879873397*^9}, {
   3.797530935072489*^9, 3.797530937904681*^9}, {3.797530975814288*^9, 
   3.7975312356319847`*^9}, 3.797531632397174*^9, 3.797605229971883*^9, {
   3.797611013021596*^9, 3.7976110135305967`*^9}, {3.7976317435067787`*^9, 
   3.797631748370116*^9}, 3.7976383057400007`*^9, {3.798411330975066*^9, 
   3.798411346077284*^9}, 3.798415092484137*^9, {3.7984152429514923`*^9, 
   3.79841524378014*^9}, 3.798415345933057*^9, 3.79841545219066*^9, {
   3.798415558882184*^9, 3.798415559247196*^9}, {3.798416037819333*^9, 
   3.798416041789104*^9}, 3.798416131788209*^9, {3.798416870519437*^9, 
   3.7984168726771603`*^9}, 3.7984169849223127`*^9, 3.798417399583304*^9, {
   3.798417715304822*^9, 3.798417726448999*^9}, {3.798417901069825*^9, 
   3.798417905162149*^9}, 3.7984187637617807`*^9, {3.79841885577459*^9, 
   3.79841885655586*^9}, {3.7984189784537888`*^9, 3.798418983196332*^9}, 
   3.798419323015921*^9, 3.7984194315223913`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"6a0fe541-0a9e-4140-a40c-d97382b0188a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GRf1Dchop", "[", 
    RowBox[{"trel_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"GRf1D", "[", 
       RowBox[{"trel", ",", "i", ",", "j"}], "]"}], "]"}], ",", "0.001"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FTf1Dchop", "[", 
    RowBox[{"tmax_", ",", "w_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "Pi"], 
    RowBox[{"Im", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRf1Dchop", "[", 
         RowBox[{"trel", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "w", " ", "trel"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"trel", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FTf1D", "[", 
    RowBox[{"tmax_", ",", "w_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "Pi"], 
    RowBox[{"Im", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRf1D", "[", 
         RowBox[{"trel", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "w", " ", "trel"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"trel", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lorentz", "[", 
    RowBox[{"x_", ",", "a_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Pi", " ", "\[Gamma]"}]], 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[Gamma]", "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "a"}], ")"}], "2"], "+", 
       SuperscriptBox["\[Gamma]", "2"]}]], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LehmannA", "[", 
   RowBox[{"w_", ",", "i_", ",", "j_", ",", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "Z"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "m", "]"}], "]"}], ".", 
          RowBox[{"cdag", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "m", "]"}], "]"}], ".", 
          RowBox[{"cdag", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ".", 
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            RowBox[{"HEigVals", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], "]"}], "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            RowBox[{"HEigVals", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ")"}], 
        RowBox[{"Lorentz", "[", 
         RowBox[{"w", ",", 
          RowBox[{
           RowBox[{"HEigVals", "[", 
            RowBox[{"[", "m", "]"}], "]"}], "-", 
           RowBox[{"HEigVals", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ",", "\[Gamma]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "states"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "states"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.797526438355898*^9, 3.797526541170656*^9}, {
   3.797526846964517*^9, 3.797526861024089*^9}, {3.7975270040923557`*^9, 
   3.797527087398444*^9}, {3.797527129162097*^9, 3.797527173663434*^9}, {
   3.7975274956833773`*^9, 3.797527529540677*^9}, {3.797527562613818*^9, 
   3.797527695259603*^9}, {3.797527766617283*^9, 3.7975277730365*^9}, 
   3.797527933070075*^9, 3.797528275964478*^9, {3.7975284261667423`*^9, 
   3.79752842942446*^9}, {3.797528999616037*^9, 3.7975289997320213`*^9}, {
   3.797529350664513*^9, 3.797529362730137*^9}, {3.797529767999569*^9, 
   3.797529821475759*^9}, 3.797530608251451*^9, {3.798412766086872*^9, 
   3.798412787774518*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"275f6d39-05b4-46ed-979d-88750b7e8631"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"w", ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "12.5"}], ",", "12.5", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wftlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"w", ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "4"}], ",", "1", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FTdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "w", "}"}], ",", 
          RowBox[{"FTf1Dchop", "[", 
           RowBox[{"24", ",", "w", ",", "i", ",", "j"}], "]"}]}], "]"}], "/@",
         "wftlist"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lehmanndata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "w", "}"}], ",", 
          RowBox[{"LehmannA", "[", 
           RowBox[{"w", ",", "i", ",", "j", ",", "0.06"}], "]"}]}], "]"}], "/@",
         "wlist"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.797527707053651*^9, 3.797527755724957*^9}, {
   3.7975278114348707`*^9, 3.797527814847682*^9}, {3.79752846286814*^9, 
   3.797528463118896*^9}, 3.797528996882304*^9, {3.7975290449064703`*^9, 
   3.7975290639896097`*^9}, 3.7975291053673973`*^9, {3.7975291471283903`*^9, 
   3.7975292110828114`*^9}, {3.797529339847621*^9, 3.7975293407468233`*^9}, {
   3.797529552293849*^9, 3.797529553622757*^9}, {3.7975296514248657`*^9, 
   3.797529653338708*^9}, 3.797529830094359*^9, {3.797530358679422*^9, 
   3.797530378677272*^9}, {3.797530418938079*^9, 3.797530419481845*^9}, {
   3.797607804478779*^9, 3.797607916060816*^9}, {3.797612345034913*^9, 
   3.797612347882262*^9}, {3.797612452281795*^9, 3.7976124551118937`*^9}, {
   3.797620373198394*^9, 3.797620375404339*^9}, {3.797631858136511*^9, 
   3.797631870004222*^9}, {3.798411647257587*^9, 3.7984116529513187`*^9}, {
   3.798411862500482*^9, 3.7984119639032516`*^9}, {3.798412853732501*^9, 
   3.7984128730878773`*^9}, {3.798413250554571*^9, 3.798413256337208*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"6b81302c-7029-4cd1-a3a6-3d487e9d0083"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Aplots", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Param", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Param", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}], ",", 
             RowBox[{"Param", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"ANEdysondata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}], "*", 
                "sites"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"wftlist", ",", 
           RowBox[{"FTdata", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", ";;"}], "]"}], "]"}]}], 
          "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"wlist", ",", 
           RowBox[{"Lehmanndata", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", ";;"}], "]"}], "]"}]}], 
          "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<t=\>\"", "<>", 
              RowBox[{"ToString", "[", "t", "]"}]}], ",", "13"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<U=\>\"", "<>", 
              RowBox[{"ToString", "[", "U", "]"}]}], ",", "13"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Mu]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Mu]", "]"}]}], ",", "13"}], "]"}], 
           ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Beta]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Beta]", "]"}]}], ",", "13"}], "]"}],
            ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.6"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Epsilon]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Epsilon]", "]"}]}], ",", "13"}], 
            "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.5"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<B=\>\"", "<>", 
              RowBox[{"ToString", "[", "B", "]"}]}], ",", "13"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.4"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
      ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A NEDyson \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<A ED \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\"\<A Lehmann \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], 
          "\"\<\\n(Broadened)\>\""}]}], "}"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "sites"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "sites"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7976101066415787`*^9, 3.797610115106346*^9}, {
  3.797610166260386*^9, 3.7976102556755543`*^9}, {3.797610306560149*^9, 
  3.797610321213231*^9}, {3.79761046425067*^9, 3.797610522544928*^9}, {
  3.797610576158993*^9, 3.797610587371285*^9}, {3.797610619118012*^9, 
  3.797610700584667*^9}, {3.797615006329225*^9, 3.7976150068840923`*^9}, {
  3.7984116595814657`*^9, 3.798411699196083*^9}, {3.798411790871852*^9, 
  3.79841180213888*^9}, {3.798413042212603*^9, 3.798413055605474*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"fb798e6d-9565-44b9-9071-d733f33c0674"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw8nHdcTu8bx9t7793TJisyMs8xixDZlb1CpERGUYpKe++9C+2tzlUiUgiR
VKQohErS7vd8n+c6v/7x6hXHOff7fn+u677P/aRxxNb8OBcHB8dhQQ6O//5k
f82A/VtzG1uL/KlrMveNO8f0YGJIZaF0tA81PMPKv+avHuj9+LlM56EnZbdS
6F1yvx44Pz2w5c0Gd6pve6narR968HLeGeEtt69TJ/77+sr8uZ7f0Pa8C1Tn
1f8uqAeaPWUq9lmHqP+uNqNND8CuSW5UbRPxLvk884p6MGnTb78y5ixh/t/l
mvSgx/Tfwu7JK0Rjw39fejDMt2js/bqbhMl/F6zTA7cCHStROQ/i4d//blAP
Muu2nKgw9yb+u73zlXqgLhgl+rzDj/jvcttLmc9jHyNj3hRAGP73VaAHhX0T
B989CiSYN8e8oB5Er0l4cGlDEDHzvxvM0IOh2cOOyWZBRMp/t5esB2bNyibt
nwIJ9f8uF6cHn/N5zYsmAoioyP++9GDN0OJF17f7E/897dUQPbhkXHfhQ6s3
8d/jWvnrgaNq6vYH2R7Ef7e38o4ePCfEJ9U/3iT+u5zaLeZ4FeiFLZ1xjWDh
cNGD4FneLywLbQkWj6vMf/8+uFzQcRvB4nFRD75qVx0N5zzI5nFeDzz+fsmP
s7/A5nFGD/TzLtXPvYs8TuiBQ/fMY8mB7mweh/XgqAm5/MJGLzYPKz2wU11E
bT/gS7F47NGDgcbTboEWARSLx3Y9WOyUO7chOpBi8disB1zefqFHTgdRLB7G
euC+/eKVJxBEsXisYY6/DEeBa0wQxbq9lXqgtLlizcKpQIp1OSM9uH3r/dfU
bwEUi4ehHqyW3Xdh0zM/isVjrh741F99VPnvDsXiMUMPOgt3PSfsblMsHlp6
sCH+0DrRXa4Ui4eaHly/We4e6OlIsXgo6sGpoVuaAT4nKdbwyehBpMGSvBRe
GTYPcT3oMPmsL/fOms1DSA8+1jG0H6+4zObBqwd7ft5ql69wZfPg0IPLf+4s
Gvx6m81jTBfW7D5R23jDm83jry7E6l7uWnjSn2D7oQtJl1VmhK4OJNh+6IKY
8oTAmYNBBNsPXVja6uDlyRtMsP3QhZwao67j84IJth/M6+fMD077EIR+6ILL
4RsztUWC0A9d+PE2Rb77UQD6oQvJVTonBjT80A9dOFgjuyum3wv90IX9nDMO
P5W6hX7oQtCHxce+mt1AP3SBGLp45HbaBfRDF6xdFS6dad6PfujCVs+T+xa8
3MHmkaELWhlZ3TfW2bF5JOsCn/3MratnObN5xOnCjhc3NwrPcWfziNQFhnry
hdS1XmweIbogLqm6ur7El2L7oQuWnr/Mh4oCKLYfuiCo5/UsWSuIYvuhC4FJ
fy/vUg6m2H7oQkfSrdOnw4LZeXVVF3yqB7jPBwaz8+qiLtjO43c3EglGP3SB
3CA2v0MwCP3QBd5KIcG8gAD0Qxe4LupUq+30RT904d6No/U7az3RD10YDNAf
tfV3Qz90IeHGm1dm96+hH7pwOnpwRTiXLfqhC+eq14YsWGqMfuhCudkZiaTo
o2wea3TB4OrhAutNl9g8VurCUyePXbvVXNk8jHRhZdkeLY7s22wehrogavw4
KTDNm81jri44SnfcEOr3Z+fVDOb/9/yKuX1RIDuvtHRh2wGb/t7pIHZeqelC
wb3M79nPg9l5pagL2RXVoloqIey8ktGF3t6TwPk1GP3QhRnqZ7X3zglGP3Rh
+GrQCr/hQPRDF8y7Z83cuDEA/WB+D1rLLh3yQT90YN26deer7DzQDx3gKege
WP/VFf3QgVlbux5OPnREP3RAftGqQF2DE+iHDsRpiHDM3bgK64cOLFbYYKZa
fhbrhw4k1ERbHnS6xubxTgfUnKSNnpW4sXk06cBkTJnYhKEXm0eDDihHdP1w
EfNj86jTATuO8B1B0oEUa/rV6MCV9YlfNuZhXlXqQOJs8f1ezcHsvCrVga5Z
15o8Loew86pAB3o/rV/+ODSEnVf3dWAJqcs7b3YI+qEDB/dG7lVfFYx+6IDE
16H3+5oC0Q8dOKXXY/S43R/90IFOh13bA9d7ox86cCbj4mj6v1vohw6Mt8zp
2i3ngn7ogObK5Um+/hfQD+Z4DcxqmJGxD/3QAa9wp93LSy2xfujAtg6zqzYa
Dlg/dEDfcSuU27iweZzXgZFyGwZ5+Dabxxkd2OxXsXvisTebxwkd+FwzGqO4
MoCdV4d1QHVQ7XLTnCB2XlnpwFe7kNeZGcHsvNrDHM8WRnhScgg7r7brgLrK
meEx+VB2Xm3WASWuylcHuULZeWWsA2v/Dj3iPhpCsB53jQ7UvbDVT1gZjH7o
wK4HfwUPRgaiHzpgFNX8zYrTH/3QgcFDcfcnOO+gHzpwo3B/+5ud7uiHDvxK
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
l40YyzamoB/D1AyqKa7yegz6MUwlH1pw68J1f/TjL5XfUTSQeu04+vGX4j98
TnQ8zR15/KV0T3ks9/4Zhjz+Ug8SvBSkjtLnF/5S2xe7T219lIY8/lJvjL1X
Lr6cjTyGKCP7sdf+ljnIY4jyvbTE8rZ+HsXmMUQtqDo0em1GPsXmMURJSliU
WyXmY54NUaa/l3oEB+Vjfg1RS7lN27dN5mFeDVGxYx2Lb3zNxbz6Q7mfslmw
/N599OMPtfXF7gyugiz04w+1YvDXNs6JVPTjD8UQqDaVzE5AP/5QAmGPnN2f
0/sZf6gBcuVpiTNu6Mcg1aAuP39l9zHkMUhJcTTWNkb7Io9BSnvdtkOvb0Uh
j0GK43qkpGtJEvIYpPZL6Z+diklHHoOUUYfZ4+wX2chjgLqYyOfzziAHeQxQ
zqMLMlte52JeDVAJISumpgLyMK8GKE1F/rlm9XmYVwPUwz2mxKBzHubVALVH
7EdI671czKt+qmTXGWsH6j7mVT/1OHOrTeXSbPSjn8pK+WLf05WGfvRTbavl
8y3aE9GPfmpJVNbKC6ER6Ec/VfPBaE7ADi/0o58KPb2wzvynIfrwmxLtHOF4
t9STOsQa798UZ+M7gcFVEZQEa3x/U2E7LaXI9kQqlzWev6iIzqe/nimnU4dY
4/eL4tGpC9qan4158ota8GP6y16nHMyPn1RM/876S3PycH7+pDwfzQwoVcrH
+fiTar9318DIOZ96yXrePurBrYb3ytvyKRfW8/VRMw5+V4oOyqMYrOfpo9a1
7uqVMcmlXrLm0w9qPt9Hdan+u5QLe0OUilj5qfGbZQbOlx/U89mSZ/UGk3B+
fKeynpMpErmRmJffqbECo8upnz0xH79Tts4QlOC6h+hnXe4b9Uqkpd19kz8R
wOL7jQpebyzxMCuWIFk8v1Gbh6VyXvumEv2sAe+lkvwzQuc/pnn1UiOVoj8c
UnORTy9Vbn5SXnQ4H3n0UtlHK6SdqULk0UNts4pfGPa7iGDz6KHUEpy+DDsW
E2wePdTDvm1ffbYWE2weXyly4nvY1Fnm32d/4IAqyBdaPNJcgPP3K1XacTTB
wjsP5+sXSu7htZRgg3s4P79QL1b8OrpQIQ3n4xfqGpXYbNcXTbB5dFMfBAQU
Nwy6EWwe3ZRQ8HKpu6duIo9u6u31V8brlGKRRxdFPXf2EAnJQB5dVLhf4JzY
+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
Qupg3pQ6rzjqB9Sdny/icYcdI2g+pUi3/zIbmTlqVbvftohwUa0n/pg1m/gQ
w3NG5aB+J6e069FJjKcyT/3Db5cz/VOwzi1K0csPa9ejlxgf6x89Py6IZfqr
ENsolUWtUDH9VlA8La2ZcFl9tp0PMV5f0xzLT9My/VgQGOQfit2VeradDzFm
e7bcVPdOp/4gMQoNImsaTqST/4nhdcE6c00J7Qfsdcd3raZ52bk04kOMd7v2
pR7um0p8iOHjdTyo53Pqu3UTIzx1Rtmp70nEhxibxhu5cWKpr2qaGGuqFKMH
C6OJDzEeuT07t0QVQnyIUb3mxZWr13yJDzG8Z/2oncUB8SGG3OJBalnZAqbf
DHe/H0/OLQ1i+s9gFXO3rrNfJNOPhl4G/9buqY6j9U93fJyqkiWLEpl+NfT+
3XWOTYSm3a+SxHg5M62O/1XL9LNhSOCaJ+LLqbQ+inE29YrxnufkV3liPKvO
SbyGdOoXEkNp1Po15Gka8SHGea2AHVGdSnyI8d/cRw2RH7TEhxinNHoDTq7R
EB9i3MyuMjzvlUh8iNH05Cqr5VIc8SHG81+BS4eoI4kP3fHuZW2yehhEfOi+
TzdWgjV7IfEhxlHWL/1jL+3a9bgmxtIJLTtf+Psw/XqQL8niry4NpnwkBgeh
ApMu65h+PnwL8rw8+UF8ux7PxLgw2dCYPzyJ6ffDrtFCeW7PZKb/Dxl/WiVr
XVKYfkCYnmlR7K1NpfmUuvPTM7F11aa0dr9qEePSidXlfx1Oo/Vcgv6Douwn
90wjPiTYdfzumJMHU4gPCUThTd+GlScTHxLYHdtetvxXEvEhwdxJ/M09zyUQ
HxKEGy3VbxTGEB8SxFY9Gmr4I5T4kEDYmqYemLKc+JBgT0CXS82tU4kPCf6d
wCvIi5xB64cEH92HLpp8cAXT74j5rYEL/YPDmP5H2GvKx3ePiGH6IWHcaMr/
9HcC0x+J5Z9f2xn+TGr3q4kSjJm5bGrX5GSmfxIV6n8HxYWmtPvVHAky8HAI
+1gq5T0J1KH1Rs2j0tr9yluC1/cyRvzdi+lPlmDlNv//pvWh56lWSPDj+vte
Odla4kOCeS7f8qfOoD75UAkO3uuTEB+dSHxI0PNIL4dmCfVBxknwaivv78wj
UcSHBE9/lCZ9CF1DfEiQlhdgPVe9hPiQoM30z8q01L7Eh+7z7EyjFrtFTH8o
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
qc7Xi6OIDyus6saxnz0/xOn/ABKVZ7w=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw11AtMU2cUAOC2UN7QKULYkmWIMlJxynOTEPbjfDAHDhgIC9uQlPHcQ9wK
LghOWCbJAANSBMtQzEQodiIUCs7H+YFRULop4hgVmDyKFHmsCBQQ0I3e05M0
N8295zuP/+ZuFhz5KI7DYrHi/v+tX5l4hcLl3BW/CwoiPrcePBpg933aoPM9
4qkPHjVKSZJEpZ6CP5TrYUPziq8GLgQ+gHh92NDfP+U+9OZ1AePZ0GlexEZL
t3b0rGmASlzzQXAfeta0uNIrONr3BmE8KzoT8VZ/qe5v9KwoWz07kLPYj54V
9d55zrG77yZ6lrRyPHVhJHAMPUsa4qNrNlM/Qs+C9h/nw1TpCHoWdIOiPvqx
/Rx6FrTJPHxjlHsHMJ45DT4qWtHtNPJnPHMaU+3Vwm209Wc8M/qeMKDwXSt7
f8Yzo5Hp25PK06z9Gc+MtmVn+kxXPcX+TKkwyW7HmEgLjGdKHxQLV01qtKDn
lCZUnCQtc3apIIxnQqllKvcv7ThhPBNal3E0bU/YIHpcmmq7dzkv6AF6XHrT
5+wVzpYR9Iyp+9lV/pX8VpzXmPa8WqCID1WhZ0wFWcNrW8MeoWdEG049/lDo
IkPPiGo9WxyCxIPocejt7sbjB9e60eNQld+d7trUh+hxaNH+5h+dvSbQY1N2
qGylWqTB82BTpbmrcnhYRRiPRQdeDvV+ktCI87Lorgs20t3ffYkei+5tn3YU
mEuIhz7/JRw72MW+12jYzwuozOsc4bv9iue1Bh5Vn1VVdsmx31VQ/yYK2Zyf
jOe7Cm7viLNCTa+jtwKnJlfIi1uG+s9hzXRLkWC0DEr13jJYuGsEeZnX0VsC
x8QdfRO8KvSWIDog6lih6Bp6i3DFuly8rbMJPR30hr/21Xa3DMJ4C+DELYhX
aBrRmwf+1gbH4h/q0ZuHkH/HDqWKfkZvDjy+GQs6LTd4z+DqntZEF68q9GZh
sYNHZMlS9LRwuL7I0UIrR08LmvSgcslwIXyuz5+BfXdT7smFMtz/FJyR2xW5
PGsgbvp6k5B/q8TBPTIL55+A80vjNXJOM3oaqNUkK6MOytB7AgV2T5ePF19E
Tw0rXw/Ixq/dRm8UjinfHhxQy7DfYfg2wmea22yYdwhCTlQLSiw7oVOfPwBz
Je22cXE3sL4KPh5ceG5x6C6J0dfrBXZsacjuzFH0e8AuadM/Oukkvi/3wcnX
9eSBjglSoM+/AxvYmyIvVw7i823QFRZ7el5aQ07q71+HqUtz7aVpncD8l8CR
xIvpQ6YdYPgCptSGy4J5hYb7pGTbk8M9sZRQJp+IOfZv5inaCfOBaCMOdfwT
NzPaSAVTn8iaL/m37Ggz9EekYSmu+0LbDf2T9J6f8s7OtpAUZj7S5rtToNxc
ifkqEshPFuaE1sF9Zj/EryY3pu58k2F/5HU7FtehoRD3NUyEBa3znqfryC5m
/8QnIUFXqqojTL6aSOZLrHLisyGROT8yMx2j+DPScB4a4prtl2D/SxUw9SdI
mXe+zr28Ar1JkvuGe8iZJIM3RSqKJLPvV4sI482Qi4cOVDh9ITG8f6Q7XNWy
RKXwH+QoC/s=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
nNWsj4plAwNqXujVrJ+KnpbjvcrlatZXxQyrjA/X+cTjqhrPlHdFVy3VrM+K
E0WOu66bEY9yNZyc81fd+61ifVcs6b3kwfMvKvJDDfMLl+K+/KtifVi8P7Ep
yrJGxfqxWNnIeafDYxXryyL25wH7nuUq1p/FjNX9388oU5Efath4jvyaXaJi
/VrsPW/lc7dQRX5ocHzdvtxWJ1Ssf4sBsUm9Qg+pyA8NMmY/VS7NUbF+Lpq6
aoW3slSsrwveuF1u8gwV+aHBXVyOmpKuYn1eJGq+niheoiI/TM/Py5CpklWs
7wvHy5pVSbNV5IcGWbGteDWxKtYHxuSqsg3hE1WsH2z6+eGtqihSxfrC2Djm
fY7XEBXrD6N39Ej7g31V5Ifpepve2OLUQ8X6xXh87Fazwx1V5IcGH/nNIvyC
Vax/jAE5TdMvehOPkRqEPZlxYICLivWTsVzWLPctp2J9ZfTdNiR5qVLF+sv4
9293V0eRivWZUXkx6NBNa+IxW4M+0oDfCS1VrO+Mjbw6O4emxGOhBvM+8T9W
/VSyPjSelixKX/9JSX5o4NvZor5vvZL1pWF8GNdY8FLJ+tNwXJNzubJKSX5o
4KGN67CnXMn61RhacWlC/A0l+aHB6VUpfj0vKVn/GsoLq/dx55Xkh4nnmJrC
5gVK1s9G9sdpU17lKVlfG+lj3I+X7VOy/ja+2itXF+xUsj43hihC/uRuUZIf
GqxIW/s1a72S9b2Rq3WOy1ypJD80MNQLEjcsUbI+OGy6j22yMVlJfmgg+uba
LDtByfriuPFp9dz905WsP466ZQejz0QrWZ8cqd1zrt0cq2T9ckz7uSvzzXAl
+WG6P9dX3GgxUMn65/jQc/Ik+95K8kOLZ7M3jw/rpmT9dORlbL0Q34F4tNFi
QeiR+JwgJeuv40w7wcKH3krWZ8fG3rbPea7EQ65Fcb+PK3raK1nfHVXuTf5O
UxMPgxZt764quSVRsj48NnI/u0rsiIeHFjmWay2jLJWsL49Go89anmyhZP15
nHlX0dmysZL16fH2xppJZZ8UrF+PZyXf9qXWKMgPLbgTJ0J7PlCQH1pkhR4P
EF9TkB9amN2oSvi3UEF+mM4HqqZXjijIDy3u2MddPrhTQX5o8Wfni8ubNijI
D9P19J3SkL5UQX5osT7MMHjFXAX5oUWMkqtcE6MgP0zXdzx1TvZoBfmhxYbI
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
D1lmi8TPc/kh/wcAycS9
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-1.1930841159013463`, 5.51195742605802}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 11\"", "\"A ED 11\"", 
         RowBox[{"\"A Lehmann 11\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
n13UmSJz03cXWzAvuyjlfzoyBqrvMR+7qNdOZf/CDr0nGDy+UjVLh0RvDNFe
T+fxlXJb6m65f7iZYPD4SnW+OPL6+L53BINHJ6XR3nWniesN+tNJld2reSu5
pAl96aRY/9bvKmWpRz86qWMLz+tEq1ahD1+oXzGXQoZc4wigj/dnapucUaKd
fiGlRB/fz5Sd4s5n3rF1lAl9PD9RJyoTY3YqvaaAPn4d1Kbbwvn1Le8pxnh1
UGWrT4imtH7Cev1ITdbqbJoJ6ML6bKfqu8Ksnul8x3pspz59J7+JdP+k0unX
20aRtf7xRwP7KRb6gvYHKkXr+Db2G0MUSb+eD9Qxncdf9mwdodLp9dRKzfAv
U7T7NkqxMB4IUAd/Vt9KshjHenlPfVhhsWfXkwmsjxaq0OfrYWfWPzh/t1As
Nq+LswWnKAb/Zqr/t+DoMK1P6KQf7h3VNfI6bkHsNKVE5/uOKi913tRC61s8
6TzfUmksZVk7t/+lOun83lDxAj4Td/b8RX/eUAcDpO/1yf5FX15TNbmm+S1F
0+jHa8r65yYTVpFpijH+L6kr20ZzXunSzoc+3i+orafe9p1e/4ci6ePbRP3r
EJlxo83TQB/PZxS/be9ETMk45Ukfv6dUmaubZfqaMRyvJ1SB9wtd7rQRHJ9G
inPuq3/EwBCORz1Vp1d8PPLoAF7/Y+oZMd4K1b8okn69dZSORteXJZI/KBb6
A4oaijS2ZNez6aY86dcDVEuLZB9/6RfKk37+j6grxs4iqyo/UCz0862mVs8V
HK7keIvnV0WpyK2dIk804vlUUD51Y+erxSrw/UsptY+fTwfFXsX3K6buWvZk
F4iVECz0BxoFlPTCOsnqZFre04+XS614IeAeOPaEYKH/fRaNw9CZAO5XBAv9
fFIp/bPt+z/1vsHfR1Mf0prWW9x5h//3pVqr970bft6MfrCwfNuueCzzUAvz
90TUiQ5b7p3M/0cTWxdlGDVX0V5PL6BUgl+Yas8upB1Pgv7+hI5TH1vFurcE
C/0DG7nEw6rF/v4Wr5nnTzSd4t4nGdVE4PURAT3Gane/NmL+lBKLlKckXT/V
Ejg+BMvcj38sBx8QOH5Eotb9Gy3PiwgcXyJj+lJpcmYCHv8RcfS98HLyXQgF
DD7EkpODE9kCd5j8iPUe7uYKeWVMvsQ85xWfWk8+ZPInJFqSul1mapj1QYxm
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
ESLSwkDvxukU1g8KDy+n8opmJesPhcXrM9HKgwriQ4hxgss7JnxIZv2juLs8
zqP9SDzxIYSjhm25fWUU6y/FPM24tBOTw4kPIVR/aUc82OXP+k/xdWlWpXfs
PNaPCj2d6hZ7R0uaH0LELXtU2vjFk+aHEE9Wr9/zQBDcqUeNENzDtVusZkZQ
v54Qh0tWvDjT4RedfHS8f3rDPx/RT6R+PiEGvH1oMTVS3ulXz4TQWC4rdvmi
YP2wWH9k1kJlu5L1xyK87v3zOWmsf7nj/d2WNHVlYQrrn0VCo5nJfT7lwzYh
xue6zTg6Qsn6a/GgfKyT7zU58SHCOt3f8TnvE1n/LX4cs+3xnyqW+BAh7evM
lxaxq1h/LrRyH4XdqVvO+nUxKDe855y2xcSHCFfizGY4VU5n/bwoctW+3uep
Pc0PEfbfmnIm7KMvzQ8RuleLloi2r6B8JcKwhpWnf1etonwlgs+1W4GyQ7GU
r0SwGaTcNO1DIuUrESbMfW+dVCqnfCVCxX8v7yq6KSlfiaDfsnaT+yMl6y/G
hNaKjResUihfiWC89tvD1ZwU1n+MBKHifF28kvgQYUvmuKg7/v+/PxmHApyD
dl5MZv3K2CVXj/31Kp71L+Ot0u+7xaJo1s+Mu7N5W13GrCQ+RDA4OnREyPhA
1u+MHQead9g/XER8iBBroJn8rFLM+qExd63ONu9DrjQ/RKhxXbW58qA/5SsR
jC5Exlu3hFG+EmHyw8RHAmEU5SsRhoTvM+x7No7ylQh3DEcFTdiZRPlKhJ1+
P+unPpdTvhLBO6LHsPZu9H2pUhHMpsw1LDmoZP3Z4P3YVdfnsZL1ayP8QtQT
u0Il69+GxcOxryJrFayfG3N75s+oXScnPkTg2OS9+fk6kfV7QzHo06pbT2OJ
DxFOvt9+5opFJOsHR+BgD7WiJZT4ECFzcilnwNmlrF8cv9VpOvu7zmX942hY
UvRPr/ixND86ru/PV5YOX+1J86Pj+qwPXLtubBDlKxEaxYGc1viVlK/EsMlo
r2/yiaZ8JcbssjP+TfviKV+JsWHrHe9pE5MpX4mRM7VMotFNwfrXYWriuRUt
CtbPDs/4PUEPVrLzhxglnKEj70QrWb87FuYIftv1UBIfYoSYNhj7GytYPzy0
akbu3JuaTHyIcTGnd5lJ7wTWL49/+5TctH8QTXyIMf5hc8PLvhGsnx7K5T9O
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
46Q9
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw10wswnFcUAOC1sd6spiFerdLQpNIM2oZEuWI6GpUm0WqZoiQNFSIejRmS
eDRFMIhITaikJVGJhm1Q1iOci9qx8drYxluihDBeYT0bsq39z56Zf/75597z
3XvOvb/JydDP/dksFsv//2frzYQ2zY7WfEO8+Rv5OXcruHQseohqhdaS92XB
pTFOWXorujdJR/tWaFFH1zoft/pqCJCFFv1s4rQeb6MWGE+LZpssjbz+JB89
TarY33h5wLgZPU3a5331isa+CvQ06JWdLu5H/wL0NKiD3gODb4+2oqdBLbLb
dVcy49FTp75GkUofBIjQU6eb0oc3NFKE6KnRIuNLfgXdQvTUqL6R0ScRkU/R
U6NnFr9aMlOrB8ZTpcp3FJtLhXPoqdJjNuIZpUiWI+OpUJ3qbn7Cr2xHxlOh
volXBRv31gjjqdD0D/knMsbFuD9l+kuJcXXS/ifAeMq0aTBrxC5gEGRcuxK1
X95o3iHiEcZTouet3lWWTjxGT4mWXubnHDBrQY9DeSrnYr6YakGPQ++aFhb4
rnahp0itqoM7vdIzsV5FuhD+iNP1fRt6itRoIivnrLbc20ZVdcZTAw346G2j
rZYf5Tce70SPTa+bskLGM/nosWmjOK7SL0jusam10WKbecwAegq0eNjktdKB
PuyfAk10jhps4nUSxmNRmyEj1xKvBqyXRcM+tR2OXyhFj0XzHEq6FexCiLUs
XwqaeTY/SSN4uP4reK4v1k5jl+N5bcLdG3+6qs8fQH8DDgsHUidmK9DbgFjb
4rpUzn30XoLA1EwgbSlA71+wSJHsXn/MhxyZtw7R1f7Ouq35WP8a7Nq9Pd1M
T+6tgRBcgvZLqtBbBYO2Oc/ivWnorUDIoGCgjluH3jJYrEzO6C/+gd4ScN8s
IwrhZegtQR3f5uAsqwE9CZx206rbbpWM/VkEj5fBX0NWA3oLoJPgGe4zVIPe
CzCs/DHFK1HevxfQdMJ5JkvSTE7J8ueg9qDTmMTvd+zPDDxaVLGv7moES9l6
02BStdLjbd6C/hTMx+XufSi4hd4k2JdeemdovB29CTh5p8POepWi9wzcSzMP
nS8SoDcGG5yCKifbv9H7B3wujRmaT+fi/zYC1wwzylfLBkmrLH8I3A/fF57b
M0SY+f2wIkrJecXtAT/Zej1glsRxfZ67hr4YbhkGevi6sCnjiaBvl/7ZZEsW
zZTlC+HBcYXVC9/N4/xm+AE8vMt590i8bLwGPL32HSkOHcbvYvgYrhXcfksk
v3+sWctAiNOtBRwnXiNRIvFcB1Amn2QcMfcfGxWAI+MT7aauYDcqgHxmfXIx
MLbG/qYY6xURyfrS7dGRPvn+SayuIKnoPRGEMfWRixF5Cus7cgmT308skrt7
7QpaiYjpDylZVjl0rLce9zdCXDMtpad6y+X9JcEuDsZdE01gy/SfpIQOvu1u
UAhM/jMy2pLULuLXkEDm/EjlU73AtKha+fmSaQ9uWerOLNz/FLk+GabZU1GL
3jT58pugBLXCEvRmSE2M057YhBL05ggd9YyT9lbJ7x85Iwm4wOMkkf8ARHsR
kA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PfqpdlNBZwkj/vPBfipxNDbdPtkOPf5R7WkWuserDNHjHyX+SXlLzvR/zjyP
f9Rfz427t+9gUzyPf1SsUG3az6fWFM/jH7W8bl7g0bsExfP4R02/JkXd8HWl
eB5/qQiN9RabyjwpnsdfqqdVpCNF2I/iefylBGZ369ScD6B4Hn+phCXmK6WD
giiex1+qKb1n3bqhYIrn8Zc6veyjwOCpuRTP4w91JXmPXYpHGMXz+ENtX/Xm
0Mff8ymexx8qMbqE3OMbSfE8/lBC18QWppyJongef6i7P5SGSgQWUDyPP1Rb
0der6eELKZ5HH6UwO+PR6roYiufRRykGbl/XzYyleB59lFCSVqjPjsUUz6OP
+pnzW1zqTxzF8+ijnq/qWn5g4VKK59FHLXv5YIb/i2V4v72PKo3anVAzO4Hi
efRSN0+HmzOXJlI8j16q6V2Pl7n5corn0UuZ31oqdPffcvTopeIUGFe5t5LQ
o5ey9XH8u//ACvTopQpelZx1j1mJHr8pS/PQyAPOq9DjN9V2fPfWGs3V6PGb
evp622mp0dXo8ZtS/xhY0/5xDXr8pr4/erki6XEyevymZiUwd1o0rEWPX9Tx
z6OKSTfWoccvauol8kPWzRT0+EV9NC/5NnZ/PXr8olZfvXpB58UG9PhFeayS
Korq3Ygev6gfEawuJj0VPX5SNizno4zcVPT4SW2Qcqz4abcZPX5SHeYf8zue
bUaPn9QsDcqLuz4NPX5S3/xaFhnpb0GPn1RmceBXu6db0OMn1R0xN+XC7nSc
/x/U0ZaInz0eW6mIifn+QZHbHZ/Nk8mg5Cbm9wdFxVVKxz/PoMom5vM7xU5L
iz16YRsVMTF/3ylpw7lL5u3ajvP1ndqZ76k0ffkOnJ9vlHlmXu37iJ04H98o
S105hRdzd+H4v1G/lUyNn87fTT2cGG8PtbCjqmZv4h4qdWJ8PVSDcsHC5j17
KcbEeHooKMsjl1zdRz2cWE/d1I8kzeslyfupVN4DA0qA3nb8plYmrpduir3h
URv9Xiauj69UvekCW/WNB3A9fKXu3G6QP+B0EP2/UuVd5FUDkSzq58TmvlBl
R66bnmrPovZP+H6hko5vkn905RBFTnh+oZq/7KkrKjhM/ZyY8C6q8pB9IzPn
CHp1UdYL21vnnz6KPl3ULq5UUfb1Y+jRRdEKD9Mmfc5Gj8/Ui66fVYfZJ9Dj
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
xSr/IurDE+rgPS8mqIsM/wcPK80L
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-2.285826380600569, 
        2.3278898583585126`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 12\"", "\"A ED 12\"", 
         RowBox[{"\"A Lehmann 12\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PIYprjMc61yE7qIfQxSnc8BHr+o76McQZX9U59zW6tvoxxDVeXtLTKcoOz+H
qIngyXf7qUr0Y4i6MrC9cLitDP0YoqKvu9ZdO1mCfgxSy3PtNrUo56Mfg1T7
7XsyblkZ6McgFWWboFQTcAn9GKTClTed5JdyQB6D1Iy77y8ZJCCPQYrHZt3Z
jCPs98FBKmdRl1vxthvIY4D6uGxLL+1VKfIYoPi/nTrYn1KJeTVAta9XWhHa
UY15NUD9qQ0vsoy5i3k1QHUU3FcYSa7FvBqgLL/0yb7uojCv+qmYdper9csB
/einxI61/41UBPSjn/LNWUwEMSj0o59aPn+jfuDmGvSjn2pazqX8pvQ2+tFP
3TA7c0HEtgr96KP2DD7XtD5Rhn70Ue9n9Z1NeXoD/eijrM8mr0h4y17/7aNo
y+OeuNuwz5P0Ua2vRbmFK08hjz7qldRt61mnUpBHL/Xn3SkXuZN5yKOXqmir
0zfPvok8eql7j+p16msrkUcvJaukaMlx9A7mVS/VFd9TquFJYV71UpWm4Ofn
VId51Ut5VYl1SdbWYz79pd4paiyRSmsgbJjj/ZdKMO/nNuG6R0gwx/cvNT+e
dlf9VwNRwhzPPxR/YIrmr+0zP88cvz/U8k+FMmOG9Vi/f6jfTqM2N/MB67WH
+qerfVXaqAbrs4fi7vK0nNhxC5+/hyI22358UlBKtDCf9zdlPRbNIXUnj/Bm
Pt9vasy2t6XOOIHQYD7Pb0pVTu7SujXuVAuznn5Rhrp7njCeZVLerAVRajUv
/4dnhiVYL7+oMNq9Yx+PVGF9/KSKDpxt26pfi/Xwk/qdRZvQW1WP/H9S6UW7
jKZ5G6le5uW6qfPbsr70HHhARTH5dlNDGzL0SYNHFMnk2U2pPteYnXHxMdXL
HPAu6oTHsbAYRhPmWRfl0UbEfaI1oS9d1DnOjMDvjo/Rjy6q03FB9x/BR+jD
D0r92RW/bf33KRaPH9ROoZbgzPn3KBaPH9QiX78HBQ+BYvH4Tq058mnnh7Rq
isXj+8z8L3y5N7sE6/c7df9GV/2KDalYr9+oPE+tdNvZEcjjG7Wl9WnrB+kb
yOMbpTf/QJ9tejXy+ErllR5OzjavRx5fqdfqk3S1rAfI4yslXiS5P+lqM8Hi
8YUCtfm9RSktBIvHF+rK4RMvNRJfYJ5+oboLQ8NnLWvF/Oyktn0cqn54/BXm
ZSfFO1w1von+GvOxk8pynJ+Tu/01weLRQfWPtW4o7535eSaPDmpnrG1KUF8r
weLRQanemtuXseUlweLRTp13K7TW4H+O/rRTzsY57a/mNaMv7dT38OV/Azkb
0Y92KnDuljNWjGr04TMl+Xu9xWa/RAKY4/2J2kFahpUaFVMazPH9RFm+ybCM
jW+gbJjj+ZGSXBLC/Vq9hQLm+H2gjIZ/j+589ZpijdcHSjph39ulbz5ivb6n
bFKEkp4GdWJ9vqNMj5lYZi/+jvX4jpISntzU39lNZTCft416eO26hVFID8XB
XNB+S+VncStNhPdSJPN53lL7ihfbmK3tpzKY9fSGKuWKOer6dYDiYG0IUE83
ildmHR3CenlNjQgdEbJ6OIz18Ypq0UgJDeEcxfn7FTV/9huRO2L/KBb/Vsqb
c42Y0O9/VDvzci+p7wevDxsnjFEaTL4vKXjYYTkw07d4M3m+oFrtlj49bjpO
tTP5PaeqO9vDmjePoz/PqabHmlxiyuPoSwulJN83NVIyhn60UA+3WXDQJcco
1vg/pZYsLfj6d9XM/TDH+wmVyOOmeGHFKEUyx7eZekdrupA0M08DczwfU7pb
5q4uKh2ivJnj94h6UDB7qnzZII7XQ6ql7VWJ/JV+HJ8H1KsLJ8PT//TieDRS
Ly+1qGTu+oPPf4/q6fsud//uT4pkPm8DxXFaI2GW3A+Kg7lBUUeFFb45oHf6
C+XNfB6gdtS+Lftc9pnyZt5/LbXVbZfYSNVbioN5v3epwABZXgeeF3h/1VR+
f9n2sD0P8H6qqIdPug/Sparw95dTZ7mCn5R4nMXfd5NqPLhrMlC2lOBgbmgU
UQ4/Bi6UpM/kPfN6+ZSEmfgX76GHBAfz/8+hVmUdjvQUeEZwMO/nMnXqwLFV
lt3P8d/jqMSV9pJvC17i9/5Uzbem7XuaW9EPDg5N21menJav2P9O1P586bJ7
I/v7OEJq9A6lcHvm55kFdJngDTcN/VA8cz1Z5u8nNPmD539c/oLgYH5gI58Q
/DcAaUdb2PdPOBZ3N9Bimwl8PiJKd2RhSscDzJ9yQvbGEYGNH+sJHB/CoaM9
ws7iDoHjR4TYPfrE31RC4PgSfuM+0TevJOP1a4k/hRfG1n8Ip4DFhzj0Lm0D
Q6KAzY9YY2GR7FxYweZL/Dpz2XvF/ho2f+KA3KGY+ZN17PogRJSh72XpPXb9
EAdXmm/2vn+fXV+ELu2aZe2ihxSw6o9Qc+3fyRh+SHEwN8QeEz4/Wx8aSD9i
1y+x1kolf3HUQ3Z9E0pzZG3rzj5g1z+x6LeyZu7LRrYfxIW1Bj27KhvY/hCR
n9/xxejVsf0ijmrzpGRcv4vP95x4J+ssctN1pt9m+UnYfwsYbmwtxud9SRz6
rhvvdTyL7TdxfLXz9GYhf7b/hOs83h296lE4X7wiKuxX/vh1MQfn+1cE42VY
8xrOEuwPXhP7V9xvOTuvAnm9IQbfeWRX51UTwMonYu30bbtG6xrChpVfRJbU
2o22KkBgvhGPW5VK7ivUEZh/xIPXT6Q/ZtTh/PCOmMMtnv2snL3e9Y5wyZ1d
EmlVh/PPe8K7bHii+BLgfPWBkE0XarW5V0u0s/KZWCuaOs/91kz9sPKbmP9i
WUCt5Ex/wsp3YrHf0M9dv8rY+U+o8GwOi2ksYs8PhLnKqm2b5l9lzx/ENtHo
r1syE9jzCzG17tbrrAd27PmH8Nb8INnoFYX53U7UKR9V5HLPpLay5i9Csf/k
TuAvwLzvIO7u0DMx/FiC/UgHERroZia0uBznh06CQ+zm77MDldjPdBI/ricI
1UpU43zSScTemn/sqM9t7Ie+EKu37vt4lLyD888XghZ18on25jvI+wtRfEJ/
x7HrMz/Pmt8Jhblf16oeqkb+Xwn+2TXRSt5VFPYHROBm3XO3JStwvvhGxNHs
x+xnl2L/+43IelH+zqz2Brv/IHZLvah/FZHL7k+IFpmjP091pVNOrP6FuJf1
7olsZDjW+3fCLrD2633lndiP/iDmeAfs4SyJwvH/QUw+WciptvYK9rM/iONj
a3+W2bLXr7qIq5k54+9PFyKPLuLXiI7R5tclyKOLqP1iqTg0Vor11kWUDXQ8
y0otJ1g8uolF5ftMQksqsP66idJHe7XOLqnEfqSbeO60Qfb5rEqsx59E9mSY
XVJUBfYzP4n+owMpBk7lWJ8/iYiOwLU7XpRiP/SL2BQn1HqhoQTr9RfBc0qd
P/tqIcHi8YtIcxqtnUW/RrB4/CaWkLZe5xiZ7P6Y8N1aN1qQH8/unwk5uMyb
6uDD7q+JcYNMRZUBJ+TRQxj/drDKfR+FPHoIE+lPhe/epCGPP8S2TJ7ULwPZ
yOMPYfT8YJLT1zzk8Yd4uHd1S4rGDexH/xLZ02J355qWYL/6l5izzaktLOom
9rN/CU5dxXrBQ6WYV71E90vbfWZ32etdvYTZeLk3T1op9se9xK7OL+k9PKVY
b70EV95oZu5ECZXHev8hAt+TPBLyxVh/vQTnTC9+3+06ri/0Etnd3aoOBtew
HvuIEdXxpUnOWez3LyLDy7nNNz6F/X5GVBgfU7D3iWS/vxF9FwtDcqkz7Pc7
4hI8tFDb4Y68+4g1F9+XpgtEEwqs90PCbWnnxa/aqci/nzhvof7+kUEWvu/3
E56UmQljVy7WQz+x8O+OEPG2fFwv6CdSL396b32tEOujnzgsH3EmtawI1xsG
CIODzq2HB4oJA9b7L9HW06b8QK8E63+AaIk9pbpsqhjXMwaIhb4njCufFqEP
A8Q4z4rWIx8LcX1qgFA9bRaydXkB+jFI3Ajx16sfysX3xUGiPCiutHZWNvoy
SFg9VE67/ykd622Q2LxZ/PSJ+3EEi8cg4bI1szMnIhDrb5CYd2v2kE/nbvb6
AjGmKxmf1eqFPIaIV5t+ZwkuZZ//GyJUpR78NPiZjDyGiKerthxq68lAHkNE
G02PNnUiB3kMEd+N6zZk77uGeThERCxtXllalE+xeAwTQpP3tNZvv475OEyY
TujM6VtTiO/7w8SiYV6Hr+6FmJfDBPnsufzY6HVcLxgmJLnoHzMb2ftZw8TI
Bc7tJd15uN4wQrwI/ygm7ZxLsXiMEPmK+n4OztlY/yPEvLUi/drTV3A9Y4Q4
GEx0qexPYq8/EZ8XLg54szSKvT5FfC2gu/ycuMhevyIMy72+qs3fiDxGidP3
Fo/fC/JFHqPEqcf6gYtso5HHKEE11tss+JeEPEYJjSabS2ltV5DHKFHx1eZu
we8s5DFKPM6uW6N9/Crmwz9C7e9G05Kd13C96B+RMP/4qM+1PHw//Ee0XO4v
ersjH9eb/hHyE+vmyB3Ix/n+H2HpN3uy8V4e+vGPCN2+Zmtw+DX0Y4zIr+j7
0kldRT/GiMU6UVf+OWSjH2PEm0NSj/UyM9CPMaLqSPrPs99S0I8xQiIr03TR
71j2+ichtu+itYJQCHt9lPBOex8n7ueMfowTy2jq4kNn7ZDHOMFvUFaRVOKP
PMYJnfdneE+ERSOPcWKD257ExyuSkMc4oaIsdbPK8DLymCA+L9FLo1dmYl5N
EFfydowovMrGvJogiu1jPz44dRXzaoJYw9NWstgjF/Nqgtjsc9FQoD8X82qC
+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
zoxj80nh8rTnisIh7HklM5xtsbklc4wkPsxwtdDgkElKIPFhhjKzp8r43GXE
hxnW/LfuV/HESWx+KkoLb9gcNZlHepjBhm+749+ZPqSHGVI8Jl3Z1JvpYYaB
usV37HKiSQ8z3PTwWxhuriY9zDBrgNW6oG9x5FdmyNzi2O7BxETyKzP02f7d
tuFXEvmVGeort2zqpJfC5svC58oa543BKeRX2u+jOkwYPiiFzafFp/I2gldI
Jj7MYHFkZ+DiA4nEhxm2DzjrUaSMJz7MkGiWc8z9qpr4MMOe3UN+WgxREB9m
WP+qzeucbmHEhxkU4X06THPwZ/N30T5vYtJIJzfiwxy+w/eNL77fjvQwR2j2
sYEL3rmRHuaI8diZU6X2Jz3Moevb7Wm9IIz0MMf3LDMTpbmC9DBH/if1wfE7
2XxIcxzmDKzZNyae/MocJpIcs0fTE9l8YkxeG1x0/lwS+ZU5zk7+5jw/h/mV
OWqbxhTtK0smvzLH6K83HTgTkokPcxzvPmxxH1ES8WGO04v5Hc96JBAf5nCe
XFKVbcz6C8zxZm/S2S72jA9ziD9YlGzlRLH5zZjxeVW3vNdBxIc5Li1uE1Ti
tpL40P78/YSRo4/OIT7M8cUrrjQ70570MMe1HzaH1n72JD3MYVY0SH/LodWk
hzkSupx8vfRjOOlhgWUN7870Ha0kPSwQ+U9R4xaTWPIrC4x7pZNxPDCe/MoC
SZX9W3zHJ5JfWWBjd6PmeWHs/MMCMZ3+9fvaPZn8ygJO85uvvf6bxOZvI8CB
b1/jkER8WOCFnYPll79sP7fAj4+WhxrN4okPC1z9ll686aCa+LBAgabzdmmu
gviwwNL3O8/rtAsnPixQ2Na8oV9FAPFhgbwHnOaXiz2IDwtYbHWOD04Zz+aT
w264naeBqxPpYYFz8feLV+9nfWAWEAkkywacYHpY4PqQLl9tMyNJDwtY3+63
KucRuz9uATn3mL1daCz5lQVUWy5GuOSy/jML5Ay/9dxFnkh+ZYFp/15q6yNg
fmWJ8vodOmsjk8ivLJHUxeP++2FJbP47/Cp2D1w3J5H4sIQqpvlj2ZN44sMS
73Ytnr3sHru/YIkz97v4WE5XER+WiMt3TVtZGMXm0yPSwOOeumMI8WGJtO8D
NscXr2Lz7eH3q6nP4iGuxIclRGZu9uvm8kgPSyyJth9fMdCN9LDEuS+ZU/K5
fqSHJYIq/+7ftC6E9LDESrMly/O7RJMelvi+QVXOX8TmL1tio33+i+ryWPIr
S6QEKMSOe9g8O0sY9h+q7/I7gfzKEtt5Is3xk8yvLLHg3oNbdc8Tya8sUfQ0
09bPM5H4sMTQ6u59Tsyhfo73lih5YNDEPRxHfFjCpPjIo3QN64Pkw/PrXV59
pYL44GPiujqdFbfCWT8CHO4vdfHhBxIffFxoHjWpumE58cHHqtOmnfaazSI+
+PjlFvDfJ5PJpAcfTyP314prPUgPPk4Ez1nuvCWA9OCjvmut+WOHMNKDj2fd
OuqXusaQHnzMqRjS06dCRX7FxxCD7esHtcSSX/FhW9Xp5YQ98eRXfNS+ajGS
nGfnH3zcaPK73mSfSH7FB9+z2X2vdSLrt8DUXdV5xqkJxAcff63e3a9zZPNp
+Uh4vKFnWnIs8cHH1j3Kzm/sVMQHH9mTFz3vJoomPvhoY3th5IG/IcQHH+1k
f4+bTmP3A/k4e3Dqvn/d3IkP7fHtsaJt1WjW/4HlppyDLxvmliX873EMAQJy
Zm9KXehF88sEWCN/Ua9JCmxdbz0EuCoNdbn5kuklwLB3N+bHpiiov0eAuNd+
XH0rdVnr8hKA16fLlsuyOOr/EWD/1g+D6nLjy/r8TwABzvZ4nOIVnsD6UeD3
MV768EoC6StA/RaBWh2bwPpVMK759SNNYTzrX8G6B1c7XpsUx/pZoGlbNm3P
ItZPIMDOi1d8zv1VlN36/1/fdAGO5tsucg9i/d4CmNTPG393bFDr+p4nQGlI
tN1DI2/WH4Ma3abDN3Wdy17//8MtEeCf/bJtLselNN9MgN4vDy3mz1pM/U0C
uOY9v/U3cRWtHwFafDi7DRyDqf9JgOweplfmTIuk9STA0CzDtZ2m0PmgUoDu
87/57laqx/5Pj3gBLPbdCnEYE8f6dbDSNq2wPiSe1pv2+4/4VflCxPqrBJh/
uI2655gE1t+jPd9rGCa/Ej+29fUgAexOtrkcduH/+n/QpfTigq8jYsf+T48C
rd6zlvGarVSsPwgRX6JWtYuIbvW/wwLcsFd1OnOHXf8WgN9dguCMANZPhKjj
+x03/evJ+ouQdr+xyHiJI+s3wmfpMdMNbya36nFDgObszhb3uR7UHyaAYu+X
fiXH/MlvtOvj8mDPdZ9DqH9MgKJKv7V22VGtelRp14OfTsDBk0rqLxMgprve
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw10wswnFcUAOC1sd6spiFerdLQpNIM2oZEuWI6GpUm0WqZoiQNFSIejRmS
eDRFMIhITaikJVGJhm1Q1iOci9qx8drYxluihDBeYT0bsq39z56Zf/75597z
3XvOvb/JydDP/dksFsv//2frzYQ2zY7WfEO8+Rv5OXcruHQseohqhdaS92XB
pTFOWXorujdJR/tWaFFH1zoft/pqCJCFFv1s4rQeb6MWGE+LZpssjbz+JB89
TarY33h5wLgZPU3a5331isa+CvQ06JWdLu5H/wL0NKiD3gODb4+2oqdBLbLb
dVcy49FTp75GkUofBIjQU6eb0oc3NFKE6KnRIuNLfgXdQvTUqL6R0ScRkU/R
U6NnFr9aMlOrB8ZTpcp3FJtLhXPoqdJjNuIZpUiWI+OpUJ3qbn7Cr2xHxlOh
volXBRv31gjjqdD0D/knMsbFuD9l+kuJcXXS/ifAeMq0aTBrxC5gEGRcuxK1
X95o3iHiEcZTouet3lWWTjxGT4mWXubnHDBrQY9DeSrnYr6YakGPQ++aFhb4
rnahp0itqoM7vdIzsV5FuhD+iNP1fRt6itRoIivnrLbc20ZVdcZTAw346G2j
rZYf5Tce70SPTa+bskLGM/nosWmjOK7SL0jusam10WKbecwAegq0eNjktdKB
PuyfAk10jhps4nUSxmNRmyEj1xKvBqyXRcM+tR2OXyhFj0XzHEq6FexCiLUs
XwqaeTY/SSN4uP4reK4v1k5jl+N5bcLdG3+6qs8fQH8DDgsHUidmK9DbgFjb
4rpUzn30XoLA1EwgbSlA71+wSJHsXn/MhxyZtw7R1f7Ouq35WP8a7Nq9Pd1M
T+6tgRBcgvZLqtBbBYO2Oc/ivWnorUDIoGCgjluH3jJYrEzO6C/+gd4ScN8s
IwrhZegtQR3f5uAsqwE9CZx206rbbpWM/VkEj5fBX0NWA3oLoJPgGe4zVIPe
CzCs/DHFK1HevxfQdMJ5JkvSTE7J8ueg9qDTmMTvd+zPDDxaVLGv7moES9l6
02BStdLjbd6C/hTMx+XufSi4hd4k2JdeemdovB29CTh5p8POepWi9wzcSzMP
nS8SoDcGG5yCKifbv9H7B3wujRmaT+fi/zYC1wwzylfLBkmrLH8I3A/fF57b
M0SY+f2wIkrJecXtAT/Zej1glsRxfZ67hr4YbhkGevi6sCnjiaBvl/7ZZEsW
zZTlC+HBcYXVC9/N4/xm+AE8vMt590i8bLwGPL32HSkOHcbvYvgYrhXcfksk
v3+sWctAiNOtBRwnXiNRIvFcB1Amn2QcMfcfGxWAI+MT7aauYDcqgHxmfXIx
MLbG/qYY6xURyfrS7dGRPvn+SayuIKnoPRGEMfWRixF5Cus7cgmT308skrt7
7QpaiYjpDylZVjl0rLce9zdCXDMtpad6y+X9JcEuDsZdE01gy/SfpIQOvu1u
UAhM/jMy2pLULuLXkEDm/EjlU73AtKha+fmSaQ9uWerOLNz/FLk+GabZU1GL
3jT58pugBLXCEvRmSE2M057YhBL05ggd9YyT9lbJ7x85Iwm4wOMkkf8ARHsR
kA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PfqpdlNBZwkj/vPBfipxNDbdPtkOPf5R7WkWuserDNHjHyX+SXlLzvR/zjyP
f9Rfz427t+9gUzyPf1SsUG3az6fWFM/jH7W8bl7g0bsExfP4R02/JkXd8HWl
eB5/qQiN9RabyjwpnsdfqqdVpCNF2I/iefylBGZ369ScD6B4Hn+phCXmK6WD
giiex1+qKb1n3bqhYIrn8Zc6veyjwOCpuRTP4w91JXmPXYpHGMXz+ENtX/Xm
0Mff8ymexx8qMbqE3OMbSfE8/lBC18QWppyJongef6i7P5SGSgQWUDyPP1Rb
0der6eELKZ5HH6UwO+PR6roYiufRRykGbl/XzYyleB59lFCSVqjPjsUUz6OP
+pnzW1zqTxzF8+ijnq/qWn5g4VKK59FHLXv5YIb/i2V4v72PKo3anVAzO4Hi
efRSN0+HmzOXJlI8j16q6V2Pl7n5corn0UuZ31oqdPffcvTopeIUGFe5t5LQ
o5ey9XH8u//ACvTopQpelZx1j1mJHr8pS/PQyAPOq9DjN9V2fPfWGs3V6PGb
evp622mp0dXo8ZtS/xhY0/5xDXr8pr4/erki6XEyevymZiUwd1o0rEWPX9Tx
z6OKSTfWoccvauol8kPWzRT0+EV9NC/5NnZ/PXr8olZfvXpB58UG9PhFeayS
Korq3Ygev6gfEawuJj0VPX5SNizno4zcVPT4SW2Qcqz4abcZPX5SHeYf8zue
bUaPn9QsDcqLuz4NPX5S3/xaFhnpb0GPn1RmceBXu6db0OMn1R0xN+XC7nSc
/x/U0ZaInz0eW6mIifn+QZHbHZ/Nk8mg5Cbm9wdFxVVKxz/PoMom5vM7xU5L
iz16YRsVMTF/3ylpw7lL5u3ajvP1ndqZ76k0ffkOnJ9vlHlmXu37iJ04H98o
S105hRdzd+H4v1G/lUyNn87fTT2cGG8PtbCjqmZv4h4qdWJ8PVSDcsHC5j17
KcbEeHooKMsjl1zdRz2cWE/d1I8kzeslyfupVN4DA0qA3nb8plYmrpduir3h
URv9Xiauj69UvekCW/WNB3A9fKXu3G6QP+B0EP2/UuVd5FUDkSzq58TmvlBl
R66bnmrPovZP+H6hko5vkn905RBFTnh+oZq/7KkrKjhM/ZyY8C6q8pB9IzPn
CHp1UdYL21vnnz6KPl3ULq5UUfb1Y+jRRdEKD9Mmfc5Gj8/Ui66fVYfZJ9Dj
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
xSr/IurDE+rgPS8mqIsM/wcPK80L
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-2.285826380600569, 
        2.3278898583585126`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 21\"", "\"A ED 21\"", 
         RowBox[{"\"A Lehmann 21\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wcwRa6qLFYuIDw5CW5a+XKVVSHxw8C3xwXvBoXzig4OHiwaXsspziQ8OjLa3
WygZM3xwwC08kyHrTSY+OJg6IcLw+tw44kN+vOPH9d9mFUR8cGBm6v206R9X
Zv8rLLYwPLF/2EbSQxvl7o0TIzr8SQ9tfGzl9RbLYkgPbZjvT37reyWJ9NDG
0Du7Hn5sZa6faiN3hh/3y4Yc8ittBHQ83bt9SD75lTYsHE92VroWkF9pI6ha
75DTamb9oY0R49cv+XGd8SttGBie9vpYXUh+pY31julPJvILiQ9tmJ4wCVIe
xsxzbVyZVs0+G5ZHfGjDb2+I6fzR2cSHNmbcfnvFN576iAq1Maj/2H+fWicS
H9qY0Flr2zk7ktk/DSMcFL3EG3yJD/nxGPOl00BkTXxow3j8n/VL7HeQHvLj
M3LjqMqmYNJDG3f4/6SbnmT00MbBN4vX2qox61lt7Oiunj7hIdPHooMdXz+N
MfiXWd/qYM7WBfPCNPPJr3QwfqtCYZk5cz+lDrZEXuoO+lNAfqWDJklo/ekp
heRXOtDSetFs2FVAfOhg2hXV6Y+nMvuB6GBPe4//r8H5xIcO+AuKayNu5RAf
Otj63tfZ63wG8aGDCv1htmeUUogPHRzpnD628Goc8aGDvSO1j783CSE+dPAz
4Ub9nKKdxIcONIfULs7JsyQ9dGBmJmutLPAmPeSvR7Cy09wjnPTQQenK9DN/
jU8gPXRwyffpPw6mqaSHDrIsc76vS8skPXSQyzIS35yTS36lgw7VuW+11Jn9
CHSgNtZs+CT5+dKnhw5q2gdvz09h/EoH4qcHTSYWMZ9/6GJ/iv2D3xMLiA9d
vJo0e4zqynziQxdHc08qxijmER+62FPzQLkzKov40IUqy3n1q7VpxIcu7i89
fP9wUiLxIX98pHLMnKwoZn9I2N+0UFS18yc+dDGo98bW7zc3MftLQmvXwMn1
lk6khy6CX13778Z+f9JDF9MMHIbvuxhFeuhi1DnDCq2oRNJDF7aGt565maSR
Hrq4nsn/bDE5i/xKF0obexweBuaSX8lf347KXcq9TL7SRUjDUvupt5n1hy6c
9lZNThAXkF/pQmXUtz/CQQXkV7oo+G5zQdk9n/jQRdHmoOGbtjDzXBePHMe9
cfpF/RwfdXG5RzRziXUG8aGLbJ5n8FXlFOJDDwkZd+usx8UTH3oYrvathvMs
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
mf0/sxcHwA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw10g1Uk2UUAOCNKWywTSzsJCYM7YhihqYCUccXkSAPKNRJj2bOv60RmhJZ
CFiKZKkcZWr+UvITTAdT/NsEFtyXn4EK63yoy1EqIwZGozH5CVCIct/dPec7
3/nO+93n3ve+b8DmHe/L3Tgcjvz/5/mbDW+qeM9+bcmQlpw98zwm0fKMczt0
sjyy0BmTaPy0ueagwCtgbH4eYmqI3tVy8ZEWPnaGmM6bYewLiU0mrCem9uNT
1skTy9ET0YzBJH/9havoiSgnsdH/Ff559IS0rdI7/c2PqtET0uFI66eXvlAD
6wnp1v3mwzl8l+dFbx8oz1+3vBY9L1omWXpmRr6SsJ4njRvu37mv2YCeJ62N
bFMHfH4LPU+qS/uuuK/gPHoCepc7d8jr+EP0BJRJCVn1+qVu9Pi06GiSPviE
jbAen65Pn59YqOnA/fKpMVC27VVjE3oeND9WE5c4WQ+s50HXj69c8+PYLXBy
ze50ZmH9JvsHOuzPne7VLNiUINCh504V9uzuwZ216E2k1FHlI2GKsb+J1Msv
raBaUYHeBLo9sKF+NAzQm0B3zDTPCZ1J0JtAe3P+niRqB/R4NN8/bE5aRjl6
PNp6StnQKrqMnhtVtQTEckrr0HOjSuHa72VLzuD83OhDqWOMKf0FPS6NXraJ
m1dgRo9LbW8vlIZrGcJ6HJrKxDQsV6egx6HKTJNiILMWPQ498dXJacJKNbzh
zB+HslHltppDVTjvf+En7poevcXV/xh8u1vFC2EKsd9R8Iw1yCG4Hr1RMObE
dDBTr6H3DEr6qqX611zeUzjuc2jyPqGBnHZ6I5DU5pOl3T4F+x2G3xNS2rNv
NKA3DBuUEnVoYA16QzBuk26Wb7yB3j8wOf3oZ3+dakJvEK7kwOrKby6jNwBu
ubYkvttN9AZg61tlfnFHmtDrhy3n4qfriorR64OLef2C+NQW9J6Aj17Rc5tv
QM8BkWZH2i7fRvQcUHVTlbnUwwQyZ74dJHXPBIykBOfTA9qgbQnxZhOZ76xn
g8LQ68bMpSb0u2HW6g+Zdxw16P0JdTHXt/QfsKDXBZGh8xq13gx6VhC8m9se
VPgAvQ4QxMnWLqvqQq8deI0l0S/zM/D+WUCZ1bhqd6YDbjrzH8BiSyb3pIcD
2P9bIXcW7+mKPTay0VnvV+jac2xD1kZRBOvfBUfw4tywtikRrMdA/nltZ9Sx
FyOUzvxbkFWhajki5eH/dbDoy4MaqdfPsNe5XgF/iGMS7n3Sh99qyF5UV9RR
ZnXdP05sVHPob/YWguvEfVV24qDISiibT3zDZZxHQjOJYH1ifulslGS2geSz
9cnBNNXai/73cb8MqenVrxGLOnE+d0lFbXa4/HE7SWb3R4aN8iJVtRrzW4m+
Jn72aV8zMOx8SJAp4smB2fewPwupGtEErJiuc82XKC5E+VnEJhLGzp9cuN/M
T11UT9h8K/Grto8sUDVAInt+JDh5y43ux4zrfMnhctXpqck/AFu/m6SV5mkq
rU3o2UiNTmLyudOAXg8xvhDaO1J4FT078erffqJT0eS6f2Tl1wLpnXQt/Adh
IwpV
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
S85d+v0TkpKqjh2C9+jjI5rFn3nr3LxHHz+RHvFqKfPTfXp8iEXDXO6RpIf0
+BFvX3Yf1tnzmB5f4tW2G9vXcp/i618httR5L5brekbAhA+xbuvmF2nK9Hhe
JR44W9pzGltoX0J60+f2Q89f0/7Ef71XXJTs3tHnB3H06qZoNrTR5w8xbfl9
brJ0B31+EXcNHz/aX91BwMT5R2TeTnXYEd5BCIwvGN8jDOR7nE+7txPkxPlL
hJeWLT/h9J7A85sIDJj+xWd7K15/HhHcrEV3Kj61oMcT4pHiZtnrVc14fXtC
rKmrVVv/6ileD58S7Gf+brqCj/H4nhLtR/+Ve2rdJ8om+iRmPLrv2NB2G4+3
iTije0EnwvImgX0TVS2eJzIHruHxNxN2d/UNbJSv4ufFcyJiuOJ0yZ8r9PWD
+GFkI37WpZG+vhCP/hObX/jtIn39Ie4Y71hykf88DhPXJ2L30P4ha845Inzi
+kXI9rXofd5/hr6+EXtm3VjSNe00ff0jLM472P4SP0VfH4nb5kULTX/V09dP
os2Rurxr4D/6+ko0dPX5Z9qcoK+/hPiTmVfOlh4j2iauz8Scd17yRaZHcbzf
EktDNTV2vK0l9Ceu74S5w0j5iZoa+vpPHMqJsTq5s5r+fCAOHN66m9p2hP78
IAIlXqxYUVBFf74QbvZu/pWnK+nPH2Lf28YdhR0VeHxtxLnakLYTehWE38Tn
FzFvrohR3rJyPN52okNd4LgEdZj+/CPW/lp1VEzvMP35SCya3q9XkknPn3YQ
1ZZOuV8GSunPV8IgNezF0S+H6M9fIqj6Y4zx94P05zPBiNuuS46VoPcH4s6O
6DOvtEsI84nPd2K2SauYuMcB+vOfONRJNHxL2k/fHxASC9SX3jlP3892Eneu
xvA+/qPXZzqJaQVvNh6atZe+/yCmPdqbsuRIMX1/Qnz+6Mw7Jsq/X564fyFu
uw8xRpcX4Xh3ESLdX6I6XxbS9z9ER4Wt46h3IX1/REQePeTSeaOAvn8irM5D
tbtrAX1/Rfzyf7fo4a099P0XQW0XyrHw3UPfnxEf/C+3Gb/JR49uYjBHRWPT
inz0+EyIV9cUfhXKR4/PRMI5u0/TSvLo+0PiprD+GsIhj75/JBr3xbGuvqLn
R74Qa46lqBal0vOxX4jFC7vDCli59P0p8d2oeaXhwRz6/pW4d6Px3cfB3ejR
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
exMPYwTGHyuRhHsTD2PUusYMa+/iTTyMkTb4fm4XkTfxMIbB8ecudu292b4T
Giac/jjtjRfxMMbfy30yHl9l+5vGeJpx8eq4w17EwxjpE0LS9PO8iIcxVr51
H1u7wIt4GEN5LT/4/J9exMMYPTzbNFwN9yIexnjS+JewxdWLeBijvGpOgY/U
i+1fYfHzAO9dnb2Ihwk6Bw6rtPvA9klNcJW79ePm7d7EwwT2iUHFWSd7Ew8T
fNJUbJ25vTfxMMF9l2vFM1f2Jh4mKEtJXps1rTfb98LVfTbczeG9iYcJipve
WtsE9Wb7YAgKE8zYYtebeJjgYujCO84mvdm+GERli41etelNPEwQ4Vzb4eAb
T+JhgrrmvZPzbngSDxOkT86x3nLMk3iYYGO3oo6VW9m+rAn4t/0vt1vpSTxM
UFE0blD0dE+2n4bVNt4Trsd6Eg8TjImb/zIuxJN4mKCNYZ91PRw9iYcJ4qp7
9b0p8iQeJriXfeT+oc6exMME5m3Tjfd/8iAeJrh+VXyr6gHb3zVFWM8Vr1oq
PYiHKfReuCgCStl+rylOZLyMLsr2IB6mWIOTCRbpHsTDFBonH0nFRA/iYYpd
mf0GTo3yIB6mqEgS1noHeLD9O6Q8xd9Kew/iYYq5r7YHys092H4e6pdk3nbt
5EE8TDHjQb7xuE/ubH8PkXon6kpq3YmHKVoyHHroVrkTD1PkNOUmLTngTjxM
kRH16q1JgTvxMEU7z4FhZ5a5s31APDuZNCNtmjvxMEVCpdrvj5HubF8QAcY7
FwX3dycephAvSxKHubsTD1Mssxn6YgLvTjxMET5j2uHN+u7EwxQ6c10SG367
EQ9TvBSFvwirdyMeprjgdu571R22T22GNV8fLB16zo14mEH71nri71I3tr+I
vyauXXw0z414mKH2hktpxjI34mGGO5sWnJ863Y14mCHgjeXOpFFuxMMMk5fw
DovC3dg+JEonHwwo8XIjHmao/Bl5ssHKje1LItTp5iwfUzfiYYZZ1k4xRZ3c
iIcZnPtV+qi/uhIPM0j26+kcq3MlHmb4Oft15sirtNe9ygy6zkNPiU+4Eg8z
7BOX/PWhyJXtZ+LaxplpN7NciYcZpi1edPfyIle2v4npO2sHPZjqSjzMUNXu
3J2fI2nPvNoM8uDTvtpwV+JhBn2v1dNnebsSDzOMVmuH3rVxJR5maHK8dz5Y
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
/MyNij9F3v8DA7Tb3Q==
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-1.150837243637334, 5.467989373322766}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 22\"", "\"A ED 22\"", 
         RowBox[{"\"A Lehmann 22\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.797610169522023*^9, 3.797610257195732*^9, {3.797610307679984*^9, 
   3.797610321881299*^9}, {3.797610478476297*^9, 3.797610523920842*^9}, {
   3.797610620772924*^9, 3.7976107018058863`*^9}, 3.797611897728133*^9, 
   3.797614044894981*^9, 3.79761409053857*^9, 3.797615008305632*^9, 
   3.797618015636509*^9, 3.797631786934477*^9, 3.79763838726007*^9, 
   3.79841175700432*^9, {3.798411795758057*^9, 3.798411803302898*^9}, 
   3.79841305734914*^9, 3.798413726009934*^9, 3.798415202936694*^9, 
   3.7984153303273706`*^9, 3.798415407703198*^9, 3.798415500350554*^9, 
   3.798415664552568*^9, 3.798416102458418*^9, 3.798416925624268*^9, 
   3.7984174530948*^9, 3.7984178543463287`*^9, 3.7984179193931932`*^9, 
   3.7984188252791433`*^9, 3.7984189159996157`*^9, 3.798419262327409*^9, 
   3.7984193665986643`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"315d7fb9-33a6-451f-b2ef-663a8682b212"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<B\>\"", "<>", 
        RowBox[{"ToString", "[", "B", "]"}], "<>", "\"\<U\>\"", "<>", 
        RowBox[{"ToString", "[", "U", "]"}], "<>", "\"\<A\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.eps\>\""}], ",", 
       RowBox[{"Aplots", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "sites"}], "+", "j"}], "]"}],
         "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "sites"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "sites"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7976180048683577`*^9, 3.797618009642652*^9}, {
  3.7984198641122923`*^9, 3.7984198843201227`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"3fe52a2e-fc2b-467e-b3c1-9653c0a5972e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"B1U1.4A11.eps\"\>", ",", "\<\"B1U1.4A12.eps\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B1U1.4A21.eps\"\>", ",", "\<\"B1U1.4A22.eps\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.797618018997837*^9, 3.797638517625537*^9, 
  3.798419922573811*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"ebbae239-30ae-41fa-a28f-2085f41a125e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Junk Below here", "Chapter",
 CellChangeTimes->{{3.7976381760961123`*^9, 
  3.7976381830565777`*^9}},ExpressionUUID->"2b4dc8e2-3e08-4341-bae2-\
85d09a99410b"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"bb9e4ac1-bb87-4a76-823a-106dcde98e5a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"wlist", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "w", "}"}], ",", 
         RowBox[{"FTf1D", "[", 
          RowBox[{"24", ",", "w", ",", "i", ",", "j"}], "]"}]}], "]"}], "/@", 
       "wlist"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.798411515161447*^9, 
  3.798411546435668*^9}},ExpressionUUID->"d9661995-91a0-4307-8b33-\
418df8dfb95c"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.798411541672983*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"a1ce23cb-d828-4864-9abc-079f92635d95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.45503`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "0.056090185189211085`"}], "}"}], ",", 
       RowBox[{"{", "0.010804393621867617`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.010804393621867617`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.08383650339910444`"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.798411560067872*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"6bc57bb0-6339-436f-b24b-a80f7b51fd82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FTf1D", "[", 
   RowBox[{"24", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.798411588263479*^9, 3.798411595399617*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"f6ce82dd-0f52-4985-891f-c9801b16a5ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.625743`", ",", 
   RowBox[{"-", "0.056090185189211085`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.798411600416665*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"6da48123-2134-4153-ae75-f7adf6cb0cf9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTf1D", "[", 
    RowBox[{"tmax_", ",", "w_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "Pi"], 
    RowBox[{"Im", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRf1D", "[", 
         RowBox[{"trel", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "w", " ", "trel"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"trel", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",ExpressionUUID->"192163aa-2ec0-4098-9d6e-7173dfd337c8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1848, 1016},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 223, 4, 147, "Title",ExpressionUUID->"b12ddd7a-35b6-400f-bdf2-24eb5c84b069"],
Cell[806, 28, 329, 10, 13, "Text",ExpressionUUID->"d50bf871-2357-4d07-b762-f5f96a6a1274"],
Cell[CellGroupData[{
Cell[1160, 42, 276, 4, 105, "Chapter",ExpressionUUID->"850a0c90-583e-4431-8d35-1e6cd71a1681"],
Cell[1439, 48, 2459, 67, 252, "Input",ExpressionUUID->"23d6e924-3c4b-4f78-b78b-778166e4b94d"],
Cell[3901, 117, 3355, 85, 422, "Input",ExpressionUUID->"7f53f976-69eb-4fc3-9506-80bedeb75112"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7293, 207, 166, 3, 105, "Chapter",ExpressionUUID->"a38d7bfa-9038-4cac-a7fb-9df1652d2304"],
Cell[7462, 212, 6417, 137, 218, "Input",ExpressionUUID->"14a85532-8a48-4c0c-bb4d-f36c3a5fd145"],
Cell[CellGroupData[{
Cell[13904, 353, 2529, 70, 286, "Input",ExpressionUUID->"fe9b6f12-82fc-40ba-9a2f-8005b8cf81a9"],
Cell[16436, 425, 632, 10, 37, "Print",ExpressionUUID->"aeed21c0-7f63-46a9-be28-8671742793af"],
Cell[17071, 437, 777, 10, 53, "Output",ExpressionUUID->"9b09ebf9-ddb0-478e-988a-fe11ffb675f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17897, 453, 222, 4, 105, "Chapter",ExpressionUUID->"33638414-0c5e-4f85-8575-c35d52a84829"],
Cell[18122, 459, 4975, 128, 486, "Input",ExpressionUUID->"9a835ecc-b544-490a-afdf-e9a865d79cb3"],
Cell[CellGroupData[{
Cell[23122, 591, 5675, 133, 456, "Input",ExpressionUUID->"cd94c9dc-5801-4518-a62d-1725fc62b57a"],
Cell[28800, 726, 106390, 1965, 347, "Output",ExpressionUUID->"0a419273-b583-4787-9194-d8ee01bc5e86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135227, 2696, 300, 6, 47, "Input",ExpressionUUID->"680bb8be-28c8-45a6-8082-55df911738b2"],
Cell[135530, 2704, 218, 4, 53, "Output",ExpressionUUID->"218e06dc-99ea-4321-96aa-a34e14e839ae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135797, 2714, 153, 3, 105, "Chapter",ExpressionUUID->"9218f325-0557-46c1-8dee-95118d392943"],
Cell[135953, 2719, 3268, 83, 196, "Input",ExpressionUUID->"14b63a35-09eb-46d3-a129-9b8918ced47a"],
Cell[139224, 2804, 2442, 75, 242, "Input",ExpressionUUID->"b2fe4b85-b08b-492d-92ec-d70aad551803"],
Cell[CellGroupData[{
Cell[141691, 2883, 11707, 275, 587, "Input",ExpressionUUID->"4c8585b8-8ebb-40a9-9c36-377bd2d7272c"],
Cell[153401, 3160, 265541, 4820, 424, "Output",ExpressionUUID->"b76ec57c-8e60-4404-9676-be46d5b6a824"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418979, 7985, 1062, 25, 82, "Input",ExpressionUUID->"99a35514-1ff4-4be9-b489-c10c4973aa3e"],
Cell[420044, 8012, 804, 16, 110, "Output",ExpressionUUID->"bfa8d1d8-35e9-4479-b317-59fcba440cb2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[420897, 8034, 162, 3, 105, "Chapter",ExpressionUUID->"ee0de9ce-15c3-45ad-84eb-f37421f2c5fa"],
Cell[421062, 8039, 3428, 90, 196, "Input",ExpressionUUID->"6a0fe541-0a9e-4140-a40c-d97382b0188a"],
Cell[424493, 8131, 4490, 124, 449, "Input",ExpressionUUID->"275f6d39-05b4-46ed-979d-88750b7e8631"],
Cell[428986, 8257, 2884, 72, 150, "Input",ExpressionUUID->"6b81302c-7029-4cd1-a3a6-3d487e9d0083"],
Cell[CellGroupData[{
Cell[431895, 8333, 6514, 171, 371, "Input",ExpressionUUID->"fb798e6d-9565-44b9-9071-d733f33c0674"],
Cell[438412, 8506, 370116, 6500, 406, "Output",ExpressionUUID->"315d7fb9-33a6-451f-b2ef-663a8682b212"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808565, 15011, 1036, 26, 82, "Input",ExpressionUUID->"3fe52a2e-fc2b-467e-b3c1-9653c0a5972e"],
Cell[809604, 15039, 430, 12, 53, "Output",ExpressionUUID->"ebbae239-30ae-41fa-a28f-2085f41a125e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[810083, 15057, 164, 3, 105, "Chapter",ExpressionUUID->"2b4dc8e2-3e08-4341-bae2-85d09a99410b"],
Cell[810250, 15062, 329, 10, 13, "Text",ExpressionUUID->"bb9e4ac1-bb87-4a76-823a-106dcde98e5a"],
Cell[CellGroupData[{
Cell[810604, 15076, 829, 24, 82, "Input",ExpressionUUID->"d9661995-91a0-4307-8b33-418df8dfb95c"],
Cell[811436, 15102, 171, 3, 53, "Output",ExpressionUUID->"a1ce23cb-d828-4864-9abc-079f92635d95"],
Cell[811610, 15107, 599, 17, 53, "Output",ExpressionUUID->"6bc57bb0-6339-436f-b24b-a80f7b51fd82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[812246, 15129, 281, 5, 47, "Input",ExpressionUUID->"f6ce82dd-0f52-4985-891f-c9801b16a5ad"],
Cell[812530, 15136, 241, 5, 53, "Output",ExpressionUUID->"6da48123-2134-4153-ae75-f7adf6cb0cf9"]
}, Open  ]],
Cell[812786, 15144, 628, 18, 73, "Input",ExpressionUUID->"192163aa-2ec0-4098-9d6e-7173dfd337c8"]
}, Open  ]]
}, Open  ]]
}
]
*)


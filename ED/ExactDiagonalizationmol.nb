(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    715508,      13592]
NotebookOptionsPosition[    710703,      13504]
NotebookOutlinePosition[    711067,      13520]
CellTagsIndexPosition[    711024,      13517]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Molecular Exact Diagonalization", "Title",
 CellChangeTimes->{{3.797463916412689*^9, 3.797463934781361*^9}, {
  3.801333492799201*^9, 
  3.801333496094123*^9}},ExpressionUUID->"b12ddd7a-35b6-400f-bdf2-\
24eb5c84b069"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"d50bf871-2357-4d07-b762-f5f96a6a1274"],

Cell[CellGroupData[{

Cell["Read in the  Hamiltonian Parameters", "Chapter",
 CellChangeTimes->{{3.79746403353503*^9, 3.797464088735511*^9}, {
  3.801333636047392*^9, 3.801333644271916*^9}, {3.801840971942629*^9, 
  3.8018409752388153`*^9}},ExpressionUUID->"850a0c90-583e-4431-8d35-\
1e6cd71a1681"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{
   "OpenRead", "[", "\"\</home/thomas/Libraries/NEdyson/h2H.dat\>\"", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nao", "=", 
   RowBox[{"Read", "[", 
    RowBox[{"ReadFile", ",", "Number"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uijkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Read", "[", 
            RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naso", " ", "=", 
   RowBox[{"2", " ", "nao"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"states", "=", 
   SuperscriptBox["2", "naso"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8013337080832043`*^9, 3.801333746592285*^9}, {
  3.8013337767532997`*^9, 3.801333815649338*^9}, {3.801333877617845*^9, 
  3.801333884177597*^9}, {3.801333949539424*^9, 3.801333962227304*^9}, {
  3.801334002405303*^9, 3.801334154793351*^9}, {3.801334202474998*^9, 
  3.801334236431044*^9}, {3.801334317920527*^9, 3.801334325041441*^9}, {
  3.801334400387637*^9, 3.801334427828017*^9}, {3.801334554883069*^9, 
  3.801334564936801*^9}, {3.801841004170364*^9, 3.801841014427088*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"23d6e924-3c4b-4f78-b78b-778166e4b94d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "nao", ",", "states", ",", "states"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdag", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "nao", ",", "states", ",", "states"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"c", "[", 
        RowBox[{"[", 
         RowBox[{"j", ",", "i", ",", ";;", ",", ";;"}], "]"}], "]"}], "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<~/Libraries/NEdyson/ED/hybfermion/build/c_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "nao"}], "+", "i", "-", 
              "1"}], "]"}], "<>", "\"\<.dat\>\""}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"states", ",", "states"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"cdag", "[", 
        RowBox[{"[", 
         RowBox[{"j", ",", "i", ",", ";;", ",", ";;"}], "]"}], "]"}], "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<~/Libraries/NEdyson/ED/hybfermion/build/cdag_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "nao"}], "+", "i", "-", 
              "1"}], "]"}], "<>", "\"\<.dat\>\""}], ",", "Number"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"states", ",", "states"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IM", "=", 
   RowBox[{"IdentityMatrix", "[", "states", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796844257845168*^9, 3.796844464583516*^9}, {
   3.7968444947600317`*^9, 3.7968446305521507`*^9}, {3.796844674125202*^9, 
   3.7968446744898033`*^9}, {3.796849773114406*^9, 3.796849801761745*^9}, {
   3.796850058269848*^9, 3.796850061949156*^9}, 3.796850743467898*^9, {
   3.7968515835899467`*^9, 3.7968515845512333`*^9}, {3.7970652553589497`*^9, 
   3.7970652688693523`*^9}, {3.7974640935881968`*^9, 3.797464124689893*^9}, {
   3.797464157043416*^9, 3.797464188738716*^9}, {3.7974642374273853`*^9, 
   3.7974642510906887`*^9}, {3.8013345770341263`*^9, 
   3.8013345798009443`*^9}, {3.801334613257267*^9, 3.801334635830984*^9}, {
   3.801341388566758*^9, 3.801341469636005*^9}, {3.801341536644334*^9, 
   3.8013416110918083`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"7f53f976-69eb-4fc3-9506-80bedeb75112"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define the Hamiltonian", "Chapter",
 CellChangeTimes->{{3.79746426707409*^9, 
  3.797464270433733*^9}},ExpressionUUID->"a38d7bfa-9038-4cac-a7fb-\
9df1652d2304"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datadir", "=", "\"\<~/Libraries/NEdyson/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"h0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{
             RowBox[{"cdag", "[", 
              RowBox[{"[", "s", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ".", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "s", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}], "-", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mu", "[", 
          RowBox[{"[", "s", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{
           RowBox[{"cdag", "[", 
            RowBox[{"[", "s", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "s", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{"0.5", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Uijkl", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}],
                   " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"cdag", "[", 
                    RowBox[{"[", "s", "]"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ".", 
                   RowBox[{
                    RowBox[{"cdag", "[", 
                    RowBox[{"[", "sp", "]"}], "]"}], "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ".", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "sp", "]"}], "]"}], "[", 
                    RowBox[{"[", "l", "]"}], "]"}], ".", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "s", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"sp", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.797464460613619*^9, 3.7974644654589987`*^9}, {
   3.797464508441687*^9, 3.797464542855023*^9}, {3.797464655096546*^9, 
   3.797464713929524*^9}, {3.7974647821876183`*^9, 3.797464797481786*^9}, {
   3.797464841883972*^9, 3.797464889884922*^9}, {3.797465008430503*^9, 
   3.797465032573998*^9}, {3.797465260032446*^9, 3.7974652996472263`*^9}, {
   3.797465362349587*^9, 3.797465368893671*^9}, {3.797465400286263*^9, 
   3.797465638016383*^9}, {3.7974657723891287`*^9, 3.797465863866156*^9}, {
   3.7974659041133957`*^9, 3.7974659118985043`*^9}, {3.797465945450329*^9, 
   3.79746603188636*^9}, {3.797466096642254*^9, 3.7974660967629747`*^9}, {
   3.797466154128879*^9, 3.7974661836598577`*^9}, {3.797468183598296*^9, 
   3.7974682030579033`*^9}, {3.7974682823055964`*^9, 
   3.7974682833864307`*^9}, {3.797468643960297*^9, 3.797468683699593*^9}, 
   3.797605142745804*^9, {3.797610875877562*^9, 3.797610876814642*^9}, {
   3.797619244061306*^9, 3.797619253068817*^9}, 3.7976193369938803`*^9, {
   3.7976193990308237`*^9, 3.79761942707549*^9}, {3.798409654713818*^9, 
   3.798409670721448*^9}, {3.798409764187215*^9, 3.7984098387789907`*^9}, {
   3.798409885557926*^9, 3.798409940174778*^9}, {3.798410015546887*^9, 
   3.798410108241016*^9}, {3.798410149082053*^9, 3.798410186384658*^9}, {
   3.79849307303936*^9, 3.798493103959735*^9}, {3.798992735986924*^9, 
   3.798992737897847*^9}, {3.798992812172956*^9, 3.798992817243936*^9}, {
   3.8013346560936537`*^9, 3.801334671500423*^9}, {3.801334727340715*^9, 
   3.801334732497443*^9}, {3.801334785165166*^9, 3.801334788848414*^9}, {
   3.801334916388422*^9, 3.801334957202156*^9}, {3.8013350067677717`*^9, 
   3.8013350767711287`*^9}, {3.801335240362647*^9, 3.801335299079159*^9}, {
   3.8013353407615*^9, 3.801335388970305*^9}, {3.801335447626189*^9, 
   3.801335461705853*^9}, {3.8013355217184362`*^9, 3.801335540774569*^9}, {
   3.8013357835418777`*^9, 3.801335789503606*^9}, {3.801335855748032*^9, 
   3.8013358749266443`*^9}, {3.801336489061515*^9, 3.801336515444981*^9}, {
   3.801336571944233*^9, 3.8013365878896227`*^9}, {3.801337261384974*^9, 
   3.8013373111728983`*^9}, {3.80133839421137*^9, 3.801338436226214*^9}, {
   3.8013385088861113`*^9, 3.8013385094754963`*^9}, {3.8013399711122503`*^9, 
   3.801339975332446*^9}, {3.801340096998885*^9, 3.8013401465785027`*^9}, {
   3.801340451119326*^9, 3.8013404570668497`*^9}, {3.801340508315909*^9, 
   3.8013405347164803`*^9}, {3.8013407315816317`*^9, 3.801340749174711*^9}, {
   3.801341650246752*^9, 3.801341723189279*^9}, {3.801341777093379*^9, 
   3.8013419309989243`*^9}, {3.801341985766787*^9, 3.801342026120977*^9}, 
   3.801342791600747*^9, {3.8018410376146717`*^9, 3.801841039549314*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"14a85532-8a48-4c0c-bb4d-f36c3a5fd145"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Tr", "[", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HEigVals", " ", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "H", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HEigVecs", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Normalize", ",", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "H", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Check if the Hamiltonian is Diagonalizable: \>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"DiagonalizableMatrixQ", "[", "H", "]"}], "]"}], "<>", 
   "\"\< Max err: \>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"N", "[", 
   RowBox[{"H", "-", 
    RowBox[{
     RowBox[{"Transpose", "[", "HEigVecs", "]"}], ".", 
     RowBox[{"DiagonalMatrix", "[", "HEigVals", "]"}], ".", "HEigVecs"}]}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdagTrans", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"HEigVecs", ".", 
        RowBox[{
         RowBox[{"cdag", "[", 
          RowBox[{"[", "s", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", "HEigVecs", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cTrans", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"HEigVecs", ".", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"[", "s", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", "HEigVecs", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.80133771100261*^9, 3.801337714759758*^9}, {
  3.801342063883421*^9, 3.801342113639243*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"fe9b6f12-82fc-40ba-9a2f-8005b8cf81a9"],

Cell[BoxData["\<\"Check if the Hamiltonian is Diagonalizable: True Max err: \
\"\>"], "Print",
 CellChangeTimes->{{3.80133770090878*^9, 3.8013377154855003`*^9}, 
   3.80133844189402*^9, 3.801338514467597*^9, 3.801339981600155*^9, {
   3.8013401017771597`*^9, 3.801340150066349*^9}, 3.801340463924081*^9, 
   3.8013405119960814`*^9, 3.8013405448468447`*^9, 3.801340752731841*^9, {
   3.80134201048482*^9, 3.8013420292405663`*^9}, {3.801342106906845*^9, 
   3.8013421141584187`*^9}, 3.801342794358528*^9, 3.8018410427358303`*^9, 
   3.802607905137989*^9, 3.802607970634529*^9, 3.802608107450172*^9},
 CellLabel->
  "During evaluation of \
In[60]:=",ExpressionUUID->"7a3c7b49-a130-4e89-8abe-5b51ab2b6e06"],

Cell[BoxData["8.881784197001252`*^-16"], "Output",
 CellChangeTimes->{{3.798410087345234*^9, 3.7984101089182243`*^9}, {
   3.798410156389843*^9, 3.79841018689254*^9}, {3.798493085438073*^9, 
   3.79849310483496*^9}, 3.798992739846266*^9, 3.7989928351359577`*^9, 
   3.801335755610374*^9, {3.801337700915948*^9, 3.801337715487294*^9}, 
   3.801338441895362*^9, 3.801338514468972*^9, 3.801339981602022*^9, {
   3.8013401017786703`*^9, 3.801340150067857*^9}, 3.8013404639254*^9, 
   3.801340511997867*^9, 3.801340544848672*^9, 3.8013407527335443`*^9, {
   3.8013420104863987`*^9, 3.801342029242618*^9}, {3.801342106908823*^9, 
   3.8013421141605167`*^9}, 3.8013427943601418`*^9, 3.801841042754198*^9, 
   3.802607905143702*^9, 3.802607970635742*^9, 3.802608107451632*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"5468163b-c884-44df-9c0f-d3843e8b91b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Matsubara Functions", "Chapter",
 CellChangeTimes->{{3.797466234409215*^9, 3.7974662410816803`*^9}, {
  3.797466501658165*^9, 
  3.7974665066992807`*^9}},ExpressionUUID->"33638414-0c5e-4f85-8575-\
c35d52a84829"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</_GM.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Params", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GMNEdyson", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"2", "*", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", 
       RowBox[{
        RowBox[{"Params", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GM", "=", 
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "Z"], 
              RowBox[{"Tr", "[", 
               RowBox[{
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Beta]"}], "+", "\[Tau]"}], ")"}], 
                   "HEigVals"}], "]"}], "]"}], ".", 
                RowBox[{
                 RowBox[{"cTrans", "[", 
                  RowBox[{"[", "s", "]"}], "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ".", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "\[Tau]"}], " ", "HEigVals"}], "]"}], "]"}], 
                ".", 
                RowBox[{
                 RowBox[{"cdagTrans", "[", 
                  RowBox[{"[", "s", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", "0", ",", "\[Beta]", ",", 
               RowBox[{"\[Beta]", "/", "100"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GM", "=", 
     RowBox[{"-", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "Z"], 
             RowBox[{"Tr", "[", 
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[Beta]"}], "+", "\[Tau]"}], ")"}], "H"}], 
                "]"}], ".", 
               RowBox[{"c", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ".", 
               RowBox[{"MatrixExp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Tau]"}], " ", "H"}], "]"}], ".", 
               RowBox[{"cdag", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", "0", ",", "\[Beta]", ",", 
              RowBox[{"\[Beta]", "/", "100"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "sites2", ",", "2"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "sites2", ",", "2"}], "}"}]}], "]"}]}]}],
     ";"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7969175814354362`*^9, 3.796917594278741*^9}, {
   3.796918163265868*^9, 3.796918296695459*^9}, {3.796918329177977*^9, 
   3.7969185704836817`*^9}, {3.797466327903062*^9, 3.797466550328673*^9}, {
   3.797466671249156*^9, 3.7974666746051407`*^9}, {3.797467967091383*^9, 
   3.79746798912473*^9}, {3.797468089252339*^9, 3.79746810142557*^9}, {
   3.7974682939559393`*^9, 3.79746834553959*^9}, 3.7974684467693157`*^9, {
   3.797515785731844*^9, 3.797515790162521*^9}, 3.797605157844326*^9, {
   3.797610899905794*^9, 3.7976109003978148`*^9}, {3.7976200954919357`*^9, 
   3.7976200997927*^9}, {3.7989927590879507`*^9, 3.798992778289624*^9}, {
   3.801337960229953*^9, 3.8013379960723753`*^9}, {3.8013421847362823`*^9, 
   3.8013422397543087`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"9a835ecc-b544-490a-afdf-e9a865d79cb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MPlot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"\[Beta]", "+", "0.000001"}], ",", 
                 RowBox[{"\[Beta]", "/", "1000"}]}], "]"}], ",", 
               RowBox[{"GMNEdyson", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", 
                  RowBox[{
                   RowBox[{"2", " ", "nao", " ", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], "+", 
                   RowBox[{"2", "j"}], "-", "1"}]}], "]"}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "\[Beta]", ",", 
                 RowBox[{"\[Beta]", "/", "100"}]}], "]"}], ",", 
               RowBox[{"GM", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i", ",", "j", ",", ";;"}], "]"}], "]"}]}],
               "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", "2"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Joined", "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", " ", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nao", "*", "nao"}]}], "}"}]}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.01", "]"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\[FilledSmallCircle]", ",", "10"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nao", ",", "nao"}], "}"}]}], "]"}], 
      "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<NEdyson\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Quotient", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "nao"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "nao"}], "]"}], "+", "1"}], 
            "]"}]}], ",", 
          RowBox[{"\"\<ED\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Quotient", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "nao"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "nao"}], "]"}], "+", "1"}], 
            "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nao", "*", "nao"}]}], "}"}]}], "]"}], "]"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<\[Beta]=\>\"", "<>", 
           RowBox[{"ToString", "[", "\[Beta]", "]"}]}], ",", "13"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", 
          RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.79746713527752*^9, 3.7974671391370773`*^9}, {
   3.79746725456009*^9, 3.797467260066148*^9}, {3.797467383765308*^9, 
   3.797467455532628*^9}, {3.797467532390675*^9, 3.797467535397292*^9}, {
   3.797467842794339*^9, 3.7974678480162086`*^9}, {3.7974680275791197`*^9, 
   3.7974680328164577`*^9}, {3.797468729401087*^9, 3.797468782979974*^9}, {
   3.797468871574152*^9, 3.797468897878109*^9}, {3.797469048669941*^9, 
   3.7974690660755463`*^9}, {3.7974691862759647`*^9, 3.797469309657954*^9}, {
   3.79746935316368*^9, 3.797469393094695*^9}, {3.797469426427697*^9, 
   3.79746942756353*^9}, {3.797469464348295*^9, 3.797469542369519*^9}, {
   3.7974696076323137`*^9, 3.797469612283038*^9}, {3.797469645510569*^9, 
   3.797469649132533*^9}, {3.7974697146892023`*^9, 3.797469740993402*^9}, {
   3.7974698511357393`*^9, 3.797469851722827*^9}, {3.79746994651974*^9, 
   3.79747006839165*^9}, {3.797470133223145*^9, 3.797470157108676*^9}, {
   3.79747021670677*^9, 3.797470631449254*^9}, {3.797607019228973*^9, 
   3.79760702364147*^9}, {3.797607167542128*^9, 3.7976071776255293`*^9}, {
   3.80133803764583*^9, 3.8013381216148443`*^9}, 3.801338216982005*^9, {
   3.801338811632988*^9, 3.801338824311083*^9}, {3.801342246618931*^9, 
   3.8013422479453793`*^9}, {3.8013423640762157`*^9, 3.801342364715371*^9}, {
   3.801342396378277*^9, 3.801342488859335*^9}, {3.80134252598174*^9, 
   3.80134258183552*^9}, {3.8013427191537933`*^9, 3.801342736685853*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"cd94c9dc-5801-4518-a62d-1725fc62b57a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
srr0f2phRAw=
         "]]}, {}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1m3dcTv///1OihTQlo72197oe1w6FaJgtRCpaZkpKSVYLlVGRCpVUpNIg
EUJGlFm9KVtEIurX53s9f9c/79u5eZ37eZz7ufPfW9Vvw8LVwkJCQu9FhIT+
99///1uzRDG/xarRPivzf78zjNbh6qqAvGt0XcW4clhn2TT5a/Zm//drZDxw
nF13b89V+vNbjD8hO/rWCV+1F9BaGT4Nhb3Pohvo/COG09KlKpOH6+39/+/3
hNG3V6uiRrSe7u9g9EfrJ+2Rq7O/2/K/3wuGy4TNT+fp1RKvk7E55vPUTt4V
Ot/FKNl1ykhmXQ3x/2OslvVfUZ1WTfe/YazVj19T0lhFz+thpE8bzLz++zLx
3jE2rep//MjiMvHeMzZVih0p31xJvI+M+KH3ovb1l4j3ifHhWu9PrtQl4n1h
BHiw+856XSReH0O8INCae6mCzvcxHp+wa/0qU0H8b4yi2fMjEyLK6f7vjGL7
XVffPiuj5/UzlOMv933glhHvB+Mo+9n0iIsXiPeDEfZjsaaP7gXi/WTc4oid
O5BbSrwBRrdtnFLn9FLi/WI8vG3LCrQ/T7xBBjv6ZVA3p4R4g4xT3yVVP7oV
E+83Q6/riItzUBHx/jCEl3FW3Es6R7whhudwkold6Vni/WUof/g9zevFGeL9
ZdzbbfNSZNIZ4v1jiPTeTP/DLyTeMGOr2qbrk3cXEG+E8XhqOWdqSz7xhPC9
ttixRyGfzgshXXqx5uw1p4kvhFjuohLF2jy6fwz4ri23tafk0fPGIPv0/JwF
W04RTxhfx2btXPfyJPGEsa0qsHce/yTxhCHV5RfQfjGXeCIw7u+81K2TSzwR
fNUeOTgnJ4d4YzH2W3rdZ+Uc4o3FyRP5Mzyssok3FlrPvhy67niCeKIImjnL
+53LceKJQt1Z4vGuVceINw6KnRUzvGOPEm8cNIbUZzkWZBFvHD5Ozsj78DCT
eOMx8Gdpm6FoJvHGI+NIQ8kThwziiSFCIqD8/PYjxBPDDrWmz4lXDxNPDM7e
L9+YSh0mnjg0q5al7Fh+iHjiuK3avpBVlk48Cazfvebt/AnpxJPAsV9BntHB
acSTgJ1X0Ujew1TiSSLZ4UT4MftU4kliMFsk2vFcCvGk0B9cJe8/I4V4UtBy
vO329VAy8aSwKa92Q+XkZOJNQNBn/lIb9YPEm4BZ/1VX/9U7QLyJGLC3Or3V
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
         "]]}, {}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
oIMf1HzwLl/I26GCyNU6pRcm8+n9Ksg+X5Nyx4Mn5FWoQMZszfzMfAfao4K3
CmVmA4NcIe+DCn4eC+mrcOPSPlW4upwvKyjj0D5VOA4nPc6X4dA+VSz2yVCJ
j2TTPlXMywg7rNvFon2qqFvavXiZJ4v2qSL7qPY7iXugfaqQjVh7eowAtE8V
nydVn/Hcz6R9qpBWiJx9MdGe9qki9EOL1+AxO9qnBktficLbZxm0Tw0vFozd
/fu2Le1Tw1+LEoHjVxvap4Z5ud1TYuRtaJ8a5H6IP13Dt6Z9alhlcNbwfpQV
7VODd6Tk2q21lrRPDU5PK0Lt/lrQPjU8jC5p6HSwoH1qYD6Um8tOMad96jBb
PWafTrcZ7VNHx/pOj7UsM9qnjitSCt/eZJvSPnWsgtTHJWKmtE8dKp1ZSrVr
TWifOoavnyt60GpM+9TRl+bbHuloTPvUsXWvESelwYj2qePtwwehv2yMaJ86
Xqh3+0iFzqZ9GmAVqMbZbzGkfRr4HH9B3C7OgPZpIP2oXNbddH3ap4FDJSdf
VFTq0T4NLBrw5Fe2zqJ9GniUUGyaLjqL9mnA8Jz8BR1TXdqnAab6n1zDNTq0
TwM74kRWhhdq0z4NdNS2yrf8p0X7NNGYHb5AwkyL9mni15sCm4EYTdqniU23
Ri1f+UyD9mni+eC8B7ONNWifJlTeMd5oJqrTPk1oL13NVfmpRvs0wV32+E//
EjXap4nPmmnc2FuqtE8Ty21/7c9mqNI+Teg1X9uoXaFC+7TQWDN0fsBAhfZp
wTIs0eOllzLt04LIzc3Rj5bOpH1aUNmT25gSNIP2aSHh75pR72KUaJ8Wimzy
JKKzp9M+LWzImX7Y+Koi7dPCcHK9zJUvCrRPC3MChx/1z1SgfVq40t55J2vR
NNqnjQ0ly4/FpMjTPm1cZFpsDW2dSvu0Me2x9GyoTaV92tBiug3XhMjRPm18
9v15oqJpCu3TRo7MGO4o1Sm0TxuvOj38tuyQpX3aiGUV3O3plKF92qho+FfE
dJGhfdrQiTk0l1UvTft0sFu/wvG+oTTt08GzPj/v6/lStE8HbPvnHiKqUrRP
BzvPuAbVYzLt08E1l8YfW/mStE8HX1UCPP65T6J9OtAyWnR6/LqJtE8HCbyC
z4vjJWifDowb3v25VCJO+3QgcLGM/9U6gfbp4sua3yJPxCfQPl0UWJTtVuKM
p326yKve/O7YznG0TxerF34J02gaS/t0sVgpZFas1Fjap4vKDXfXJ/iNoX26
GDN6juqkqtG0TxcDHrLxb6RG074Rvpqk47NgMdqni+lrer1uPxGlfbNw2qah
L5kpSvtmYZFdTqp46SjaNwtauV8/T1AdRftmQexu+Z2gNBHaNwsy2z0MZaeI
0L5ZqNziwzqr/c9WuG8WcuW3xljOHrYV7psFNfGMldvs/9oK981Cq3OUGcv9
j61w3yw8Os5RcAwdshXu04PIPyl1n7TfQp6CHvTFTAzY134JeaZ6GKNW9bCx
f1DIc9bDicJtfqdnDwp5K/Swp/PsjevrB4S8HXowVipP7Kjop316iBwKuPdo
uI/26aHNvlN61bw+2qcH+Tl5vqH5P2mfHqRSnsy8JfKT9uljz0HXaexlP2if
PloUipeVN32nffpQLmj2+GH0nfbpo9PxVPLr7G+0Tx9PZia2u8h+o3368B6z
3URlXy/t00fg4Ndjs8f10j59MIPvJFdJ9tA+fdx1j3k3Wv4r7dOHSGVWjrj2
F9pngFeGizgJ9p9pnwGKEs/PEvh8on0GqBMIksRj/6N9Bmj7uigmvewj7TNA
cufOK5feddM+Axxoed3koNRN+wwQPGl78dDiLtpnAMltPmpluR9onwHSva4u
M/rynvYZYJ7yXxU3+/e0zxDZU3fu6UzppH2GqHsTpHa5t4P2GULZYUVblVsH
7TMEJ/x6R171O9o3ch2ve2mx2jvaZwhmjJtK3eG3tM8Qk1ucfmSOeUv7DOH0
+Af/eVQ77TPE1e7QzIKfb2ifISaVByXf6ntN+2ajoWa80pvhV7RvNkRm1Lw7
OfkV7ZsN/qW+A6+1X9K+2ViVuq3Elf+C9s3Gv5NTzlwJek77ZuOqW3Pdr4w2
2jcbfW6ZLY33WmnfbLB9Th7oHt9K+2ZD/mSRidWcZ7RvNsTEp6TtOPSU9hlB
WdR3RtKLJ8L7JxrB8NmjLHuDJ7TXCE9Ery732vVY+LyWEcJbRqlVtz+i/UZY
M+HxawP2IyEPRsg00vmRUvSQfo8RWkt0h67JPhTyvIygP0XnbmpsC/0+I+zh
39nQPfBAyAs1wv62LKnk4Af0e43gMamw7+Pz+0LefiMkP3mm1PbyHv1+I+js
mLGh/MNdIa/ACLesA+5YDN4hH0ZwVRKZqCt9R8hrMMIn9/Ff5hrfJj9GqJqg
OG6d5y0hr80I8Q75dU67m8mXEV4tPqVdXXtTyPthhEkT38pF9t0gf8bIu+z3
bZnFDfJnjOcJxy7YRTWRP2MoNrT2vmq+Tv6M4eHzO32K0nXyZwwXp4tqlaHX
yJ8x+g0cfFIeXCV/xljzXDxsr8lV8meMGeJqb1alN5I/Y/QkP/aSHNNI/ozB
357YOn/TFfJnjJ8MzWjp/xrInzH8trmlagU0kD9jZAwYT37TcJn8GWPJ/bsp
R65eIn/GKBvsvDX73kXyZ4w09ovG9e315M8Y/1m9jZX7XUf+jEf+vVw01K1Y
R/6MEWh3/EsZu5b8GSMmcHOXSUgN+TPBvJt1sxkFF8ifCQLr82tS31aTPxOM
XbJWXla9mvyZ4HztwqCoNVXkzwSGWmaBhdWV5M8Efb0ctQDxSvJnghiPpea7
/M+TPxOcY+cefnO5gvyZYMu1RTud1CrInwn0ZrllZseXkz8TDO7bdeF83zny
Z4Ksxf8+Ll9xjvyZwCXEaMO+F2fJnwluq20pHu1+lvyZoOueHHdJfhn5M8G1
dxpNd4pKyZ8JchOgqHi+hPyZgFVWGz3mRjH5M0Hppz+689+eIX8mcPr43ei6
6BnyZ4rs5P92auqdJn+mYNf2PbD1PkX+TOGaXJfw8FAR+TOFrXt1U+XtQvJn
ijrfL9YVkwrJnyncd4+aleFeQP5M8WFBnZ/tiXzyZ4rAG13Kq/tPkj9T/CjM
lhtwOUn+TLGL89G1tvgE+TOFxoUqi/jJJ8ifKfptrcJtw/PInym++OwRO92R
S/5MMex7QqxsYS75M0VvavUdzVs55M8UDukXn/3HySF/pvjELg6ujs0mf6aY
KPVPu3TPcfJniqzXv00ikrPI38j+Y0bf2gqOkT8zRPurn0++kkn+zGAZWVW2
tiOD/Jnh4D+lTzoTM8ifGS4/tzVJsU0nf2Y4ZxozbktIGvkzQ42I2dGcklTy
ZwbbN4r5L3qOkj8zCOIK4gctj5I/M4RMD5t+M+4I+TODp6NJkVJbCvkzw9uk
nq5m4xTyZwb9bdXfTh5KJn9mSBFLNtr1PYn8mSFt03tPpncS+TODtL2Ub1nT
YfJnhtLu0FWllofJnxma9527LV+SSP7MMKy34O8NrUTyZ4bN7g7y1nMOkT8z
qFcW63Y7HyR/5jhZPilqiecB8meO07dKvT3W7id/5nheO/QrM24f+TOH4bjG
4J6CBPJnjlfu7JPT7seTP3NsUPW3af+7l/yZw0oxdZ+U6V7yZ47bbMUjm9bv
IX/mkLfZ9+ll2W7yN3KdKl0qNxBH/syRtqwpopcTR/7MoSeZ6MM8uov8mcPd
wvfeky+x5M8cGxMuZO51jCV/5pAMruo0KI4hf+YQu2EwKUsmhvyZw4/vXVEa
tZP8mePw3Iv5jC87yJ853lUualNdtoP8meOEnFlDWHk0+bNA2NLdl5tObyd/
FuiTuSXdfzqK/FmM/H0KVLpSvo38WWDqJ1er7itbyZ8FxNdk5Bq0RpI/Cywu
Kl/p3hdB/iwgkzDoo6kQQf4sUHXw6cRAzhbyZwETHd6JV6Hh5M8Cb0IudXud
3kz+LPB+1sHZBR82kT8L6L3I4yfqbCJ/FmDfyQrp2hBG/iwgtWfx/G31oeTP
Ah7zWz6oSIaSPwt8jzfbUrR8I/mzwIVlSYldl0PInwXOdWX1VCiHkD8LxDS0
R3fGBpM/CziPX52W17qB/FnCJe/XfwXn1pM/S/TOcHdLSAoif5Y4psKYJbZ1
HfmzRNBzXlPzmrXkzxLKmfHuacvWkD9LPF916smspavJnyXmj40QYQasIn+W
KNz82yYlaCX5s8S95ou7PkWtIH+WuMZtXDkuJZD8WUI1pLj7TNly8meJJcoR
4ccfBJC/kb3u3u35/f7kzxLHC5XtElT9yZ8lEn63f5jitoz8WeKb29eVUnF+
5M8SyRedXyZGLiV/luDU/Y2U/eFD/iwx79lbB27oEvJnCQcPxfsNv73JnxXi
j9Xt0Yn3In9WsMufWKg005P8WaE71ksGNYvInxUOHLzBtfR2J39WeG+sY1Uk
spD8WeG4fNVcm+L55M8KGrwIy6NL3MifFfxmXnobKO1K/qwg+8+1tihlLvmz
wmr9E4enSzqRPys0382N2H5QQP6ssPD+y9UGcjzyN7Jn1OqBuFwO+bNC9Zn2
WV0mLPJnBYHzu1L/w3bkzwqbR6/u2HfNivxZoWCb7T3JYVPyZ4Xf+yc8DYgw
JH9WeJTxUCJyWIP8jfDD95Z0SMuTP2tEpIXu+VbeayP0Z41V1qzC8+sn1Qn9
WcPjwzPvY/dV6oT+rLGo6da/F/xZdUJ/1ljIeNW9rsO4TujPGlVXHfNiCi3q
hP6s0Z+VJLsqxFbI87JG966nD/RUIeStsMaR672Xmw6whbxQa0yI8hbR+McV
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
WuSTrlhoywl5phwcil8/z+uJnJBnzYHy2ZlL5OKnCnngYF6gi0g6W17I43HQ
cEP1gazoNCHPmYMTk1Z3Vd2YJuQt4GBli1X/+WQFIc+Lg13/Ps5lr1AU8vw4
WPJh19cU5nQhbwUHr1IyUjqVlYS8dSPfeybeWDNuBvXHwannft3+/TOoPw6i
Lz6F+JeZ1B8HHbFc2ZxPytQfB77Dvk9MIlSoPw5aD38yvy+iSv1x8DWo//uN
/arUHwcm4tu/Y4Ya9cdB/L0x7KXlatQfB22tU1XmOKtTfxwwBiXHan1Sp/5G
zscf5TMPaVB/HEy6vtzEx0qT+uMgJWDF14ldmtQfB7t7dlZ4Z2pRfxz8kbl2
Ocxdm/rjIHTP+7sJcjrUHwcT2/aq3nuhQ/1xEP7xZXJIkS71x8FwaGHOqa2z
qD8OzPtrQ4vd9ag/Dro8X/Sfs9Cn/jiYP16u/cdMA+qPi0kyCQ0lkobUHxcb
ptXIzhg7m/rjom5CbmGDqBH1x4XduqO/Duw2ov644Ld4z02TNKb+uPD82bJb
NNOY+uPi6w/5U716JtTfyPM3Lr7Zc8WE+uNCtMZt79fFptQfF7d8LRjOQ6bU
Hxcdh249b842o/64kBvqTD48x5z64yJBrOD7vUFz6o8L5Qt53aUlFtQfF2/O
r21busqS+uPi9seNBdK6VtQfF0HeC+r6eqyoPy6mf4lSZF60pv5GrjNd1qgd
tqH+uHjgekD06Vpb6o+L9mGf34fnMqg/Luz9TlgkWthRf1zEWbdumahtT/1x
Yf7Ifz1XmUn9cVExz7S9bjKoPy56JCfK/EwG9ceFaertynVKLOqPiz+Sp28L
TrGovxF/g6PCim3Y1B8X/1mnDNY/YFN/XCyLmPY0Zy2H+uOiWEepKVqCS/1x
4dNh0hxzlkv9cZFyOtL4sbcD9cfF6urNJdniPOqPi9hSzgKZBh71x4WbrE6x
91Y+9cfF6W+xDUUMAfXHRcADNQ3D0XOoPy7GTv0hOvPhHOrPAZNVtQxLChyp
PwcYbKrXlYlxov4c4L1lp03ccmfqzwHX50eGwWUu9eeAoaLbzdFMF+rPATfG
KSrutJpH/Tng/SYz1UYlV+rPARNw6Whgriv154AItWXfnWe5UX8O6N32zjWz
2o36c4CC6rTesDnzqT8HdLibWf17M5/6c0DeWt/rflsXUH8OyFqSEXJl+kLq
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
         "]]}, {}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1m3lcTO0bxqdFQqVQaVUoSfb2be7ZB5Hwkj37EmWNEkJCZIvsLYpCKGtZ
alSiLBUVxS+RSiGVtVL9zpm59M/7uT7P81znnu9835ymk/l8/0mLlDkcTp0K
h8P+998Xtf4XWHlkXebJE+zXBW5I2D7/bjfWIKdzZdvf7O/fuSpztPwrm7vt
QB537Ec/rOdxQ75kfnjRa0Wmoq2Q2xkwrtFlxzLsf8ndqul3eMvwJZmL5V+l
XI7/yqvmvRbhfBmXs3Bdro3lgsxnT9mvt9ytdg3djJfMQ18lV+lB2YhLcXOx
/z23Y/ayVdzMWeiv4nKcXv0ZbjYD5z9yle7+CZqaMQ3Xq+Eq9VGLMz7yH/o+
cZXI7ZXf6cnoq+MqxceMT3nhhb7PXM4lT92UURPR94XLOVi32X31ePQ1cDlm
rjk9s8air5HL8Xn9bY+XFPuZ7H23/qeBGP1NXE79N8v+ekKcb+Zygpcsn8rj
43rfuZzXo9Olxwh9P7hKNst2WVq5o+8HlyPdt23qUhf0/eRyrAJcUz85ou8X
t3Ntee2seHv0/eZ25ul4qkfaou8PlzPh1ryKa6PQ94erNOf1u6COEehr4XK+
WJnKqoahr5XL+REpK+9lg742rpJP2bvLOwaj7y+3c0P1CZcRg9DH5HjfTzq9
LdDXzlXiRL5zGzQAfR3cjg1RerTUHH2d3A5PcldN6Jf5T7+OTK/qEw+MsZ9D
nNcPtoT0N0Q/k9U3c47K9HFeiTixY04JonRxPSbvPnIpKLo3+pSJozrgTXSx
DvqYvLt0WoitNvqY7B2gcXadJvpUqLO2aKTDw+7oUyEladq3gCnq6FMljs+e
vIvGauhTJaUku6i4vqroY3LIfu94gTL6ujDzjxm9+AQHfV2o81vmfXWbjgxF
nxp1HljVu8a3LUPRp0Yc2THDH5//ZCj6mOyTmOd9/leGoq8rKcmuJ2Yd/ZGh
6OtKnMJx02fdbEafOnVerfV8wGlCnzqpVD5Qrq1tQJ86KcX+zzRB7wv6upFK
SPBh81116OtG7f321fiMrkVfd+rkbg77pluNvu7E4dzqLBtchT4mFx5ZHrv8
Pfp6kJJZY/a0pHfo60GcEJP3ex6+RZ8Gccwc7upalqOPzWv3vMp+hT4mx859
6nyiBH2azOv/4TY07iX6NKmzX1Bzr1dF6NMiDq3ff9e+EH1Mln1tTNn4DH1a
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
4Z+UbKLivmq9boB/Y2jYDE1uaem3zP8DTs1UFw==
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF03kwnHccx/HdaqlrhMG4Lan7Wqy1ruzHrl3LVJO6VVJxpZIIgkZlKkhb
RZtIECrExFEpSSeGOGqKZdQxjlBJtVV3RTK0SA1ambSZ2e9Mn5nnj9e8n8/M
88w8P5OY5MB4OQaDEf/qZr66X2P8f82vCcYmyzd7ZVrk+y/1LbkvPSFv8duK
fqt+dH2RvM9f5P1gufbvDJmBMx1qnSnRU+TXkcKrPVppO0J+Ey+s49W5Hv1k
FYh6JkwVErrIhzDrJDmoM24la+DieqLiSstdsibOpAYxoVZP1kZ/qe75LdVb
ZB0kjcfyypRukPVgmcHk/5N5lWwAtStZ19w08shGWPHLFj/eyyaz0FfVaj1g
nkE2AVdxIIY9kEI2xaaJsHVGkkA+jCbX8jRhWTT5LVQY6EgNMyPIZhio8mmo
Tg0km6Mr7LmzpNOfbIG0EfOJ/ggh2RLNHXEN6gqeZCts8TpVXN/mkK1hP70+
6XXKjmyDPvlSVoG/GdkW28uRzJs/GZHtsK4S0hkQok22h/PQzvAl20NkBxxc
+HSEdU6BzEZ0dqGz2R5D5hw2TJ+Orn9dvN8j644Ialn6rn10W+YcR9Qb13Xm
Dz6j7gS7iY2a+03L1J2gV9LukKU4S90Zf6v+Ki4unabujDKtABaOj1HnoNg/
PX6tYIA6B4O7zK/Ke7upu6D683OJR75oo+6CjBFRWBDnPnUuuLU7k3YVDdS5
cE6ybGg4cZu6K5pusBOCHpRTd4VR349KbdbXqfPwobh5MHgunzoPupe0h8aY
l6m7IUD/4Z0FzYvU3ZDCTW89u5JK3R1XZlSjmyLPUneHjSp7XWsylroH1AZ+
P53ecpy6B7h/GvBCh4Ope2I5wlBVQe8d6p7I/bjrXs+YiLoXVk/Ofckt4VP3
Qs1u1MKzOS71I4iLyqpLLWJTPwJWu2dj9gsL6nwc07F9QynKhDof7j+n3w6y
0qUOTM83Z9i6afQQkRntIx94SomeBzJqpzjjLDmZpYDyyVA5tZ6DbtneG0dZ
iQ6x1jsywxs18rwo78t/yJzjjRDlFbbWwarMUm8w3rXLfmi5RHsBhHl3D/ut
zdFegAsb+2Ylmwu0F6AirjL8lsIT2gugW9O6aln7nPZCTOn4unAqmPT+Quz1
1keYJqrT+wsR/P70X98U0fdLhWjKVUkLm3Kk7/dBrlRHb8NIQHsfdBckjI6f
D6S9D2z1k+arhmJo7wPrb0Pv5Rqn0V4E90jVPqfMT2gvgsVHJoE3H5XQXoS0
fLPENsd62otw0KSvnH/tAe3FmDtROayzTf8/xOjhJPonBz2mvRh1Hk+bSzpW
aS+GfUp4zFXDXdr74uUvNvsffCYvO7/wRXxIIc9qk85/ji8aFZI1Z9+zkFnq
C0ON5Dt5w650/iVI7WDxXHgS2ktwLFvK22oMp70Eoy83ffsMT9Negu3vcxxb
SjJp7wdlU/HmmHJh738SUudL
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF1Xs0FnYcx/EHKc6Yy56ZJEfut9xvj8vzfHgejyczaSS32FyymFuFicll
dGFCa3GwihQnpXBoLmO2GSuaW8WWyZK2kHKJR2Od83zP6XfO74/Xef8+f/92
hMR+HC7BYDDC31yxN1ec8fYMMms13MzaHUSa4KjsEgqS1hrJ85ybW0f/K3K4
Tl7hyC42dhUPVpEZeDy79IXSyfPkTUhQZNXk9X1LloJbYVup5bECsgz8xuT2
1U0cJ8sj8cmF4G5BBlkRjdFS9ZObk8lMpG1LmZlRO0RWwmjFQKUaO5KsDO1A
zV9HGKFkFaSsNaYPZQeQVSH8wFYxYs6LrAaZwsQa3XF3sjrCEts+fTTNI++A
f764T5krm6yBC6//Km6YtSJrIt9+98xklwlZCy9XnnofYOiStRH/Y1lxWLU6
WQclTIuYInVlsi40T/O3KycrkPWwWu1b96eHNFkfvi1SVpu8xckGCNOTXFrI
FdqLbIiVkHODV1gLZCNIsJrYBQ+ekXciSt59ywmDx2RjFAbfj463ekg2ge/r
I7HGuiNkU/hPyT33r+wXOd0UDdnC7Zqm3dTNoJ9qGJCh0EndDPsr86aHXZqp
myNv0bspYuwGdXO8N9Jnw/6smroFtmhLqM1dvUjdAnc74r88cbaEuiXsLGeG
VLKKqFui/bDj4OjPp6hbwa+k9yjHK4u6FfpTZQ5lDqZQt4bP5MFjJf8epm6N
BQFPPtTyc+o2SAz++/uZk6HUbfB1wcInpaN+1G0hXXffsavWg7otFj6Uj1tt
Z1FnQSVjvPnWZdVWUWehOqffVesgT2SGHZ7V/xTAvulF3Q57uzOaCznB1O3B
1Upo038ngro9Xr346Lx2fBx1B/B3miT8o5RE3QHcfckvh5jp1B3BLUyrqffI
oe6IK9M9w5kT+dTZmFi3+CHI9yx1NpQSCwry0sqpc+DW4VwiDLpEnYNX0cZ6
eRq11IHs26qlYdENrUSE+FfJbgy10HvAJn6mUS6nS+ROQGm5iu3xTS/tnXDA
KDaQXTNAeydYP39XZU/oA9o7YSly+NSlexO0d0LFRuZICqZp74yt8rXyI7Lz
tHeG2COx/caGy7R3BrfHv6+1bJ32zuiyt4vq0ZBsE+25SPMMNPvORFZkcHGn
OOjJNR2myOlc/JKxeCxpaJvInVzEJMzH8q01ac/DRkVZSvxxA9rzUH5PRSD0
NKc9D1d/lxurd2PRnofBDoVcw0Qn2rvgzPrSmT2qAtq7wHo6yk+vypP2LojW
mXtoveZDexdIf+X+h2pLMO35mC1jJk1NhdOej/HrkqvqrBja88EULseJjx2h
PR/nzGdHV7tSae8Kg6dJvkFDWbR3xfDYgGn27lzau2Lz6d7qpd4i2rtCg+n0
4m5/Ce0FMOpUtbxz7SLtBej/7VbsZfVq2guQxu+5vTfoBu0FiCw/avO+RBPt
d4H+j7b/AaHO3a0=
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF1X00FXYcx/Gbh+KMPOxOJjnyHPJ4PVwP937uo5tMmibKro3U0oTKtSJ5
GD0wobW5B+tBGielcGjFyDZjlcWlYtVkSVuXsrBcTeuc+z1nv3N+f7zO+/f5
+7cyNun9eE0GgxH/5i56czUY/59+Zp1VsHtbgFojXLM1KknafBP5OffSu0P/
lgZcIL/kLp1u6izrryYz8Ghi5jOTwyfIWpAZs2sLb35F1sHaktZy1oFish4i
hw021o8cJBtC9vhkTJckm2yMxkSdhtHFe8lMZC5PVyotdpFNcPd0X5UFJ4Fs
Ctto658HGXFkM6TPN2Up8jaTzaFa5mu8bTKcbAG9Elmt/YMQsiXiZa0fPxwX
klciskgjoiKIQ7bCyVe/lzVOeJGtUeS/Tjna6Uq2wdTLJxu2MuzJtki+VlG2
pcaSbAc503NnqaUp2R7WR8UrTPcakR3wsiay/l6oLnkVIq/oeGlt0CA7It5B
e+ZFgcpfbSfMxX7d/y37BdkZWuxmTvHdp+TVSDAMWXLI8RHZBSUxdxJTvO6T
XRH1ak+Si/0g2Q3RYwbPNlX1qp3lhsY81Qprty7q7nDMcNqcbdRB3R3SqsLx
AVELdQ8UTG9o3jZ8kboH3h686cP5pIa6J5bYalpMnjtF3RO32lP2Hzoup86C
P0upMMstpc5C2+7A/qEfj1D3QpS8Zx83PJe6F3oz9Hbl9KdT90bE6PYD8r92
U/fGtERoGMf6lLoPUmP++E55OI66D74ofvFR+VAUdV/o1t8J7KwLpe6LqbWG
yXNtbOpsWGY/aLl81vyqurNxNr83yGa7UG2GH542/LCZcymcuh/Cu7JbSrgx
1P0hsEltXfXWNur+mJ1674RtSjL1AIhWu6b+aZJGPQCCjXv/VjCzqAeCX5JZ
2xCaTz0QNePdAzkjRdQ5GFnw/F4aeZw6B8tkxcWFmZXUuQhu58tV0jPUufgn
0cWh0KqOOpB33bx8S2LjVSJiN1Xrv1ZcofeAb4qyySC/U+0OwGS2mhP6ZQ/t
edjqnBTNqe2jPQ/ez5aarY+7S3seZhMGjpy5PUJ7Hqpe5wymY5z2fJga1hkO
6j+nPR8aDxd96OI0S3s+BN2bbl6tWKA9H9f8/XZ0W2m3qvcCZIZFu3/jqq82
BLhRJn183o6pdpYAP2VPH0hTLFe7Q4DE1OdJYm9r2gvx+nRFespBR9oLUXnb
TKIK86C9EOduGQw3BLNpL0Rfu1GBk4xHexGOLcwcW28uob0I3uM7ohyqw2gv
wg67yfve8xG0F0H385DfzK/E0F6MiQpm2thYPO3FuHdBe86SvZP2YjBVs8ka
w3toL4bcY2JorjOD9kFwfJIWKVXk0j4IiuE+t7x1BbQPwuKjPTUzPaW0D4IV
kzf1a6+c9hI4d5izbpw/RXsJen+5nHTWsob2EuwXd1//QHqR9hIkVO7zeUez
mfZrQP9H63+tFt2s
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["\[FilledSmallCircle]", 10, StripOnInput -> False], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.003666666666666667], 
                 RGBColor[1, 0.75, 0], 
                 AbsoluteThickness[1.6], 
                 Thickness[0.01]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF1H801Xccx/Fbrh9ryY/CyORH3PmZEBfX9bq4LhUJXTJRFjmrIa2M68y9
ps2uYciRtsmvjFQITcuv2bTs+JnTMr/yY6MtZo6x27aOOee+O/ue8/3jcZ7f
1zmffz5fo6j4wGgFBoMRvfFu2ng3M/5/Vo28l3pflXbINeW+PvbvgL5XMvkP
90O6WpWn0mPJMvfKTPv8tPshZAbM4ySGbHUBmYnoaZZFTKQjWQWb/zJ49KTR
lLwVfdKgzFRVLbI6OqdsZnacYZI18WJ3eV36wEq73Dsw/oPWz6VOs2RtLF7n
FxyofEh+DYfXppYitbrIeuhuuytslTaQ9THVvSQCs4xsgFBFxdU+yadkQ7Rc
MevyVRCTjdCf9sySpxFPNkZYUlXYNZMIsgniTKVMc64feTf0b8s0A6M4ZFM4
GLSJmi9Zks2gVJKvKZzRI7PgunTgYVL8FvIbuDr21C2n9O82uc1x51jO58ha
IFtgtLVJxC2aJlviCOeg267YMbIVZFkNcyH5L22NgJGt7+zMmiLboCL0Wuqe
8l/Ie9B0/8bxfp9Fsi0edF0eC97+p9xiW7x9aV3SXfUP9b3QSY7IWNdUkJ9X
vGH1Xefyg1+e3w7rAQXZx6w1qdtBL9614ZSuLnV7vBcw+iOCjajbozxkIGN8
kUXdAUcT81bTL9pSd0DIoIrozKAj9X2oto1mzIvdqe+Da8pvhoGdfOqO0GB/
4Gn1ij91RzTdUj7xtDWYuhMeCwe+Wi0Pp+6EkjnJQmH3W9TZsLQQ1SX4nabO
xvJ+m3s9PyVSd4aBZFLwSDmFujNuNOg/fy6TUHdBtV9yWPRQJnUXVAU7J1YY
51F3RWQna+B0TRF1VwR9NMnyFZZS54BT+6UWJ7eKOgf90sGVebM66m5oKRI0
7k1vpu4G5bs7m082tlHnYlLhwnid5DvqXLi5rGnYHu6l7o6JWLa2UfYwdXcs
8sLLROuj1IFDHdKJtYqZdiK+5ZkXp7f9St8DF5WKg2q6l+XuBPy5TWEfS2W0
5+H8MPv3O8sM+f0FD0GJJooT0cpyi3moU/KwqmSpy93JQ9Gwouqwvzbddw+U
FTM/W+szoL0Her+fGHngRf8LsQc0z1nqX46wpr0HRm+GRJkIHGjviZb+xR4h
g0N7T9ScXRrzP+JJe0+Yil2zYm7vp/2GF/rC2uMCae+F2eJtPcx3j9J+w9nX
M57ln6C9F67mKr1I8qL/X6cXQmbFPOE3CbTnQ8Y6yFczSaI9H+e3j0yrrKTR
ng9l2fsvjNQ+pD0fSqMyvsKFHNp7o5adEK6mUkh7bwzltla3bfmC9t4ouHJW
m6taSXtv6NwKfPNkfS3tBdBJ3cTUN2ikvQAixdgs65ivaS+AXWJp7+suXbQX
wNj8k75Qyx7a++BeSklh+/Eh2vvAO1zjps36Y9r7gJNb35SWN0V7H2yrN+Ux
pudo74sn8x69g0VLHf8BSOHteQ==
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       InsetBox[
        FormBox[
         StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
         TraditionalForm], {10, -0.5}]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50.}, {-0.9949752074706504, 5.334057207810938*^-16}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"NEdyson11\"", "\"ED11\"", "\"NEdyson12\"", "\"ED12\"", 
       "\"NEdyson21\"", "\"ED21\"", "\"NEdyson22\"", "\"ED22\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], 
                    FontSize -> 10, StripOnInput -> False], TraditionalForm], 
                    
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    StyleBox[
                    "\[FilledSmallCircle]", 10, StripOnInput -> False], ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "False", ",", "True", ",", "False", ",", "True", 
                 ",", "False", ",", "True", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.797467854486163*^9, {3.79746799414371*^9, 3.797468041579607*^9}, 
   3.7974681046246653`*^9, 3.7974681455387583`*^9, 3.7974682360828743`*^9, 
   3.797468403456513*^9, {3.797468453835156*^9, 3.7974684590690603`*^9}, 
   3.7974687044115353`*^9, 3.797468898523316*^9, {3.797469051124695*^9, 
   3.797469067146501*^9}, 3.797469190530583*^9, 3.7974692529034224`*^9, 
   3.797469310112705*^9, 3.7974693939763947`*^9, 3.797469428446279*^9, 
   3.797469523848424*^9, 3.79746961842489*^9, 3.7974696496840477`*^9, {
   3.797469722425274*^9, 3.797469742931172*^9}, 3.797469858708305*^9, 
   3.7974700015276403`*^9, 3.797470069744763*^9, {3.797470140903644*^9, 
   3.797470157581531*^9}, {3.797470220196026*^9, 3.797470273803886*^9}, {
   3.797470336295229*^9, 3.797470342097331*^9}, {3.797470451389311*^9, 
   3.797470481435363*^9}, {3.797470516320307*^9, 3.797470528569899*^9}, {
   3.7974705858264847`*^9, 3.797470632781145*^9}, 3.7976051615618963`*^9, 
   3.7976071018128*^9, 3.79760717921529*^9, {3.797610890968569*^9, 
   3.797610904279212*^9}, 3.797619259861477*^9, 3.7976201081398563`*^9, 
   3.797631665696686*^9, 3.797638213724299*^9, 3.801338013968431*^9, 
   3.801338068799262*^9, 3.8013381236230087`*^9, 3.801338218779442*^9, 
   3.801338448872942*^9, 3.8013385180043087`*^9, 3.80133882805075*^9, 
   3.801339987413623*^9, {3.801340105344441*^9, 3.801340153669928*^9}, 
   3.801340467432919*^9, 3.80134051511268*^9, 3.801340547781558*^9, 
   3.801340756342594*^9, 3.8013422516262627`*^9, 3.8013425144337387`*^9, 
   3.801342584859845*^9, 3.8013427402761297`*^9, 3.801342796823135*^9, 
   3.8018429118233128`*^9, 3.802607910166225*^9, 3.802608110485854*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"407d2cd0-abd9-4d15-8d3d-916b6e056904"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<H2Mat.eps\>\"", ",", "MPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.797607057136236*^9, 3.797607096724431*^9}, {
  3.801342819757872*^9, 3.801342831962772*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"680bb8be-28c8-45a6-8082-55df911738b2"],

Cell[BoxData["\<\"H2Mat.eps\"\>"], "Output",
 CellChangeTimes->{3.7976316879977303`*^9, 3.797638491385627*^9, 
  3.801342838632966*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"218e06dc-99ea-4321-96aa-a34e14e839ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retarded", "Chapter",
 CellChangeTimes->{{3.797470826729397*^9, 
  3.797470829372262*^9}},ExpressionUUID->"9218f325-0557-46c1-8dee-\
95118d392943"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</up_GR.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Params", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRNEdyson", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Params", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRNEdyson", "[", 
         RowBox[{"[", 
          RowBox[{"t", ",", "i"}], "]"}], "]"}], "=", 
        RowBox[{"Read", "[", 
         RowBox[{"ReadFile", ",", "Number"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Read", "[", 
        RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tp", ",", "1", ",", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Params", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}]}]}], "}"}]}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", 
      RowBox[{
       RowBox[{"Params", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.797005433891361*^9, 3.79700544149122*^9}, {
   3.797005698348235*^9, 3.797005698840514*^9}, {3.797005989091308*^9, 
   3.7970060207505913`*^9}, 3.797006886424909*^9, {3.797506663352304*^9, 
   3.797506709958435*^9}, {3.797515796987644*^9, 3.797515844723921*^9}, {
   3.7975169252026176`*^9, 3.797516930526369*^9}, {3.7975171170852823`*^9, 
   3.797517431782233*^9}, 3.7975175123434963`*^9, {3.797517558978759*^9, 
   3.7975175718885317`*^9}, {3.797517646159463*^9, 3.79751764903553*^9}, {
   3.797517698765895*^9, 3.797517735348546*^9}, {3.797517765754191*^9, 
   3.797517768662232*^9}, {3.797517830997418*^9, 3.7975178485281067`*^9}, 
   3.797605174259474*^9, {3.797610935647678*^9, 3.7976109362226257`*^9}, {
   3.797620128099765*^9, 3.797620132163089*^9}, {3.798410213510977*^9, 
   3.798410230567704*^9}, 3.798419943907239*^9, 3.798420284883144*^9, 
   3.7984203861641417`*^9, 3.798992790627393*^9, {3.798993034358411*^9, 
   3.798993036122761*^9}, 3.801342872545833*^9, 3.8013436184386683`*^9, {
   3.802613519498001*^9, 3.802613519974739*^9}, 3.802618889620564*^9, {
   3.802707419746459*^9, 3.802707422400058*^9}, {3.802784915090366*^9, 
   3.8027849152884607`*^9}, {3.8027908713634043`*^9, 3.8027908719648438`*^9}},
 
 CellLabel->
  "In[258]:=",ExpressionUUID->"14b63a35-09eb-46d3-a129-9b8918ced47a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GLf1D", "[", 
    RowBox[{"s_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["I", "Z"], 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "+", 
            RowBox[{"I", " ", "t"}]}], ")"}]}], "HEigVals"}], "]"}], "]"}], 
      ".", 
      RowBox[{
       RowBox[{"cdagTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}], ".", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"I", " ", "t"}], ")"}], "HEigVals"}], "]"}], "]"}], ".", 
      RowBox[{
       RowBox[{"cTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGf1D", "[", 
    RowBox[{"s_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "I"}], "Z"], 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"I", " ", "t"}]}], ")"}]}], "HEigVals"}], "]"}], "]"}], 
      ".", 
      RowBox[{
       RowBox[{"cTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "t"}], " ", ")"}], "HEigVals"}], "]"}], 
       "]"}], ".", 
      RowBox[{
       RowBox[{"cdagTrans", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GRf1D", "[", 
    RowBox[{"s_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"GGf1D", "[", 
     RowBox[{"s", ",", "t", ",", "i", ",", "j"}], "]"}], "-", 
    RowBox[{"GLf1D", "[", 
     RowBox[{"s", ",", "t", ",", "i", ",", "j"}], "]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.801343046906828*^9, 3.80134309053613*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"b2fe4b85-b08b-492d-92ec-d70aad551803"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GRPlots", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}], ",", 
             RowBox[{"Params", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GRNEdyson", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{
               RowBox[{"2", "*", "nao", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}], ",", 
             RowBox[{"Params", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GRNEdyson", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{
               RowBox[{"2", "*", "nao", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
               "2"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{"Params", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Re", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", "t", "}"}], ",", 
               RowBox[{"GRf1D", "[", 
                RowBox[{"1", ",", "t", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"Params", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"Params", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}]}], 
            "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{"Params", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Params", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Params", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", "t", "}"}], ",", 
               RowBox[{"GRf1D", "[", 
                RowBox[{"1", ",", "t", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"Params", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Params", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"Params", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "/", "500"}]}]}], "]"}]}], 
            "]"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Solid", ",", "Solid", ",", "Dashed", ",", "Dashed"}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None", ",", "None", ",", "None"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nao", ",", "nao"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<RE NEdyson\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<IM NEdyson\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<RE ED\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<IM ED\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<d=1.4\[Angstrom]\>\"", ",", "13"}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Beta]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Beta]", "]"}]}], ",", "13"}], "]"}],
            ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.8"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<H2sto-6g \!\(\*SuperscriptBox[\(G\), \(R\)]\)(t,0)\>\""}]}], 
     "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.79751797170925*^9, 3.7975180361742153`*^9}, {
   3.797519954125556*^9, 3.797519954735573*^9}, {3.7975217493002367`*^9, 
   3.797521753620278*^9}, {3.7975218878578444`*^9, 3.797521950129917*^9}, {
   3.7975227153072577`*^9, 3.797522759915256*^9}, {3.797522791244419*^9, 
   3.797522826076889*^9}, {3.797522981492872*^9, 3.7975229836615467`*^9}, {
   3.797523043875614*^9, 3.797523057598378*^9}, {3.797523362870523*^9, 
   3.797523367507451*^9}, {3.797523557956566*^9, 3.797523708495351*^9}, 
   3.797523739421755*^9, {3.797523991718943*^9, 3.797524000788056*^9}, {
   3.79752516654109*^9, 3.7975253175590878`*^9}, {3.797525386249136*^9, 
   3.797525421354431*^9}, {3.797525524001862*^9, 3.797525526629169*^9}, {
   3.797525565412768*^9, 3.797525613283798*^9}, {3.797525729093439*^9, 
   3.797525792799324*^9}, 3.797525823180767*^9, {3.797525899205019*^9, 
   3.797526079470299*^9}, 3.797526118339623*^9, {3.797526200753789*^9, 
   3.797526220428784*^9}, {3.797605619611458*^9, 3.7976056228296432`*^9}, {
   3.797605665898609*^9, 3.7976057085838118`*^9}, {3.797605740105689*^9, 
   3.797605769566183*^9}, {3.797607316316571*^9, 3.79760732151167*^9}, {
   3.79760762309769*^9, 3.7976076335600433`*^9}, {3.797607673420329*^9, 
   3.797607678246169*^9}, {3.797611077078154*^9, 3.797611143699147*^9}, {
   3.797619450191695*^9, 3.797619454189501*^9}, {3.798411229652029*^9, 
   3.798411236386766*^9}, {3.798411273539187*^9, 3.798411312608404*^9}, {
   3.798419950742193*^9, 3.7984199543605433`*^9}, {3.798420118585657*^9, 
   3.798420124860505*^9}, {3.79842015936849*^9, 3.798420162168129*^9}, {
   3.798420230684946*^9, 3.79842027108006*^9}, {3.798420371680369*^9, 
   3.7984203974676743`*^9}, {3.801343102939026*^9, 3.801343137754917*^9}, {
   3.801343276731827*^9, 3.8013432777222557`*^9}, {3.8013433266347523`*^9, 
   3.801343341818966*^9}, {3.801343384875424*^9, 3.801343400139412*^9}, {
   3.801343810332841*^9, 3.801343842982606*^9}, {3.801842930424714*^9, 
   3.801842951591668*^9}, {3.801843012954557*^9, 3.801843125781053*^9}, {
   3.801843170288518*^9, 3.8018432034334583`*^9}, {3.801843253020878*^9, 
   3.801843254263555*^9}, {3.801843292459384*^9, 3.801843360258389*^9}, {
   3.8018434037184477`*^9, 3.801843521622917*^9}, {3.8018435840602913`*^9, 
   3.801843590727919*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"4c8585b8-8ebb-40a9-9c36-377bd2d7272c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., 0.}, {0.01, -0.006225041369751098}, {
           0.02, -0.01867414003260856}, {0.03, -0.03734163879732542}, {
           0.04, -0.06220984036245546}, {0.05, -0.09323800909162516}, {
           0.06, -0.1303478710035288}, {0.07, -0.1734058863684323}, {
           0.08, -0.2222027734499548}, {0.09, -0.2764309874948709}, {
           0.1, -0.3356610164517358}, {0.11, -0.3993172988316239}, {
           0.12, -0.4666541316163861}, {0.13, -0.5367310232689506}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., -1.}, {0.01, -0.9999787021501937}, {
           0.02, -0.999808329021528}, {0.03, -0.9992334465208705}, {
           0.04, -0.997871542546912}, {0.05, -0.9952147306031371}, {
           0.06, -0.9906335478949384}, {0.07, -0.9833840473326664}, {
           0.08, -0.9726194643637964}, {0.09, -0.9574075727162065}, {
           0.1, -0.9367543337090177}, {0.11, -0.9096335644775178}, {
           0.12, -0.8750212293618653}, {0.13, -0.8319319636136407}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxd13lcjPv7BvC+J0tHImWJEiH7vpwQLoSEQvYQKvtWtlO2TofQsWaLJJT9
oH0vn/ZlKjXN3sw0S/uOhLL9mjn3X7/5x8tLnnme53Pf1/vKwuWg4/bfdHR0
Wv+no6P58/9/vr/4UGLvshXHOytije1Ws//+7g6/dKckIzs31n56T/KRG574
eG7247v7D9C//4VZQrvCHnZH2Ineb2xVx8/iYcA+rsNGL/r5CwgZkLX10v7T
zKt2+CS9V5dglZ17upz50P+/hlozvT6/Fp9lsxTLLwccuA4LDqJNSs7R9W7i
tunVgRM3+rFEu+6/jTl/Gw+O9TFaWHGRrn8HaqePjuv2X2Ezo3OPvX0QiC2R
ISumnLhG3xeE/iP7bUlg/ize3Ld+ZXwwgk/tiJnd6QZ9/0MciB48NXXxTRaU
OTj80K5HOKMSJM29fIvuJwSGE/qOY9zbTNqm+cJQ7JN77LLue4fu7zGeLvBy
iHG6y0wnyId18XmCJEEyG/sgkO73KcpMC4Meld9jTm7WHVd8hrqUmdnGI+/T
/T/HTe/bZmf2BbPAu5rPCyTO9/irOfwBPc9L7O40fver4w+Z5N2XVeVP/kXX
9sNeCrNH9HyvcHDYKpUhe8T6d1rbY1zka9yx6u0/d1sIPe8b5Lb98jygG8rW
z9BcMAwnF2zxC3wSSs8fjshOJyIzbR+zZVZ+87ZWhqPJOqiiofYxvY8IROp0
NzS+9IQ1rNRcMQIzvI0trcY/pfcTiS9t34w3FD9lF/dVf3vxIRKXOT0KPQ89
o/cVBUuXW3Nv937Oxpzv2/EIUXBeInGOiH1O7y8aMZbDTDjrX7D8RwtjW35E
40g426Rsf0HvMwbGaa1mn4Jesr0db8ukUyx62hnadca/9H5j8XTNBq6x6l/W
TRTqPrtbHGYYmj4ddOYVve84TGQP4kZavmYvNY9rGI+w7Emfx+e8pvcfj9bn
po6Td79hSzSX65uAbV2fJ03WD6PzSIA4xGLoxNdhrE7zus0SYfdm96xbI8Lp
fBLhanpWeM0znGneXvGQJNx42Vn8T144nVcSPv40nnFmQAQbtelqeuvIZHws
4H/w2htB55eMltL97QeSI1hex9UGTEiBy/86L3UxiKTzTMHMManSVc6RbLd/
40lMe4sxa7Me24RF0vm+heWNmcGTdKJYx811PDKDd5dFqQNXRtF5M+yuMdDV
C4liq8uf3MscnIoFvvHO7z9G0fmnonD2vnyhTTR73PH2RKGpiDi/fF7SzWia
h1TENV6Iv18ZzT794HvWDk/DCEOMOv1HDM1HGvo+uXNx0/kYtkA7AGnI8UwW
TRfH0LykoW0/t7PxqFh200TzQOlYfPqnQb1XLM1POk4l7qlJ5cQy7e2Fp4O3
ZPblm6ZxNE/pOHTw/qft++LYFO0nA9f/iuw7LSWO5isDls2h9f/rEc/OpHI6
JigD+Qvu7i1wjqd5y8CmYYlXbobFM17H6a+fkdkxf+PtnXQSaP4y8evSwAcD
VyawodoLZkIuCztZ9iiB5jETugsNyoI+JrDDuzQHkAXn+s1J620SaT6zMLkX
p7vRzUSW0Tqy44SzMMH4OCe3IpHmNRuWe243nJyWxIy1N5iNLy9t944/l0Tz
m43p52PnyIVJTHN30bnZ8CjU3+I3IpnmOQdbd7tnTvZMZpH3m59lL83BCTeD
nZLcZJrvHPSq0sep/insN+0D56B6yq0F5ntSaN5z4RpZcjA5MYU5agcmF0kV
jfHr9N/S/OciZ7+hyfuNb1mI5nH5uVD0dPP1ffWW9iEPHq+N2vr9eMs+ai63
Pg/Wdov2PrNntB95kHcZxZ8SzNh8zfhL89A4unJMShOjfeEg6rJjzKNBqey6
ZnydOTAIt1tQbptK+8PB6ZWNc4a6pzLVcc2BcGApdny07U4q7VM+QpOu7gxO
TWWTtAOeD1PfhMuSmlTar3ycLKrsadwrjfncsukYmXzcth1dt2RGGu1bAba9
CjLx2ZbGuEM0B1wAwyLHgBi/NNq/AjjccHGpiUhjFh3T7N9YgJ3NqqP9S9No
HwtxuKGqcPFv6cxDsx7uhTjz9PyOY6PTaT8LIV5Wah3imM7SNOPXUogWi1a7
guPptK/v0Hqi6dKnkHTWS7uQ73AxU6Zjmp9O+/sO27yEj9CSzrSvr+0dDMd+
3OtimkH7XIQjfy/aeMYmg2lv72QRCv6o2xuyN4P2uwjV/T7dZTcy2H+KF2PV
7ydUpUkZtO/FuK17e86n8gz2PHtpx0YXw7r3ptf63TNp/4th6VwxymJqJlvR
sY1GZ4rxuP+i8KmbMikPihF5886sRWcz2ddVmgsWw2xKC2fNq0zKh2I8PLB/
nSs/kz0coFkILmaIzMsOfM+kvOBipvGgjZ7Dsthi7QFz4anw5Xgvy6L84OJC
z70jfY9ksffPNDfIRfPlKvcLQVmUJ1wM22T40C8zi93puLtUDhd6N3QiLzRk
Ub5wUeBSFOLbO5vNnebcsVIlWG9868Bfs7Ipb0qwodOeXl5u2azmm+aBS3Di
9Y7zBy9lU/6U4E5waIFrdDbTTMumqyUQes+Qr5FlUx6V4EuveTELO+Ww/x63
BO7jeSumjM2hfCrB9Ry9V+arc5j2ckY85NW0p3c9mUN5xUNxbLp/U2gO08bR
qo6/H/TqzcvPofziwX/vdNuYlhymjZNbPDw17T/8lmku5RkPHP1prw/Z5DJt
HIh4iFY9EdvvzaV84+HBZt/Hw2/kMm/NOpvwsdqpsfuPxFzKOz7WFn4x4Kpz
2QjtAvFhlPM2NKRbHuUfH2aHN3E8JuexIs063ePD1aT+1BynPMpDPqz7+ybq
/Z3H/tSsg5yP+JYFJ4tf5FE+8iGet5Dd4uaxQZpxNhfgWsJD7/VteZSXAgwe
dyjBxILDcjTjt1WAhRf5u4SLOZSfAqxQqP383TnsoOZ4HwngvDLeZMkdDuWp
APeHu/fSSeWwftqFF2B3mqV7VDWH8lWIXY8+TXTrmc+Y5vaGCaHj9nW5kVU+
5a0Qf2Quy0txzmc7d2g+Qoy5Z3B3x7l8yl8hmhVrk7q/yWcdy9yRsEIMeL5g
bLggn/JYiNwRLdUrfuQzzcN61grxOuJ0XdOwAspnEW7E6U78Z1kBc9ZeUIS5
nODoIUcKKK9FENzddyT+XgHrog0oEXQ/++1dmlFA+S1C53fGt6V1BUxzGr3f
iDBy0oj3u4wKKc9FeOigOtoyo5Ct1d6gCIbHtgw9sa2Q8l2Mc/3Yp18XCtlP
zbpNEuNpxsAqn/BCynsxjMbebdERF7KnmnE+JIbb0OX9T/0qpPwXw/v+5lWf
h79jDtoHFuNtmPr+Pod35IEYZv7fPymOvmOfNcfRKsbRwLzVK+6/Ix8keLZo
V0JK5jsWrHlcKwn4k7+Yj2x4R15IcMP8ls9V4yK2SPsCJTBq2CpvmVlEfkiw
56HX+DUuRaxJw0OiBC9cf7pH+RWRJxKM8+nxqEdEEbutifdvEkTtzEvcIS4i
X0oR9sIhMelXEZujPZBSRPwsKzxnXEzelOKf4Hvjxo8oZlWaeD1diqdT9rfz
ZhaTP6W4WOQ62dOhmGnjL7UUnW9f5Q1wKSaPSrE2RUeWdLSYaePlNylsr+TY
bfQrJp+ksHb7NKAtqJhp19dGirWvA+xvhReTV1Jcr0tTTMgsZtr18JVCHHam
KFdUTH5JYfi4ccDW+mKmHb9sKTb4GKa2/iwmz6TQ7fMj2c+IywSa49WTIR6Z
Pc2Gc8k3GQJbj8W+msFlpzSvz06GNXOGh1nbc8k7GeZOK/+Su5XLLLUDKMOh
39mV1Ue45J8MZT84HmXnuaywQPOR4dhukwc77nHJQxmmxsX3bnzDZUdvaAJV
jiU7Uoo90rnkoxyju03nfhJw2UDtQMvxZsnM3sdqueSlHOMqBAGt37ksSxP3
/nLcfmbmdNiwhPyU4/LxwRuah5aw/do4lcN7Xcv13VYl5KkcxfbPOquXlLA+
2gUpQ5mPQ9h65xLytQzjxn27XOhRwlI0cbC2DJ7B7MFc3xLytgyiGW/UEXdK
2HbNugWUodBTstriVQn5W4bDdas+XWEl7L9xLsOFKRNZe0kJeVyG6z18otyq
Sph2XAYoULN0Q1FBWwn5rMBnbr7hFAMe0x7HJgXG368/GjCYR14rYJ2a/71t
Co9pH/e+AiZu3qFOtjzyW4Hhuf13JTjx2H+XU2Dt/DeL+x7gkedKjMUKGw8f
Hu27Et/nGa/l3OSR70q0VnTztnjOo/1XwlKyJPlYEo+8V4JTVaXPecejPFDC
uvHjXlM1j/xXYlz536V7WnmUD0q8FL5cE6/Hpz6gxKrG01JdMz7lhRKb3Yz3
2E/gUz9QIu7ayV835/MpP5SYrXh3t3QNn/qCEi/45lbmu/mUJ0pwDXwEW07y
qT8oOxp1t8MPrvIpX5QQWxUZyEP41CdUiJFWhJrE8ilvVIgatXWKYx6f+oUK
YdPXJvrJ+JQ/KsydLvuDNfOpb6ig49H12cffBJRHKqxZ0Kg3rK+A+ocKkrGh
TqtGCSifVLB/Oyfwr1kC6iMqFDwRZP27XEB51fHzL05J+S4C6icqXHq5TPLt
qIDyS4Wrj9anDPYTUF9R4UhInK9NkIDyTIU7pd4T3cIE1F9U2Omfk/R3uoDy
TYVdI59YPhAIqM+osdl0wr6EGgHlnRrbdU5e5n4TUL9RY8iFkPPVPYSUf2rE
n0pY/81CSH1HDf0c0c/u04SUh2rI3Xp7mi0WUv9Rg3voXPqojUKmHffTaviP
WCibekBIfUgNY8HOjNk+QqYd1wdqnK7pfGzBTSH1o477qfvj4+JnQspPNVpP
G/2xNFFIfUmNqu3hWFoopDxVI+/4SAM7pZD6kxoGMdeDFrQIKV/LYTmya8Ps
LiLqU+UI0g1um9pfRHlbjqU3DmaMGiuiflUOe9y0NYOI8rccrpeGne3uKKK+
VY480xl/truJKI/LceLfOvOqP0XUv8qxqa+jV9E/IsrnctisvnA29r6I+lg5
9I8/nXMvXER5XY6qhKwnpzJE1M/KYev6K26zUET5XQ6T8n2HrWtF1NfKocgY
Iez7XUR5Xg7xa7uy5h5i6m/l+LWjwS/bQkz5XoFdvFGiwKli6nMV6NVqmrnP
Vkx5X4HlDTKHWU5i6ncVePXl3NHf94sp/ysw88jUP/jeYup7Fbgi/3Ul6LqY
PKjA90Ld0y5PxNT/KhD00+l/w+PF5EMFztgO7lfNEVMfrIDwwYGUJ3IxeVGB
2oHbPm57L6Z+WIE9X4yiTXUl5EcF3H0e6PD6SKgvVuDlxCHC8yMl5EnH9e/G
Tp5pLaH+WIGR7p696+wl5EslMi+c8QrYKqE+WYlnopYt8w9LyJtKzPKozKrz
lVC/rMT6f468uHZHQv5UwsYzRW/qvxLqm5Xgh8tU/BQJeVSJN5ymyYeLJdQ/
KzH3lGF7j3IJ+VSJzw+dpz1vlVAfrYTbhM/qOXql5FUlltl80uENKKV+WgmZ
ybHLbuNKya9KJBvcPdeCUuqrlcCj43XejqXkWSVcj0yP+317KfXXKkxc8r7u
2p+l5FsV7nRNPdPnn1Lqs1V4G5XlHRBUSt5VwdBzkLxvWCn12yq4Pqy/eyOt
lPyrwvh7i6MN+KXUd6vg2bZ6tG9VKXlYhbEHJ7S3fS2l/luFMbzPFvv0pUxb
RwOq4DKI80A6UEp9uAqf3XM9Fk+UkpdV+FOv1+3I+VLqx1WQ2GV0G7BGSn5W
ISv5Z+HpnVLqy1Xw714uV3pJydMqXNS7Nn3uJSn152p8DbWUBQVLyddq2H/O
yP4cLqU+XY2l1hc/22dIydtqmPPu7Q4RSKlfV+PS/L7mn6ql5G81dKeYGtm0
S6lvV+PdoXybq91l5HE1ZrTaRojNZdS/qxFSErF+0CQZ+VyNmMWjp7vayKiP
V8MzscT+8RoZeV2NQ+EFAeqdMurn1WgQz+htflxGflejvOustLWXZNTXq7HO
qjXoUrCMPK/BxvPnn7BwGXleA6s5fSTN6TLyvAYXc1OnDRTIyPManEl4lWBb
LSPPa1DN+eZysE1Gntdgubx4wk19OXleg2lfHcxjB8rJ85qO+bo7VjBBTp7X
oH0kb/2HeXLyvAas1+BH3VbLyfMa9HgRqmuxQ06e12Bsks/pqZ5y8rwGvWaV
9Vz4j5w8r8EbW3mMY5CcPK9B5yGhBza/kZPnNYDV6unbU+XkeS0qTPv02lMi
J89r0Xqp25e9FXLyvBbm7htq9nyWk+e1yOYNL9+hV0ae12JJc0DllgFl5Hkt
DIeWNK4ZW0ae1yLpa3vb4jll5HktbIdO15uxoow8r8Vo77C+w13KyPNa/G10
fqjhkTLyvBazDCrHfvEtI89rMTOveaI0oIw8r8VeTuG45Bdl5Hktvr59YhGY
VEae1+KYd3C3o4Vl5HktPvRQVC1TlJHndbC+dyXa4kMZeV4H/km+R8tvCvK8
Di5WYrP03gryvA7eXmlRl4cryPM6jBoYP3XtdAV5XofwERX3TZcoyPM6GHH2
N8o3Kuj3nToot56yuL9fwa5pPe/4+SPW0zd4K+j3nzp8SyieYOSvIM/rcKLX
ji65IQryvA5jLwxLPB6tIM/rcGvdNLvR2QryvA6ZlWkRQpGCPK9DSFbLB+9a
BXlejw+xn7oO/6Ygz+vhsOqLp1sXJXleDydR53VTeyrJ83ps1Le+/5uJkjyv
B3/UqyVFg5XkeT0Gnz3gHDhKSZ7Xw/vvAJHrZCV5Xo/Zj2fFjLFWkuf1eOl9
+PMHGyV5Xo9F6SsDY5cpyfN6vJvY+MBrjZI8r4fts41drJ2V5Hk9+vaPKmjf
oSTP6zHQ//eP8QeV5Hk9cicdPXrUU0me16P/tO5rJ/ooyfMGFDRUXK/1U5Ln
DdiY3mfMo+tK8rwBI6xiBq67pyTPG3CoQrJb/7GSPG/A2ROBPd6+UpLnDUjN
MtA/GKMkzxsQ9XiJs/lbJXneAHOjXV0LspXkeQNGDj7V2bNISZ43YGnbw3VD
xEryvAGXlHXfOUoled6Ak5MOffKoVZLnDVi+1WF2v49K8rwBH9puCxPbleR5
A4Y+dmWbdFXkeQN8BhZ8/q6vIs8bETi75sS93iryvBH9Wovspw9UkeeNCLe/
t5dnqSLPG+G6x4W/b7yKPG/EjvOzz3eyUpHnjdjQvuBMIFTkeSPsJvvnjF+s
Is8bURI3c1XaChV53giLcU6WjhtU5HkjhjjozVZtU5HnjTjxfvPdA3tU5Hkj
4nWPzGg/pCLPG7HM39Xs7AkVed6I6OSF87qfVZHnjbiQMeXZ9Usq8rwJ/j8W
2fe7pSLPmyCV3ZkceF9Fnjchs3H+WtOnKvK8CaNEznGBb1TkeRO2OHVZYxKn
Is+b4LRq1fibTEWeNyEpfsv8Hrkq8rwJ1fcWXjtXrGJJWs+bYD5qUL8fYhX9
vtuEa8+6CD1UKtZTO9BN2O/Vt6CiVkWeN6Gz2e6vaz6qyPMmiEf0d8pqV5Hn
TQhZMe/9ZF01ed4En+3fE4L11eR5E35fuT1Wr7eaPG/G/P4BFe5mavK8GVWK
VzaiYWryvBmO6rQS63Fq8rwZb7w+XAuepibPm/FrwLpTv2aryfNmzFvXI8B5
kZo8b8YB6WR5koOaPG/Ga3elQ791avK8GSu/T65336Imz5vR5r0oInenmjxv
xrP+Vg/N3dXkeTOKdS3iDnmqyfNmnLg1uDXzLzV53nG9+Y4b+vipyfOO7wss
Ubv6q8nz98hd+vZa+F01+z/dgcEM
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
0lDjOSri+SdUDdx27/QMFfsfeW4raQ==
           "]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 1.}, {-1.0000000000000113`, 0}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson11\"", "\"IM NEdyson11\"", "\"RE ED11\"", "\"IM ED11\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., 0.}, {0.01, 7.884298834704997*^-18}, {0.02, 
           2.365277752803918*^-17}, {0.03, 4.729835455708691*^-17}, {0.04, 
           7.880001111879674*^-17}, {0.05, 1.181111055056948*^-16}, {0.06, 
           1.651410912302423*^-16}, {0.07, 2.197357970879933*^-16}, {0.08, 
           2.816539147786251*^-16}, {0.09, 3.50541558528692*^-16}, {0.1, 
           4.259054593646194*^-16}, {0.11, 5.070853477436212*^-16}, {0.12, 
           5.932246033979333*^-16}, {0.13, 6.832360518836122*^-16}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., 0.}, {0.01, 9.412316729346275*^-21}, {
           0.02, -6.091600900998391*^-22}, {0.03, -3.477789120251803*^-20}, {
           0.04, -1.13497223157709*^-19}, {0.05, -2.675461855179403*^-19}, {
           0.06, -5.293725469022913*^-19}, {0.07, -9.34854479612966*^-19}, {
           0.08, -1.516743896064464*^-18}, {0.09, -2.299122525298841*^-18}, {
           0.1, -3.289512274544277*^-18}, {0.11, -4.471439244563611*^-18}, {
           0.12, -5.799190399470375*^-18}, {0.13, -7.19782036614118*^-18}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
/wE2LLlO
           "]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 1.4187187620124217`*^-16},
        DisplayFunction :> Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 1.}, {-3.999331921813642*^-17, 
         6.832360518836122*^-16}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson12\"", "\"IM NEdyson12\"", "\"RE ED12\"", "\"IM ED12\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., 0.}, {0.01, 3.512801532741988*^-18}, {0.02, 
           1.053630134476727*^-17}, {0.03, 2.106072394253555*^-17}, {0.04, 
           3.505470654460757*^-17}, {0.05, 5.244752720755576*^-17}, {0.06, 
           7.310344013697717*^-17}, {0.07, 9.679311168703203*^-17}, {0.08, 
           1.231629678966964*^-16}, {0.09, 1.517066741916888*^-16}, {0.1, 
           1.817443798412387*^-16}, {0.11, 2.124170712441924*^-16}, {0.12, 
           2.427044880603786*^-16}, {0.13, 2.71474980791408*^-16}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., 0.}, {0.01, -1.516573189240118*^-20}, {
           0.02, -5.111078698617273*^-20}, {0.03, -1.718927713165846*^-19}, {
           0.04, -4.592499982302278*^-19}, {0.05, -1.015094631772175*^-18}, {
           0.06, -1.964225649599965*^-18}, {0.07, -3.441289808434743*^-18}, {
           0.08, -5.579161871271482*^-18}, {0.09, -8.488241549708945*^-18}, {
           0.1, -1.223037160880087*^-17}, {0.11, -1.678729660656137*^-17}, {
           0.12, -2.202775638923563*^-17}, {
           0.13, -2.767913300140912*^-17}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxd13lczOvbB3CSLZ2Qki27Dg6StcPNxxpZE79sIVtIiLIlVKiQSmlP+15q
mrapphqhkqJ9L63TXg7CSfHMzLn+euafXr2m+c69XNfnfTXjxCXt01KDBg3q
HTxokPjn/3/1h/1TuPOEHg5lN71QU1jC/vvdCOzD9rlqChtY3x0DvonTDfQr
GV/cOnU7vW8O80MtY1UVtNkthagt9ab3oatxol7dXYf+3gYuDdUn1k89zG62
qaiNiLRFu+bDvVsDjtHnHWB+bwdPReEEYx93P3G96AipO96rQ3VO0fOe4UqQ
tuNcd32WrCkr9Ze1CwK9B3mGVJ2l57thpQuWzZl6nq2Ky76W5uMBy2XBzE/v
An2fFzhPcxwnB1xivKkPOvbwvFGj4CeT89mIvt8XS1q19gxVuMK8Xk/nXDnr
B6vCNFssN6b1+IvWtyzyho4Jq/pX/IUBeLrppzfn+lVaXyCUvhze1+J2jU1W
rZk9zCIIun3eKVOSr9N6g3Fxp+xrraob7NCp1aInhkD7eIfuvf6btP5QdKvc
uxqnfIt5uItfYfhj6KSBxrVmtJ9wnCjsbRird5tVvP++tzEoAjYfDo9fa3GH
9hcJKT8Hq7P+d9lEaR25hdwXiJ9t+DT7uDntNwoPxq7uOvzZnB34W/zAaKy/
oLOr29KC9s/BmGXHIu+Os2Q7Vj5cr9fMwZKh336NDrSk84hB67SUNT7L7rHO
PeInxsBGb5fewjf36Hy4OL5m99Hk/91njw1bfob9w0XtK11VDeF9Oq9YWDkr
vsu/9oD9ZT1etIVY/GhSmndouBWdXxzargxe3+Bqxd75bU74MhAHzceXZM7N
tabzjMdsqd9m3Txrdl50WhOkE8BbvMPhiqYNnW8C7n3+vLq3wobJlAUYrZFJ
xCZ/u+vXDB7SeSfi2/jkVd/6HrJw8XbH8NDrO/q2yeNHdP48VA+bt+KfyY/Z
NvHjxichztLniGHkY7qPJPSljepoZrasXXzcU5JhWzS09EieLd1PMoo2zBlf
fOQJE59e/swU+H8bFLC1+wndVwps1qiapNyxY/N07TN65/LxLGuzxYLR9nR/
fNgGVLz09LFnb0VPm6Sais/P012kJzjQfabiy7zmI6v0HNi5p11mWJ6GtVJ/
LrkU6kD3m4YS3V2jAz45MNHiRFtOh6/S7H9K1J/SfadjeKJR0XCLp2xfY5Dn
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
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           "]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 1.5366863598976397`*^-16},
        DisplayFunction :> Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 1.}, {-3.999331921813632*^-17, 
         4.70894375690222*^-16}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson21\"", "\"IM NEdyson21\"", "\"RE ED21\"", "\"IM ED21\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., 0.}, {0.01, 0.006224629567015087}, {0.02, 
           0.01867290779265805}, {0.03, 0.03733919566325436}, {0.04, 
           0.06220585239253898}, {0.05, 0.09323227052146693}, {0.06, 
           0.1303404151068426}, {0.07, 0.1733971326906043}, {0.08, 
           0.2221936935529656}, {0.09, 0.2764232496424286}, {0.1, 
           0.3356570442173451}, {0.11, 0.3993201577138701}, {0.12, 
           0.466667156138706}, {0.13, 0.5367571340764704}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{0., -1.}, {0.01, -0.9999787131384072}, {
           0.02, -0.9998084278366999}, {0.03, -0.9992338407203738}, {
           0.04, -0.9978726305804586}, {0.05, -0.9952171482711004}, {
           0.06, -0.9906381847540972}, {0.07, -0.9833920088925998}, {
           0.08, -0.9726319506326204}, {0.09, -0.9574256458681324}, {
           0.1, -0.9367785638521028}, {0.11, -0.9096635787912106}, {
           0.12, -0.8750552478588463}, {0.13, -0.8319664755680904}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
oCCeN2KesEPnSwEK4vkHDDx044zwtgL/A+BBxjs=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJw9l3lcjekbxq3ZxhphkOzbkGwhXGbEVMiafSfTkGUYQo0tBskWKluEyJaS
spUnbdq0p309Lee8qzVlqd8553e/8/5Rn/vT6Xmf57mv+/pep9eaLXPtGzVo
0OBzwwYNdL+VZ6T+5zv2/c779JlrVqFJauygunqZ6q1I2dvtdo22/rp3Q9jf
Z3fhdFKdk/zf3/ejsuavy2Xa2rljwO+lew5hVtTOjun/ff4o+m5sWxKurXdr
+ps1v+8O74eT6v3++//TeJTSbJubtp5QPOuE12YPzHfbPHbjf+udg7mx01wr
bf3c+qdGQ454grPuH9Hrv/W9kT79wIEvdTIb/zhu58urFzG47IRnfJ3yvsto
PH1uvZe2fmp8mJ/z1AejLbNerKlT3n8N21oZJw3S1pejTQK3Ofhi1IpRw8Uf
yn6uI3a3ifq+ts6v1b3wBiy78R8dfij7uwnXfVfm9dLW3UwL+xoc8MPQtb82
e/td2e8tPGxU2uaItl6yzkK74m2M+vnIhlHflf37I7Bi0s9F32R28YLuuYME
k47Gh74p57kLwcBwZ39tnZv8ZZ7K7x4s5ln1jvmqnO8+Tkx+1XuVtu7aZEGb
oY8eYPOx405fapXzBqCLQ4jJcW29aJxuwYfY6jnTuFutcv5AtLddu/V2jcxm
mB/7dVVFIEZYGXQeXqPcRxDuhE/rEPJFZsIc3YpB+L5+9JoxX5T7eYTfXFQG
j6tldtyx6tud948wOGRNg2HVyn0F44dVjO3NzzIbcsRIe4RguEs9Phh9Vu7v
MSwL9nGHP8ks0Xdq6Mcfj9Eirs78/UflPkMwsyogb5G23qi9rS5NQtFYvpke
9kG531B4GFb37KGtW2bf2Dqx5RMUN38aufu9ct9PYNGo4Yv0dzK7qztuu6dY
/6iq+cB3yv0/xYnprvd3yzKz0S1n9AwW+3i/15LSj2dYvHfs5/bamtNdd/fn
+KX24MVFotKf57DqWX7+kiAz3e2l9n4Bz6s7qvJ4pV8vMMF/zikjbT1o2anI
zwPD8LDS44Qtp/QvDJeOzC87qJFZvHa1n03DoRrz6ESwWulnOK70jDtVUiWz
P8+ILhj9EgbCI3WLKqW/L3Eo5pS3aaXMtJvTHpnhwnyXq3MqlH4zVER4/thS
LrP5Kr9L0SYRaB3045GbSul/BOJtUplvmcxuam8v+0YE3o4Y1jekVNFDBER3
85LoEpl9+pG5S9P/FZ59++lTarGij1fIvpayMrdIZpZ6AbxCenffPkWFil5e
oc2pGygukNm5LroDRSLmfG1wQb6in0i0so3d/zZPZvrtBUYibN7QW0m5ip4i
4fRqbl+WI7OR+icKHsOXfnuQregrCl2ebRxy4a3MXCMStAqKAnt/5/H+LEVv
USiULbzWZcosQ9v9ReOiseZ3qwzLDEV/0ShoWe3QK11mffQLRsM20XHR11RF
j9GY4Z3pm5Iis+0OugbEILPebqpvsqLPGKxt8/OULW9kFvV5oLbDMcixtbk0
LknRayzWJ7SzbZAoM0P9BmNxubn30qh4Rb+xWNy2VfTBOJnpdvc4LhaP1pw/
Mum1oufX+NZk7a3qGJk9uiLfjp3+GqE7r5nci1b0/RpnQvdUL42SWSP9gV9j
6q89B7aIVPQehwftw0IeRchsrl4wcbh+bd/VRUzRfxyaVXhXfA2X2XXdcTPj
cG2e+dELYco8xGNIsduRUS9k9kG33KJ4TKiJUiU+U+YjHhYnDK+sfCqz33Ty
z4/Hspb3guVQZV4ScH5x2ACXEJl56OS7IgHuZbtrmzxW5icBZ92MBrk9klnp
Hl1DEuD1OCa0VZAyT4no9euL68ceysxML/BEmJ8cIjYOUOYrESucpnvuuS+z
A+enaCWTCG+72T7iXWXekjC+fkvT5XdkltZb1+AkNIorSYy7rcxfEr7sz30/
/JbMemnVfEZMwrpdZ5zO31Tm8Q1e7568vPq6zP7SjcfWN0h7Y3xjnq8yn28w
dby99YOrMnulk9/HN2jcaObsxj7KvCZDKG/71O6yzNrrBzIZOT3V+29eVOY3
GV6O7e7J3jLTX19tMl43jB5j7qXMcwo4j0l9nc/LTL89lxRYzA7b/uKsMt8p
iKzc3a/mjMz+T/NUdNn/eJzZaWXeU3Ei8k7g+pMy84+drp3oVHxK9XLzdlfm
PxX3bcJfx7rJbLZ2Gju4psJ9+mKH90cVP0hF/MZ7jl2OyKxmnm7BVNSxj5kW
hxV/SEXX3G2+S11ldu1n3UCkYVz0n+lOBxS/SENwy58dTu+TmZW+wWlo/Shm
jd8/in+kIdniYWSos8ze3dZtMA2efl2PRu9W/CQNgoNVcLKTzLy1u4tISMNC
532WWTsUf0nDQNvGE3K2y2zy6BXakUqHS3KXi9l/KX6TDtg3XZmxRWbqb7oD
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
0fhvm2+YrSGev8Oo5jtr71tr2P8A+5c9bg==
           "]]}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           
           Dashing[{
            Small, Small}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"d=1.4\[Angstrom]\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=50\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.1, 0.8}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"H2sto-6g \\!\\(\\*SuperscriptBox[\\(G\\), \
\\(R\\)]\\)(t,0)\"", TraditionalForm], 
       PlotRange -> {{0, 1.}, {-1.0000000000000113`, 0.5812804802950812}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"RE NEdyson22\"", "\"IM NEdyson22\"", "\"RE ED22\"", "\"IM ED22\""},
         "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8018429548995543`*^9, 3.801843023717614*^9, 3.801843057473448*^9, {
   3.8018432458119707`*^9, 3.801843256342861*^9}, 3.801843325012644*^9, 
   3.801843364289874*^9, {3.801843413309013*^9, 3.801843451064135*^9}, {
   3.801843494820908*^9, 3.801843526956911*^9}, 3.801843594332118*^9, 
   3.801845111524887*^9, 3.802608122898426*^9, 3.80261352890066*^9, 
   3.802618848552252*^9, 3.802618894233144*^9, 3.8027074274549017`*^9, 
   3.802784919421782*^9, 3.802790888673805*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"36d4bd15-f66e-4b63-8bab-d193bc1dadd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<DecompH2Ret\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.eps\>\""}], ",", 
       RowBox[{"GRPlots", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "nao"}], "+", "j"}], "]"}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nao"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "nao"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797607347010544*^9, 3.797607466194126*^9}, {
   3.797607512176837*^9, 3.797607514865728*^9}, {3.7984111845438766`*^9, 
   3.798411207660467*^9}, 3.798419964311166*^9, {3.801343895763775*^9, 
   3.8013439188014183`*^9}, {3.801845110461526*^9, 3.801845116962352*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"99a35514-1ff4-4be9-b489-c10c4973aa3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"DecompH2Ret11.eps\"\>", ",", "\<\"DecompH2Ret12.eps\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DecompH2Ret21.eps\"\>", ",", "\<\"DecompH2Ret22.eps\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.797607436479678*^9, 3.7976074717997503`*^9, 3.797607527101053*^9, 
   3.797607639927979*^9, 3.797607690712029*^9, 3.797610998516843*^9, 
   3.797617992661826*^9, 3.7976317358785467`*^9, 3.797638496268594*^9, 
   3.798411214801408*^9, 3.7984113203414383`*^9, 3.798419937663118*^9, 
   3.798420028711028*^9, 3.79842078491251*^9, {3.801343901940154*^9, 
   3.8013439230247*^9}, 3.8018436082533083`*^9, 3.8018451198213587`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"bfa8d1d8-35e9-4479-b317-59fcba440cb2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectral Function", "Chapter",
 CellChangeTimes->{{3.797526424131311*^9, 
  3.797526427139022*^9}},ExpressionUUID->"ee0de9ce-15c3-45ad-84eb-\
f37421f2c5fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</AU_A.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Param", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ANEdysondata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SuperscriptBox[
          RowBox[{"Param", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "2"]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "1", ",", 
       RowBox[{"Param", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Param", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Quotient", "[", 
          RowBox[{
           RowBox[{"Param", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "-", "1"}], 
        ")"}], 
       RowBox[{"Param", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ANEdysondata", "[", 
         RowBox[{"[", 
          RowBox[{"w", ",", "i"}], "]"}], "]"}], "=", 
        RowBox[{"Read", "[", 
         RowBox[{"ReadFile", ",", "Number"}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        SuperscriptBox[
         RowBox[{"Param", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "2"]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", "1", ",", 
      RowBox[{"Param", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7975306429029284`*^9, 3.797530647223732*^9}, 
   3.797530699782598*^9, {3.797530784707673*^9, 3.797530879873397*^9}, {
   3.797530935072489*^9, 3.797530937904681*^9}, {3.797530975814288*^9, 
   3.7975312356319847`*^9}, 3.797531632397174*^9, 3.797605229971883*^9, {
   3.797611013021596*^9, 3.7976110135305967`*^9}, {3.7976317435067787`*^9, 
   3.797631748370116*^9}, 3.7976383057400007`*^9, {3.798411330975066*^9, 
   3.798411346077284*^9}, 3.798415092484137*^9, {3.7984152429514923`*^9, 
   3.79841524378014*^9}, 3.798415345933057*^9, 3.79841545219066*^9, {
   3.798415558882184*^9, 3.798415559247196*^9}, {3.798416037819333*^9, 
   3.798416041789104*^9}, 3.798416131788209*^9, {3.798416870519437*^9, 
   3.7984168726771603`*^9}, 3.7984169849223127`*^9, 3.798417399583304*^9, {
   3.798417715304822*^9, 3.798417726448999*^9}, {3.798417901069825*^9, 
   3.798417905162149*^9}, 3.7984187637617807`*^9, {3.79841885577459*^9, 
   3.79841885655586*^9}, {3.7984189784537888`*^9, 3.798418983196332*^9}, 
   3.798419323015921*^9, 3.7984194315223913`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"6a0fe541-0a9e-4140-a40c-d97382b0188a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GRf1Dchop", "[", 
    RowBox[{"trel_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"GRf1D", "[", 
       RowBox[{"trel", ",", "i", ",", "j"}], "]"}], "]"}], ",", "0.001"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FTf1Dchop", "[", 
    RowBox[{"tmax_", ",", "w_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "Pi"], 
    RowBox[{"Im", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRf1Dchop", "[", 
         RowBox[{"trel", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "w", " ", "trel"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"trel", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FTf1D", "[", 
    RowBox[{"tmax_", ",", "w_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "Pi"], 
    RowBox[{"Im", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRf1D", "[", 
         RowBox[{"trel", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "w", " ", "trel"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"trel", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lorentz", "[", 
    RowBox[{"x_", ",", "a_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Pi", " ", "\[Gamma]"}]], 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[Gamma]", "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "a"}], ")"}], "2"], "+", 
       SuperscriptBox["\[Gamma]", "2"]}]], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LehmannA", "[", 
   RowBox[{"w_", ",", "i_", ",", "j_", ",", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "Z"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "m", "]"}], "]"}], ".", 
          RowBox[{"cdag", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "m", "]"}], "]"}], ".", 
          RowBox[{"cdag", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ".", 
          RowBox[{"HEigVecs", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            RowBox[{"HEigVals", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], "]"}], "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            RowBox[{"HEigVals", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ")"}], 
        RowBox[{"Lorentz", "[", 
         RowBox[{"w", ",", 
          RowBox[{
           RowBox[{"HEigVals", "[", 
            RowBox[{"[", "m", "]"}], "]"}], "-", 
           RowBox[{"HEigVals", "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ",", "\[Gamma]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "states"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "states"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.797526438355898*^9, 3.797526541170656*^9}, {
   3.797526846964517*^9, 3.797526861024089*^9}, {3.7975270040923557`*^9, 
   3.797527087398444*^9}, {3.797527129162097*^9, 3.797527173663434*^9}, {
   3.7975274956833773`*^9, 3.797527529540677*^9}, {3.797527562613818*^9, 
   3.797527695259603*^9}, {3.797527766617283*^9, 3.7975277730365*^9}, 
   3.797527933070075*^9, 3.797528275964478*^9, {3.7975284261667423`*^9, 
   3.79752842942446*^9}, {3.797528999616037*^9, 3.7975289997320213`*^9}, {
   3.797529350664513*^9, 3.797529362730137*^9}, {3.797529767999569*^9, 
   3.797529821475759*^9}, 3.797530608251451*^9, {3.798412766086872*^9, 
   3.798412787774518*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"275f6d39-05b4-46ed-979d-88750b7e8631"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"w", ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "12.5"}], ",", "12.5", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wftlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"w", ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "4"}], ",", "1", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FTdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "w", "}"}], ",", 
          RowBox[{"FTf1Dchop", "[", 
           RowBox[{"24", ",", "w", ",", "i", ",", "j"}], "]"}]}], "]"}], "/@",
         "wftlist"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lehmanndata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "w", "}"}], ",", 
          RowBox[{"LehmannA", "[", 
           RowBox[{"w", ",", "i", ",", "j", ",", "0.06"}], "]"}]}], "]"}], "/@",
         "wlist"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.797527707053651*^9, 3.797527755724957*^9}, {
   3.7975278114348707`*^9, 3.797527814847682*^9}, {3.79752846286814*^9, 
   3.797528463118896*^9}, 3.797528996882304*^9, {3.7975290449064703`*^9, 
   3.7975290639896097`*^9}, 3.7975291053673973`*^9, {3.7975291471283903`*^9, 
   3.7975292110828114`*^9}, {3.797529339847621*^9, 3.7975293407468233`*^9}, {
   3.797529552293849*^9, 3.797529553622757*^9}, {3.7975296514248657`*^9, 
   3.797529653338708*^9}, 3.797529830094359*^9, {3.797530358679422*^9, 
   3.797530378677272*^9}, {3.797530418938079*^9, 3.797530419481845*^9}, {
   3.797607804478779*^9, 3.797607916060816*^9}, {3.797612345034913*^9, 
   3.797612347882262*^9}, {3.797612452281795*^9, 3.7976124551118937`*^9}, {
   3.797620373198394*^9, 3.797620375404339*^9}, {3.797631858136511*^9, 
   3.797631870004222*^9}, {3.798411647257587*^9, 3.7984116529513187`*^9}, {
   3.798411862500482*^9, 3.7984119639032516`*^9}, {3.798412853732501*^9, 
   3.7984128730878773`*^9}, {3.798413250554571*^9, 3.798413256337208*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"6b81302c-7029-4cd1-a3a6-3d487e9d0083"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Aplots", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Param", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Param", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}], ",", 
             RowBox[{"Param", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"ANEdysondata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}], "*", 
                "sites"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"wftlist", ",", 
           RowBox[{"FTdata", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", ";;"}], "]"}], "]"}]}], 
          "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"wlist", ",", 
           RowBox[{"Lehmanndata", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", ";;"}], "]"}], "]"}]}], 
          "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<t=\>\"", "<>", 
              RowBox[{"ToString", "[", "t", "]"}]}], ",", "13"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<U=\>\"", "<>", 
              RowBox[{"ToString", "[", "U", "]"}]}], ",", "13"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Mu]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Mu]", "]"}]}], ",", "13"}], "]"}], 
           ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Beta]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Beta]", "]"}]}], ",", "13"}], "]"}],
            ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.6"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Epsilon]=\>\"", "<>", 
              RowBox[{"ToString", "[", "\[Epsilon]", "]"}]}], ",", "13"}], 
            "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.5"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<B=\>\"", "<>", 
              RowBox[{"ToString", "[", "B", "]"}]}], ",", "13"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.4"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
      ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A NEDyson \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"\"\<A ED \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\"\<A Lehmann \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], 
          "\"\<\\n(Broadened)\>\""}]}], "}"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "sites"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "sites"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7976101066415787`*^9, 3.797610115106346*^9}, {
  3.797610166260386*^9, 3.7976102556755543`*^9}, {3.797610306560149*^9, 
  3.797610321213231*^9}, {3.79761046425067*^9, 3.797610522544928*^9}, {
  3.797610576158993*^9, 3.797610587371285*^9}, {3.797610619118012*^9, 
  3.797610700584667*^9}, {3.797615006329225*^9, 3.7976150068840923`*^9}, {
  3.7984116595814657`*^9, 3.798411699196083*^9}, {3.798411790871852*^9, 
  3.79841180213888*^9}, {3.798413042212603*^9, 3.798413055605474*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"fb798e6d-9565-44b9-9071-d733f33c0674"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw8nHdcTu8bx9t7793TJisyMs8xixDZlb1CpERGUYpKe++9C+2tzlUiUgiR
VKQohErS7vd8n+c6v/7x6hXHOff7fn+u677P/aRxxNb8OBcHB8dhQQ6O//5k
f82A/VtzG1uL/KlrMveNO8f0YGJIZaF0tA81PMPKv+avHuj9+LlM56EnZbdS
6F1yvx44Pz2w5c0Gd6pve6narR968HLeGeEtt69TJ/77+sr8uZ7f0Pa8C1Tn
1f8uqAeaPWUq9lmHqP+uNqNND8CuSW5UbRPxLvk884p6MGnTb78y5ixh/t/l
mvSgx/Tfwu7JK0Rjw39fejDMt2js/bqbhMl/F6zTA7cCHStROQ/i4d//blAP
Muu2nKgw9yb+u73zlXqgLhgl+rzDj/jvcttLmc9jHyNj3hRAGP73VaAHhX0T
B989CiSYN8e8oB5Er0l4cGlDEDHzvxvM0IOh2cOOyWZBRMp/t5esB2bNyibt
nwIJ9f8uF6cHn/N5zYsmAoioyP++9GDN0OJF17f7E/897dUQPbhkXHfhQ6s3
8d/jWvnrgaNq6vYH2R7Ef7e38o4ePCfEJ9U/3iT+u5zaLeZ4FeiFLZ1xjWDh
cNGD4FneLywLbQkWj6vMf/8+uFzQcRvB4nFRD75qVx0N5zzI5nFeDzz+fsmP
s7/A5nFGD/TzLtXPvYs8TuiBQ/fMY8mB7mweh/XgqAm5/MJGLzYPKz2wU11E
bT/gS7F47NGDgcbTboEWARSLx3Y9WOyUO7chOpBi8disB1zefqFHTgdRLB7G
euC+/eKVJxBEsXisYY6/DEeBa0wQxbq9lXqgtLlizcKpQIp1OSM9uH3r/dfU
bwEUi4ehHqyW3Xdh0zM/isVjrh741F99VPnvDsXiMUMPOgt3PSfsblMsHlp6
sCH+0DrRXa4Ui4eaHly/We4e6OlIsXgo6sGpoVuaAT4nKdbwyehBpMGSvBRe
GTYPcT3oMPmsL/fOms1DSA8+1jG0H6+4zObBqwd7ft5ql69wZfPg0IPLf+4s
Gvx6m81jTBfW7D5R23jDm83jry7E6l7uWnjSn2D7oQtJl1VmhK4OJNh+6IKY
8oTAmYNBBNsPXVja6uDlyRtMsP3QhZwao67j84IJth/M6+fMD077EIR+6ILL
4RsztUWC0A9d+PE2Rb77UQD6oQvJVTonBjT80A9dOFgjuyum3wv90IX9nDMO
P5W6hX7oQtCHxce+mt1AP3SBGLp45HbaBfRDF6xdFS6dad6PfujCVs+T+xa8
3MHmkaELWhlZ3TfW2bF5JOsCn/3MratnObN5xOnCjhc3NwrPcWfziNQFhnry
hdS1XmweIbogLqm6ur7El2L7oQuWnr/Mh4oCKLYfuiCo5/UsWSuIYvuhC4FJ
fy/vUg6m2H7oQkfSrdOnw4LZeXVVF3yqB7jPBwaz8+qiLtjO43c3EglGP3SB
3CA2v0MwCP3QBd5KIcG8gAD0Qxe4LupUq+30RT904d6No/U7az3RD10YDNAf
tfV3Qz90IeHGm1dm96+hH7pwOnpwRTiXLfqhC+eq14YsWGqMfuhCudkZiaTo
o2wea3TB4OrhAutNl9g8VurCUyePXbvVXNk8jHRhZdkeLY7s22wehrogavw4
KTDNm81jri44SnfcEOr3Z+fVDOb/9/yKuX1RIDuvtHRh2wGb/t7pIHZeqelC
wb3M79nPg9l5pagL2RXVoloqIey8ktGF3t6TwPk1GP3QhRnqZ7X3zglGP3Rh
+GrQCr/hQPRDF8y7Z83cuDEA/WB+D1rLLh3yQT90YN26deer7DzQDx3gKege
WP/VFf3QgVlbux5OPnREP3RAftGqQF2DE+iHDsRpiHDM3bgK64cOLFbYYKZa
fhbrhw4k1ERbHnS6xubxTgfUnKSNnpW4sXk06cBkTJnYhKEXm0eDDihHdP1w
EfNj86jTATuO8B1B0oEUa/rV6MCV9YlfNuZhXlXqQOJs8f1ezcHsvCrVga5Z
15o8Loew86pAB3o/rV/+ODSEnVf3dWAJqcs7b3YI+qEDB/dG7lVfFYx+6IDE
16H3+5oC0Q8dOKXXY/S43R/90IFOh13bA9d7ox86cCbj4mj6v1vohw6Mt8zp
2i3ngn7ogObK5Um+/hfQD+Z4DcxqmJGxD/3QAa9wp93LSy2xfujAtg6zqzYa
Dlg/dEDfcSuU27iweZzXgZFyGwZ5+Dabxxkd2OxXsXvisTebxwkd+FwzGqO4
MoCdV4d1QHVQ7XLTnCB2XlnpwFe7kNeZGcHsvNrDHM8WRnhScgg7r7brgLrK
meEx+VB2Xm3WASWuylcHuULZeWWsA2v/Dj3iPhpCsB53jQ7UvbDVT1gZjH7o
wK4HfwUPRgaiHzpgFNX8zYrTH/3QgcFDcfcnOO+gHzpwo3B/+5ud7uiHDvxK
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
l40YyzamoB/D1AyqKa7yegz6MUwlH1pw68J1f/TjL5XfUTSQeu04+vGX4j98
TnQ8zR15/KV0T3ks9/4Zhjz+Ug8SvBSkjtLnF/5S2xe7T219lIY8/lJvjL1X
Lr6cjTyGKCP7sdf+ljnIY4jyvbTE8rZ+HsXmMUQtqDo0em1GPsXmMURJSliU
WyXmY54NUaa/l3oEB+Vjfg1RS7lN27dN5mFeDVGxYx2Lb3zNxbz6Q7mfslmw
/N599OMPtfXF7gyugiz04w+1YvDXNs6JVPTjD8UQqDaVzE5AP/5QAmGPnN2f
0/sZf6gBcuVpiTNu6Mcg1aAuP39l9zHkMUhJcTTWNkb7Io9BSnvdtkOvb0Uh
j0GK43qkpGtJEvIYpPZL6Z+diklHHoOUUYfZ4+wX2chjgLqYyOfzziAHeQxQ
zqMLMlte52JeDVAJISumpgLyMK8GKE1F/rlm9XmYVwPUwz2mxKBzHubVALVH
7EdI671czKt+qmTXGWsH6j7mVT/1OHOrTeXSbPSjn8pK+WLf05WGfvRTbavl
8y3aE9GPfmpJVNbKC6ER6Ec/VfPBaE7ADi/0o58KPb2wzvynIfrwmxLtHOF4
t9STOsQa798UZ+M7gcFVEZQEa3x/U2E7LaXI9kQqlzWev6iIzqe/nimnU4dY
4/eL4tGpC9qan4158ota8GP6y16nHMyPn1RM/876S3PycH7+pDwfzQwoVcrH
+fiTar9318DIOZ96yXrePurBrYb3ytvyKRfW8/VRMw5+V4oOyqMYrOfpo9a1
7uqVMcmlXrLm0w9qPt9Hdan+u5QLe0OUilj5qfGbZQbOlx/U89mSZ/UGk3B+
fKeynpMpErmRmJffqbECo8upnz0xH79Tts4QlOC6h+hnXe4b9Uqkpd19kz8R
wOL7jQpebyzxMCuWIFk8v1Gbh6VyXvumEv2sAe+lkvwzQuc/pnn1UiOVoj8c
UnORTy9Vbn5SXnQ4H3n0UtlHK6SdqULk0UNts4pfGPa7iGDz6KHUEpy+DDsW
E2wePdTDvm1ffbYWE2weXyly4nvY1Fnm32d/4IAqyBdaPNJcgPP3K1XacTTB
wjsP5+sXSu7htZRgg3s4P79QL1b8OrpQIQ3n4xfqGpXYbNcXTbB5dFMfBAQU
Nwy6EWwe3ZRQ8HKpu6duIo9u6u31V8brlGKRRxdFPXf2EAnJQB5dVLhf4JzY
+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
Qupg3pQ6rzjqB9Sdny/icYcdI2g+pUi3/zIbmTlqVbvftohwUa0n/pg1m/gQ
w3NG5aB+J6e069FJjKcyT/3Db5cz/VOwzi1K0csPa9ejlxgf6x89Py6IZfqr
ENsolUWtUDH9VlA8La2ZcFl9tp0PMV5f0xzLT9My/VgQGOQfit2VeradDzFm
e7bcVPdOp/4gMQoNImsaTqST/4nhdcE6c00J7Qfsdcd3raZ52bk04kOMd7v2
pR7um0p8iOHjdTyo53Pqu3UTIzx1Rtmp70nEhxibxhu5cWKpr2qaGGuqFKMH
C6OJDzEeuT07t0QVQnyIUb3mxZWr13yJDzG8Z/2oncUB8SGG3OJBalnZAqbf
DHe/H0/OLQ1i+s9gFXO3rrNfJNOPhl4G/9buqY6j9U93fJyqkiWLEpl+NfT+
3XWOTYSm3a+SxHg5M62O/1XL9LNhSOCaJ+LLqbQ+inE29YrxnufkV3liPKvO
SbyGdOoXEkNp1Po15Gka8SHGea2AHVGdSnyI8d/cRw2RH7TEhxinNHoDTq7R
EB9i3MyuMjzvlUh8iNH05Cqr5VIc8SHG81+BS4eoI4kP3fHuZW2yehhEfOi+
TzdWgjV7IfEhxlHWL/1jL+3a9bgmxtIJLTtf+Psw/XqQL8niry4NpnwkBgeh
ApMu65h+PnwL8rw8+UF8ux7PxLgw2dCYPzyJ6ffDrtFCeW7PZKb/Dxl/WiVr
XVKYfkCYnmlR7K1NpfmUuvPTM7F11aa0dr9qEePSidXlfx1Oo/Vcgv6Douwn
90wjPiTYdfzumJMHU4gPCUThTd+GlScTHxLYHdtetvxXEvEhwdxJ/M09zyUQ
HxKEGy3VbxTGEB8SxFY9Gmr4I5T4kEDYmqYemLKc+JBgT0CXS82tU4kPCf6d
wCvIi5xB64cEH92HLpp8cAXT74j5rYEL/YPDmP5H2GvKx3ePiGH6IWHcaMr/
9HcC0x+J5Z9f2xn+TGr3q4kSjJm5bGrX5GSmfxIV6n8HxYWmtPvVHAky8HAI
+1gq5T0J1KH1Rs2j0tr9yluC1/cyRvzdi+lPlmDlNv//pvWh56lWSPDj+vte
Odla4kOCeS7f8qfOoD75UAkO3uuTEB+dSHxI0PNIL4dmCfVBxknwaivv78wj
UcSHBE9/lCZ9CF1DfEiQlhdgPVe9hPiQoM30z8q01L7Eh+7z7EyjFrtFTH8o
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
qc7Xi6OIDyus6saxnz0/xOn/ABKVZ7w=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw11AtMU2cUAOC2UN7QKULYkmWIMlJxynOTEPbjfDAHDhgIC9uQlPHcQ9wK
LghOWCbJAANSBMtQzEQodiIUCs7H+YFRULop4hgVmDyKFHmsCBQQ0I3e05M0
N8295zuP/+ZuFhz5KI7DYrHi/v+tX5l4hcLl3BW/CwoiPrcePBpg933aoPM9
4qkPHjVKSZJEpZ6CP5TrYUPziq8GLgQ+gHh92NDfP+U+9OZ1AePZ0GlexEZL
t3b0rGmASlzzQXAfeta0uNIrONr3BmE8KzoT8VZ/qe5v9KwoWz07kLPYj54V
9d55zrG77yZ6lrRyPHVhJHAMPUsa4qNrNlM/Qs+C9h/nw1TpCHoWdIOiPvqx
/Rx6FrTJPHxjlHsHMJ45DT4qWtHtNPJnPHMaU+3Vwm209Wc8M/qeMKDwXSt7
f8Yzo5Hp25PK06z9Gc+MtmVn+kxXPcX+TKkwyW7HmEgLjGdKHxQLV01qtKDn
lCZUnCQtc3apIIxnQqllKvcv7ThhPBNal3E0bU/YIHpcmmq7dzkv6AF6XHrT
5+wVzpYR9Iyp+9lV/pX8VpzXmPa8WqCID1WhZ0wFWcNrW8MeoWdEG049/lDo
IkPPiGo9WxyCxIPocejt7sbjB9e60eNQld+d7trUh+hxaNH+5h+dvSbQY1N2
qGylWqTB82BTpbmrcnhYRRiPRQdeDvV+ktCI87Lorgs20t3ffYkei+5tn3YU
mEuIhz7/JRw72MW+12jYzwuozOsc4bv9iue1Bh5Vn1VVdsmx31VQ/yYK2Zyf
jOe7Cm7viLNCTa+jtwKnJlfIi1uG+s9hzXRLkWC0DEr13jJYuGsEeZnX0VsC
x8QdfRO8KvSWIDog6lih6Bp6i3DFuly8rbMJPR30hr/21Xa3DMJ4C+DELYhX
aBrRmwf+1gbH4h/q0ZuHkH/HDqWKfkZvDjy+GQs6LTd4z+DqntZEF68q9GZh
sYNHZMlS9LRwuL7I0UIrR08LmvSgcslwIXyuz5+BfXdT7smFMtz/FJyR2xW5
PGsgbvp6k5B/q8TBPTIL55+A80vjNXJOM3oaqNUkK6MOytB7AgV2T5ePF19E
Tw0rXw/Ixq/dRm8UjinfHhxQy7DfYfg2wmea22yYdwhCTlQLSiw7oVOfPwBz
Je22cXE3sL4KPh5ceG5x6C6J0dfrBXZsacjuzFH0e8AuadM/Oukkvi/3wcnX
9eSBjglSoM+/AxvYmyIvVw7i823QFRZ7el5aQ07q71+HqUtz7aVpncD8l8CR
xIvpQ6YdYPgCptSGy4J5hYb7pGTbk8M9sZRQJp+IOfZv5inaCfOBaCMOdfwT
NzPaSAVTn8iaL/m37Ggz9EekYSmu+0LbDf2T9J6f8s7OtpAUZj7S5rtToNxc
ifkqEshPFuaE1sF9Zj/EryY3pu58k2F/5HU7FtehoRD3NUyEBa3znqfryC5m
/8QnIUFXqqojTL6aSOZLrHLisyGROT8yMx2j+DPScB4a4prtl2D/SxUw9SdI
mXe+zr28Ar1JkvuGe8iZJIM3RSqKJLPvV4sI482Qi4cOVDh9ITG8f6Q7XNWy
RKXwH+QoC/s=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
nNWsj4plAwNqXujVrJ+KnpbjvcrlatZXxQyrjA/X+cTjqhrPlHdFVy3VrM+K
E0WOu66bEY9yNZyc81fd+61ifVcs6b3kwfMvKvJDDfMLl+K+/KtifVi8P7Ep
yrJGxfqxWNnIeafDYxXryyL25wH7nuUq1p/FjNX9388oU5Efath4jvyaXaJi
/VrsPW/lc7dQRX5ocHzdvtxWJ1Ssf4sBsUm9Qg+pyA8NMmY/VS7NUbF+Lpq6
aoW3slSsrwveuF1u8gwV+aHBXVyOmpKuYn1eJGq+niheoiI/TM/Py5CpklWs
7wvHy5pVSbNV5IcGWbGteDWxKtYHxuSqsg3hE1WsH2z6+eGtqihSxfrC2Djm
fY7XEBXrD6N39Ej7g31V5Ifpepve2OLUQ8X6xXh87Fazwx1V5IcGH/nNIvyC
Vax/jAE5TdMvehOPkRqEPZlxYICLivWTsVzWLPctp2J9ZfTdNiR5qVLF+sv4
9293V0eRivWZUXkx6NBNa+IxW4M+0oDfCS1VrO+Mjbw6O4emxGOhBvM+8T9W
/VSyPjSelixKX/9JSX5o4NvZor5vvZL1pWF8GNdY8FLJ+tNwXJNzubJKSX5o
4KGN67CnXMn61RhacWlC/A0l+aHB6VUpfj0vKVn/GsoLq/dx55Xkh4nnmJrC
5gVK1s9G9sdpU17lKVlfG+lj3I+X7VOy/ja+2itXF+xUsj43hihC/uRuUZIf
GqxIW/s1a72S9b2Rq3WOy1ypJD80MNQLEjcsUbI+OGy6j22yMVlJfmgg+uba
LDtByfriuPFp9dz905WsP466ZQejz0QrWZ8cqd1zrt0cq2T9ckz7uSvzzXAl
+WG6P9dX3GgxUMn65/jQc/Ik+95K8kOLZ7M3jw/rpmT9dORlbL0Q34F4tNFi
QeiR+JwgJeuv40w7wcKH3krWZ8fG3rbPea7EQ65Fcb+PK3raK1nfHVXuTf5O
UxMPgxZt764quSVRsj48NnI/u0rsiIeHFjmWay2jLJWsL49Go89anmyhZP15
nHlX0dmysZL16fH2xppJZZ8UrF+PZyXf9qXWKMgPLbgTJ0J7PlCQH1pkhR4P
EF9TkB9amN2oSvi3UEF+mM4HqqZXjijIDy3u2MddPrhTQX5o8Wfni8ubNijI
D9P19J3SkL5UQX5osT7MMHjFXAX5oUWMkqtcE6MgP0zXdzx1TvZoBfmhxYbI
ePcTEQryQ4sDF5Tf7nZVkB9a+F3Mv/gzSEF+aJG7evp6ezcF+aFFxoqsyOFa
BfmhhWvXFO1mgYL80KJxXMztZy0V5IcWZ1+dG+/6W05+aPEr8daThe/l5IcW
WnVr9+cv5OSHFiGFVf27VMjJDy1svE93yb8iJz9MX99X1dhYKCc/TNdbtjJ+
1xE5+aHFFY81ucZdcvJDi/svClYey5CTH1pUWm5Vd10uJz+0uLf14aDq+XLy
Q4uiYL7H39Pl5Ifp69v92OEeJSc/tPDP9dv7YrCc/NBCzF8euCVMTn6YeJ/I
6ze8vZz80MKz/7S3nI+c/NCin++Gpt+McvJDh2D956Vlcjn5oUPykMjkAzw5
+aGD3cLzT9aYyckPHSoPfMtK/iEjP3S40vHD6Vn/ysgPHXJaZjtPfyYjP3RQ
WzR+N+uejPzQoSjD8mfyZRn5oYN5pxuha8/KyA8dNt0Jv3fgiIz80KGLz87M
sl0y8kOHUQufrfyaKSM/dHj6kcvTr5CRHzrcupbxc8gCGfmhw6pJo0ZnzpKR
Hzr4uB6pqZooIz90kMYVzjOOkJEfOmg3XtQn9pWRHzokPPmr/F4XGfmhw5dZ
N1N9gmTkhw53YicGbnWTkR864LTDy9Z6GfmhgytvUvICsYz80OFVw1KLRm1k
5IcOP6++S1jQVEZ+6PB5SfPrrb9JyQ8Tn8/+v7bUSckPHXhzWzT2eSolP3SI
CKi5d/eulPzQ4eiLwXEJl6Xkhw5zr9Q95gql5IcOVbf15g/zpOSHDrejN9Wu
yZGSHzrEpFWn9NssJT90+JGz9bp0lZT80IGfE/3Pm0VS8kMHp5qvQwsTpOSH
Disd6jZkTpWSHzq829wwec4YKflh4vvPiwejB0nJDx0s4oaX9wmTkh+m83vp
Ojy0g5T8ML1+siq6o5+U/NAhusmfn52dpeSHDtsGbjIL10jJD9PzD91cPEIo
JT90OD50zuyZraXkh4nfs7n3VzWRkh86tH1+bmv+Vwn5ocNkuUtpVZ2E/NAj
ZUJBD8tnEvJDjwX7hzh0KJeQH3r0KbccMv+qhPzQY+nDWw/OF0nIDz3icw9k
WxyXkB961LnsPzBon4T80GNw+6rvB7dJyA89TuX2n2exXkJ+6HHQ1tU/epmE
/NBj3V9LdHeTJOSHHsvfpgS2nyUhP/Qo+NNt9vFJEvLD9PptLR64jZKQH3pY
p3zqfyRCQn7o0XpQcJ1vDwn5oUc0T7u2uJ2E/NAjJq+6+wBfCfmhR/mnEsv3
ThLyw/T+/W3vrdBIyA89ri8XbvEUScgPPT5lcKMeW0rIDz3W7tggW9lMQn7o
EbCk5EqnH2LyQ49VebZRTd+JyQ/T9Ymr64urxeSHHjN9swekPRSTH3oktjy1
fchNMflhOm+zrZddS8Tkhx61gtLSlmfE5IcekZmHMt4cEZMfelj2rfC9kSMm
P/TImPrPtoItYvJDj6qEH2X71ojJDz1uD2lZuD1VTH7oEd4rZULWfDH5oceb
5w3XsmeKyQ89Xr+zqt47SUx+6OGwfnDuiVFi8kMPle986dUBYvJDjxMxOs/q
nmLyQ48Zoi/1TTuKyQ89Zvts62gIEJMfpvff+IF3bzcx+aHHn7sRZ5I4Mflh
4uNz784xmZj8ML2fi7bx723E5IceMpTvdGspJj/0aDy9uv+sRsTjsx6NOlj8
ff6LiPzQI26z0MumXkR+cHgy/enA8c9F5AcHq6KgDxfui8gPDkdm/vVDd0NE
fnCIWaCNXnZRRH5w+PtSbOdvp0XkB4cv4kcp4/NE9Pt5DgKv7qone0TkB4fm
p48Ih2SJyA8OTbybjqtcJyI/ONi28DIfvVxEfnCYNan9t7cLROQHB7c4J4+k
2SLyg8OGVl+OCmJE5Ifp9Sq2x+eNE5EfHDr0apvYd5iI/DBd/4FHBT/6isgP
DvFvFrvt6iYiPzhcOjbgQf92IvKDg3RO1JFWfiLyg4O23538EhcR+cGhX8sz
TxbrReQHh22tO7v0kInIDw69Z2ZuFtiKyA8Oxb+ecTUticdsDhO+hF0uaEw8
5nOIC7dNWvtNSH5weL5ybJfpb4XkB4fupfOlA14KyQ8OFeuzvqNSSH5wgKHF
I+c7QvKDw0H990LVFeF/PLZwuH3u7DbReSH5weFZ1vZE/kkh+cFh5esvYcJD
QvKDg7u7hZ1it5D84HAu2fuScYuQ/OBg1utWVMBaIfnBYfusgHe9lgnJD9P1
Bt4aPHGBkPzgUNn2x+7U2ULyg0PaEvHNAzFC8oODz+TNt8ujhOQHh+FZ73Kb
jxCSHxxy1Qv7+0YIyQ8OHzuWlU3pKSQ/TI/v7GS7r6OQ/OAg0o5V1gcKyQ8O
h17mvnP3FJIfHCJ7ZyQlOgjJDw6NzPPKrqqF5IcBa5/ML1eKiUdzAwpfL18b
b008WhrgOSrKrNyceLQxwPLYNr1fI+Jha8CQhOsftn4VkB8GzJu8aJzFWwH5
YcCpyaOTEl4KyA8DDsw2C3pXKSA/DLi8r/X68XcF5IcB333ky2quCsgPA6xG
PxZOuCAgPwyYnPrT732BgPwwYANPWTcnT0B+GHBtcoND61wB+WHAZmHnL9uy
BeSHAbuX53UOyBSQHwa4dv8lvZ8uID8MKC2rjE1YIiA/DOClCTqpkwTkhwGj
P05cfS1OQH6Yzm94VkTiVAH5YcAedeIKtygB+WFAdvw1nzfDBeSHAYFLh/fY
HSEgPwwoGt3sWlSYgPww4OaXFXnOnQXkhwFevPsN34IF5Mf/nn8yp8RbQH4Y
IJ/Z+nCms4D8MPHbcdQmVk88MgzYr06/1kNOPLaY+HxY/NCJTzy2GxD6Yr4/
z5J45BgQu2pszY/mxOOA6TyH6R/XNPDJDwPGTjkkv/+ZT34YsC/3a/b1ej75
YQBOvo8qreaTHwbov6+LvljJJz8M2J7ybH/pXT75YXo94y192TU++WHAkolj
794v5pMfBmyNyz726gyf/DDgvvOykp/5fPLDdD/aOTa3OcAnPwx4M2D5JOdd
fPLDgIYrZ3702MInPwz4+OTavph1fPLDdP05N+ZlpPHJD9P9VfZwavEiPvlh
D1lmi8TPc/kh/wcAycS9
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-1.1930841159013463`, 5.51195742605802}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 11\"", "\"A ED 11\"", 
         RowBox[{"\"A Lehmann 11\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
n13UmSJz03cXWzAvuyjlfzoyBqrvMR+7qNdOZf/CDr0nGDy+UjVLh0RvDNFe
T+fxlXJb6m65f7iZYPD4SnW+OPL6+L53BINHJ6XR3nWniesN+tNJld2reSu5
pAl96aRY/9bvKmWpRz86qWMLz+tEq1ahD1+oXzGXQoZc4wigj/dnapucUaKd
fiGlRB/fz5Sd4s5n3rF1lAl9PD9RJyoTY3YqvaaAPn4d1Kbbwvn1Le8pxnh1
UGWrT4imtH7Cev1ITdbqbJoJ6ML6bKfqu8Ksnul8x3pspz59J7+JdP+k0unX
20aRtf7xRwP7KRb6gvYHKkXr+Db2G0MUSb+eD9Qxncdf9mwdodLp9dRKzfAv
U7T7NkqxMB4IUAd/Vt9KshjHenlPfVhhsWfXkwmsjxaq0OfrYWfWPzh/t1As
Nq+LswWnKAb/Zqr/t+DoMK1P6KQf7h3VNfI6bkHsNKVE5/uOKi913tRC61s8
6TzfUmksZVk7t/+lOun83lDxAj4Td/b8RX/eUAcDpO/1yf5FX15TNbmm+S1F
0+jHa8r65yYTVpFpijH+L6kr20ZzXunSzoc+3i+orafe9p1e/4ci6ePbRP3r
EJlxo83TQB/PZxS/be9ETMk45Ukfv6dUmaubZfqaMRyvJ1SB9wtd7rQRHJ9G
inPuq3/EwBCORz1Vp1d8PPLoAF7/Y+oZMd4K1b8okn69dZSORteXJZI/KBb6
A4oaijS2ZNez6aY86dcDVEuLZB9/6RfKk37+j6grxs4iqyo/UCz0862mVs8V
HK7keIvnV0WpyK2dIk804vlUUD51Y+erxSrw/UsptY+fTwfFXsX3K6buWvZk
F4iVECz0BxoFlPTCOsnqZFre04+XS614IeAeOPaEYKH/fRaNw9CZAO5XBAv9
fFIp/bPt+z/1vsHfR1Mf0prWW9x5h//3pVqr970bft6MfrCwfNuueCzzUAvz
90TUiQ5b7p3M/0cTWxdlGDVX0V5PL6BUgl+Yas8upB1Pgv7+hI5TH1vFurcE
C/0DG7nEw6rF/v4Wr5nnTzSd4t4nGdVE4PURAT3Gane/NmL+lBKLlKckXT/V
Ejg+BMvcj38sBx8QOH5Eotb9Gy3PiwgcXyJj+lJpcmYCHv8RcfS98HLyXQgF
DD7EkpODE9kCd5j8iPUe7uYKeWVMvsQ85xWfWk8+ZPInJFqSul1mapj1QYxm
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
ESLSwkDvxukU1g8KDy+n8opmJesPhcXrM9HKgwriQ4hxgss7JnxIZv2juLs8
zqP9SDzxIYSjhm25fWUU6y/FPM24tBOTw4kPIVR/aUc82OXP+k/xdWlWpXfs
PNaPCj2d6hZ7R0uaH0LELXtU2vjFk+aHEE9Wr9/zQBDcqUeNENzDtVusZkZQ
v54Qh0tWvDjT4RedfHS8f3rDPx/RT6R+PiEGvH1oMTVS3ulXz4TQWC4rdvmi
YP2wWH9k1kJlu5L1xyK87v3zOWmsf7nj/d2WNHVlYQrrn0VCo5nJfT7lwzYh
xue6zTg6Qsn6a/GgfKyT7zU58SHCOt3f8TnvE1n/LX4cs+3xnyqW+BAh7evM
lxaxq1h/LrRyH4XdqVvO+nUxKDe855y2xcSHCFfizGY4VU5n/bwoctW+3uep
Pc0PEfbfmnIm7KMvzQ8RuleLloi2r6B8JcKwhpWnf1etonwlgs+1W4GyQ7GU
r0SwGaTcNO1DIuUrESbMfW+dVCqnfCVCxX8v7yq6KSlfiaDfsnaT+yMl6y/G
hNaKjResUihfiWC89tvD1ZwU1n+MBKHifF28kvgQYUvmuKg7/v+/PxmHApyD
dl5MZv3K2CVXj/31Kp71L+Ot0u+7xaJo1s+Mu7N5W13GrCQ+RDA4OnREyPhA
1u+MHQead9g/XER8iBBroJn8rFLM+qExd63ONu9DrjQ/RKhxXbW58qA/5SsR
jC5Exlu3hFG+EmHyw8RHAmEU5SsRhoTvM+x7No7ylQh3DEcFTdiZRPlKhJ1+
P+unPpdTvhLBO6LHsPZu9H2pUhHMpsw1LDmoZP3Z4P3YVdfnsZL1ayP8QtQT
u0Il69+GxcOxryJrFayfG3N75s+oXScnPkTg2OS9+fk6kfV7QzHo06pbT2OJ
DxFOvt9+5opFJOsHR+BgD7WiJZT4ECFzcilnwNmlrF8cv9VpOvu7zmX942hY
UvRPr/ixND86ru/PV5YOX+1J86Pj+qwPXLtubBDlKxEaxYGc1viVlK/EsMlo
r2/yiaZ8JcbssjP+TfviKV+JsWHrHe9pE5MpX4mRM7VMotFNwfrXYWriuRUt
CtbPDs/4PUEPVrLzhxglnKEj70QrWb87FuYIftv1UBIfYoSYNhj7GytYPzy0
akbu3JuaTHyIcTGnd5lJ7wTWL49/+5TctH8QTXyIMf5hc8PLvhGsnx7K5T9O
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
46Q9
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw10wswnFcUAOC1sd6spiFerdLQpNIM2oZEuWI6GpUm0WqZoiQNFSIejRmS
eDRFMIhITaikJVGJhm1Q1iOci9qx8drYxluihDBeYT0bsq39z56Zf/75597z
3XvOvb/JydDP/dksFsv//2frzYQ2zY7WfEO8+Rv5OXcruHQseohqhdaS92XB
pTFOWXorujdJR/tWaFFH1zoft/pqCJCFFv1s4rQeb6MWGE+LZpssjbz+JB89
TarY33h5wLgZPU3a5331isa+CvQ06JWdLu5H/wL0NKiD3gODb4+2oqdBLbLb
dVcy49FTp75GkUofBIjQU6eb0oc3NFKE6KnRIuNLfgXdQvTUqL6R0ScRkU/R
U6NnFr9aMlOrB8ZTpcp3FJtLhXPoqdJjNuIZpUiWI+OpUJ3qbn7Cr2xHxlOh
volXBRv31gjjqdD0D/knMsbFuD9l+kuJcXXS/ifAeMq0aTBrxC5gEGRcuxK1
X95o3iHiEcZTouet3lWWTjxGT4mWXubnHDBrQY9DeSrnYr6YakGPQ++aFhb4
rnahp0itqoM7vdIzsV5FuhD+iNP1fRt6itRoIivnrLbc20ZVdcZTAw346G2j
rZYf5Tce70SPTa+bskLGM/nosWmjOK7SL0jusam10WKbecwAegq0eNjktdKB
PuyfAk10jhps4nUSxmNRmyEj1xKvBqyXRcM+tR2OXyhFj0XzHEq6FexCiLUs
XwqaeTY/SSN4uP4reK4v1k5jl+N5bcLdG3+6qs8fQH8DDgsHUidmK9DbgFjb
4rpUzn30XoLA1EwgbSlA71+wSJHsXn/MhxyZtw7R1f7Ouq35WP8a7Nq9Pd1M
T+6tgRBcgvZLqtBbBYO2Oc/ivWnorUDIoGCgjluH3jJYrEzO6C/+gd4ScN8s
IwrhZegtQR3f5uAsqwE9CZx206rbbpWM/VkEj5fBX0NWA3oLoJPgGe4zVIPe
CzCs/DHFK1HevxfQdMJ5JkvSTE7J8ueg9qDTmMTvd+zPDDxaVLGv7moES9l6
02BStdLjbd6C/hTMx+XufSi4hd4k2JdeemdovB29CTh5p8POepWi9wzcSzMP
nS8SoDcGG5yCKifbv9H7B3wujRmaT+fi/zYC1wwzylfLBkmrLH8I3A/fF57b
M0SY+f2wIkrJecXtAT/Zej1glsRxfZ67hr4YbhkGevi6sCnjiaBvl/7ZZEsW
zZTlC+HBcYXVC9/N4/xm+AE8vMt590i8bLwGPL32HSkOHcbvYvgYrhXcfksk
v3+sWctAiNOtBRwnXiNRIvFcB1Amn2QcMfcfGxWAI+MT7aauYDcqgHxmfXIx
MLbG/qYY6xURyfrS7dGRPvn+SayuIKnoPRGEMfWRixF5Cus7cgmT308skrt7
7QpaiYjpDylZVjl0rLce9zdCXDMtpad6y+X9JcEuDsZdE01gy/SfpIQOvu1u
UAhM/jMy2pLULuLXkEDm/EjlU73AtKha+fmSaQ9uWerOLNz/FLk+GabZU1GL
3jT58pugBLXCEvRmSE2M057YhBL05ggd9YyT9lbJ7x85Iwm4wOMkkf8ARHsR
kA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PfqpdlNBZwkj/vPBfipxNDbdPtkOPf5R7WkWuserDNHjHyX+SXlLzvR/zjyP
f9Rfz427t+9gUzyPf1SsUG3az6fWFM/jH7W8bl7g0bsExfP4R02/JkXd8HWl
eB5/qQiN9RabyjwpnsdfqqdVpCNF2I/iefylBGZ369ScD6B4Hn+phCXmK6WD
giiex1+qKb1n3bqhYIrn8Zc6veyjwOCpuRTP4w91JXmPXYpHGMXz+ENtX/Xm
0Mff8ymexx8qMbqE3OMbSfE8/lBC18QWppyJongef6i7P5SGSgQWUDyPP1Rb
0der6eELKZ5HH6UwO+PR6roYiufRRykGbl/XzYyleB59lFCSVqjPjsUUz6OP
+pnzW1zqTxzF8+ijnq/qWn5g4VKK59FHLXv5YIb/i2V4v72PKo3anVAzO4Hi
efRSN0+HmzOXJlI8j16q6V2Pl7n5corn0UuZ31oqdPffcvTopeIUGFe5t5LQ
o5ey9XH8u//ACvTopQpelZx1j1mJHr8pS/PQyAPOq9DjN9V2fPfWGs3V6PGb
evp622mp0dXo8ZtS/xhY0/5xDXr8pr4/erki6XEyevymZiUwd1o0rEWPX9Tx
z6OKSTfWoccvauol8kPWzRT0+EV9NC/5NnZ/PXr8olZfvXpB58UG9PhFeayS
Korq3Ygev6gfEawuJj0VPX5SNizno4zcVPT4SW2Qcqz4abcZPX5SHeYf8zue
bUaPn9QsDcqLuz4NPX5S3/xaFhnpb0GPn1RmceBXu6db0OMn1R0xN+XC7nSc
/x/U0ZaInz0eW6mIifn+QZHbHZ/Nk8mg5Cbm9wdFxVVKxz/PoMom5vM7xU5L
iz16YRsVMTF/3ylpw7lL5u3ajvP1ndqZ76k0ffkOnJ9vlHlmXu37iJ04H98o
S105hRdzd+H4v1G/lUyNn87fTT2cGG8PtbCjqmZv4h4qdWJ8PVSDcsHC5j17
KcbEeHooKMsjl1zdRz2cWE/d1I8kzeslyfupVN4DA0qA3nb8plYmrpduir3h
URv9Xiauj69UvekCW/WNB3A9fKXu3G6QP+B0EP2/UuVd5FUDkSzq58TmvlBl
R66bnmrPovZP+H6hko5vkn905RBFTnh+oZq/7KkrKjhM/ZyY8C6q8pB9IzPn
CHp1UdYL21vnnz6KPl3ULq5UUfb1Y+jRRdEKD9Mmfc5Gj8/Ui66fVYfZJ9Dj
M9X1/ebhzStz0OMzdXubqmDDi5Po8YlyXbrO9tqkPPT4RCk/k1n3fTAPPT5R
AWZAb3h6Cj0+Us99noheuZmPHh8p29p1P8KhAD0+UvqKYrezWgvR4wM1N31s
4dL+0+jxgUrPmLfbxfYMenygxmT+HL+1vxg93lOSIwYPhcTPosd76lxWnX1G
3jn0eE+VpIQ6zQ4/jx7vKDGh+fN13S6ixzuKcuLC6Qtl6PGOytd7/kaxrRw9
OqlGpZRf4hqX0KOTEpn9x7J982X06KSWezHkTshXocdbSnX74VORLVfQ4y1V
Jj7Jd/7NavR4S0kmFj2x772GHm+pPekuv0KX1uH8v6F2z/xtY5UDFEzM92vq
lWHv6HybmxRtYn5fU97/wlZzJW9TERPz+Yq6ccuk3ZpbT8HE/L2kcl2cL4sd
u4vz9ZIqKGvqr0tqxPl5QZlu7/ih2/gA5+M5td7a6dOK+a04/udUVoqzr0P1
YypvYrwd1Cavi/IfdjylaBMPfNqp2TuiRRd876DIifG0UzXJl5aV0F9TeRPr
6RmVrXJXWmRrJ0XjPTCjop70WXze+wHXy1OquDJtS5FjF66PNmqB3PGBpBM9
uB7aKFkvE1+q7Sf6P6EGnwsf+HW0l3o7sbnHFJOe80hh1l+KMeH7mHK3evnE
7FA/lTrh+Yi6dWFQ6kHbAPV2wq+V+pD9t1KlZgC9Wqnrx74J3fbsR5+HlLpH
jY3Zjz/o8ZCK3nBVTca0F+f/ARVyNPtbZdL4/kzMdzNl8sc6Nry3m6JNzG8T
tcGhTVri0mcKJubzPtV+e8k1E70PVOrE/N2jDLMafM7adOJ83aVSWemZ9JxX
OD8NlJ5CwKXe4g6cjzvU9UNxr7vH54k3/tuU47TzIw6XH1PkxHhvUU9/7hoV
XNVK0SYeUNygvDy+BITot1CpE+MBarP+O5/9g+PeE/tfRwVOdcs3m3kP97eW
mlSdMrxesAH3r5qac2X1BVL2Du7PFUpd+9OHe9G38P0vUwm3g6VM/9zA9yun
+lRTSiprgKJNPPC7QJ2ete5i+1yKok1sr4QKOmP39si+6xRt4u8LqdrRdfkD
9FqKxvsfeKhOdeMK7/oa/H0Wdasp5X5ubTW+Tqckj96K3fX1KnrQaH6K9Kts
n6v83xM2kZ+3fv90hf/3hFzepk2/K8dfTyygk0RuUI/n8+vjr5Un3p+Y7k1F
mQmN//3EA6QSotc9qrFs91X+/hM+TteW3I+u5o+PeFzkKmZxqIY/fsKV+2xq
vkUtf36IiIfM8zU+dfz5IyqE7i3u2AL8+SVChdvX3HG+iduvI3LIqhP3425T
wPMh0gaOrdbQaOD7EZ+9nFYOBt/n+xKiCQG9dzUf8P0JyRdO1C/1Vv76IFRc
loqMqDzmrx8i61p/s3/JE/76Ily2nQlsjmujgLf+iLGXdkSxdhtFm3hgfJ9Y
nWJ6bsqT8fXEW79EPSx9uPVDK399E/vPz4qhx7Xw1z8hfcxcNFO/kd8HcebR
0TfD/g38foiim/KhZ8Rv8/siwOHBmmF3/nppJaxdX162oNVRebw+iRmfLqoa
OtbgeB8TB8u/7hnWvMLvmxjyG4z/kXaZ3z+RPnfjwT9BFfzjA5Fb4HrdOLWM
f/wgfs/bvnek8zz/+EI8fxFQcdrmHP/4Q3iVL/2690sxBbzjE5FyIFBkytci
KoJ3/CJeSnn4bTM+zT++EavtRexf5Rfwj39EyKpXjyrd8/nHR2JlyOdChuIp
/vGTCF+zpP/NaC7/+Eq8lY9b+E32JP/4S6iFz95b4n+Cess7PhMxZTbpJ69n
43y/Ihxrtm+K9DlGMXjHdyLeOMIpcuwI//hPrGwfOFzXdJj/+UBY3czUmnTp
EP/zg/BOPvew42IW//OFeMGd+XA2HOR//hBndV427nx3AMf3ljh0KXx3gdIB
yo/3+UWcoH/4SA/KxPF2Et6VY8fD8vfzP/+IoJ3UhYa/+/ifj0TGi1mgXLeX
//lJ7FNi3qCO7uF/vhKtWfmjKlt38z9/Cfo/+eATm3fxP5+J5H0L/wzs3one
74lvZWvGRk7voMx5n+/EUYk06cON2/mf/0RbSYlH4/A2/vkBIec9X4uy28Y/
fyAqUs19izdm8M8vCB3h/QcfNm/ln38QXnnu4Qf0tvLPT4i4Oc/pwVvTqUTe
+QuRm2bvdKhnC873J+Jh+ZflLXO38M9/iGNFjPsHWtL450dE8ofMr6s80/jn
T8Sll0fpao2b+edXxJt8Zw2G/2b++RfxudNV0OllKv/8jIjy7B/QXZqKHl1E
798vP7bSUtHjC1FSlC0613ITenwhlsXuV61YspF/fkhkLxebV1i6gX/+SPx+
/PLv3b71/PNL4mRktS01bT3//JM473FjzORYCv/8lAgyL59c17eOf/5KPI4q
cefMXoce3cSGIEa18vW16NFDWPkWXfM2XMs/PyaqjX1ad2Un88+ficANl9Yc
lEvmn18Tfk8qnxvvWsM//yauBmrt1aWv4Z+fEz92LPV22rOaf/5O2M2YdSNA
aTV6fCfuBKt52uSuQo/vxFDjjge1k1bxrw8Ik+Py++qolfzrB0J7QfywctBK
/vUFESjSmJn7bQX/+oNQNXhdbr9jBf/6hHjt3Jhxm7uCf/1CTHqV/oF5LwnH
95NIe7l60uRlSVQx7/qHUDkw3f69YhKO9ycxa/PSKQrXl/Ovn4hX+89cKYld
zr++Iq6/fDXngMpy/vUXIde1919lfSL/+oxQs9y7ciw5kX/9RuRq91+eOymR
f31HaCzZpbW4IQG9fxGvoh4m/bFNoNR414cEPf7CLtvSeP71I/Fn+YiGDCee
f31J7JX7GzAndxn/+pO4F6vfMqi9jH99SuxcUZ/alruUf/1KGKb4n2jmLOVf
3xIflnltv1u6hLLjXf8SU5+xmkttl+B89xI3uaKiUXfi+NfPxKaTtY8eBsXx
r6+J4Aqf+++6FvOvv4kOuy3xaRsX86/PiV3NmozjKov51+/ECdZtRfXyWP71
PSH784z7F+9Y9Ogj1hoXrh3oWYQefcQmBQkdu72L0KOPoIW9n51lsYh/f4F4
W3Kre+RpDP/+A7Gkc8hl4cYY/v0JYt1nz6Br3Bj+/QtiV8aPsl+PFvLvbxCO
AlqLBzct5N//IGZb3Fa6a7oQPf4Q1TuhwfvNAvT4S7yhSOlNmQv491cIF/aO
d76uC/j3X4gQ+7/llwej+fdniEDnqT755dH8+zdEwHnx79Jx0fz7O4SxZjr3
Gzuaf/+HWP03rWfymyj0+EdU9O/LeH08Cj3+EZ4zZx58NScKPf4RPQd/0YzU
o9DjH7HBS0byWkckevwjrvTOtt1+PBI9+gnh5tKAHeGR6NFPNNCnxVexItGj
n7gT8fmlWFcEevQTCVpLzFdfiECPfkJ/zMh2cFUEevQTghaXB3Y7R6BHPxFT
l36VKx6BHgPEU/+mx9tOz0ePAaIm+EZCldN89BggIlt3DT9oC0ePAaJqW0Hm
ncRw9BggOo9C/l7pcPQYIE5aJQzrlIahxyCxyOYeLPEKQ49BwutO4IK47/PQ
Y5CYJT52Vu7APPQYJCDU7fQs23noMUj8mJVw3uR1KHoMEpHKnxbsywhFjyFi
7brK8hXmoegxRFxuUq99+GIuegwRzEKTnpztc9FjiJC5W/z5kc1c9BgiOt7d
3rfo0xz0GCJO/WCPBR6Zgx7DxNng59v2e8xBj2Ei+mZGufJICHoME6fPbLB9
WR6CHuP/nhIVe7UoBD2GicE156bI64agxzABOYe4Sc+C0WOYWLt2ZMrA/mD0
GCG+5Rbp5c0MRo8RwvxO3PkIsWD0GCF+fmptsr49Gz1GiCVGV/JV0majxwix
tHVgBc1lNnqMENvL7M/20GajxyhRffjko7Yb/PuPo8QmzbMnqrYEoccoEeqr
2LHDLQg9Romk5nPJnvQg9Bglhiq8d/U+mIUeo4SC8CPn1KxZ6DFG/JSQfd09
dxZ6jBES9q9bLFiz0GOM0LUwPOz9NRA9xoh7cSNNDpcC0WOMmGdYZPhnfSB6
jBFZM5rWJrsH8q8/SJ9Nx/NBIRC/70sj48t7cu+9DkAfGhnRvXLLvnMBOD4a
+eBU/wqZtQHULN7zFxJa0kqnuvPvx9LIX7tyUwxUAih8fkO+PX9sau1Hfxw/
jaxRvbZysNKfwuc/ZIndvsNvMvxxPmjk4WDulNgQfwqfH5GRlhHSmUb+OD80
UnOtwbXZI37oTSP1zzSIVz30o6R4z6fI4UpO/blCP/QXID20pR5ar/Wj8PkW
mbR7payPjx+uBwFytO5Gch/bj8LnY+TddAkVzz5fXB8C5Pzvy09Wn/Kl8Pka
OUl+8IKFny91gvf8jdxL37u+dMwH51uAVInWm8kp86Hw+R0500hh6cFIH5x/
AZIRQTr1KfpQ+PyPfOIRzXJp8EYPQXKDosyelSne6CFIlj27/HO7uTd6CJKj
zw7cSf7khR6C5JdZSVudc7zQQ5BcIR1Q8mSWF3oIkjr/3hdNlvZCD0HylsPb
b6H1M9FDkLz+Sf+jS+pM9BAkxdTPfu50mIkeguTRY+ouNn890UOQ1PvnbmRf
4YkeguRTU/LOh3hP9BAkDaoE1K1MPNFDiFSe/0xK56sHegiRzL+O0bnFHugh
RNaennK5bJEHegiRkaK+i2ZyPdBDaHx+kkpjP89ADyEyXqp4pUDxDPQQIv0G
ti2WWTwDPYRIxw0f328zmoEeQuQ3Tnjnwh539BAiVz0p6c+94I4eQmTFyY1e
k5a7o4cQqbLi0Xpha3f0ECZtOh0Pa/5zQw9hsny3wdiiGjf0ECanOh2Mer3B
DT2EyVj3J0eSXNzQQ5iUGVbapirihh7C5I+6dgnqrit6CJNPZvXVz9ntih7C
ZOI7Y4lnvq7oIUxyN+3Yx1F0RQ9hUlfWd7bp0+noIUzSlpkEvz46HT2EycO6
WoRW6HT0ECb1jvxSbdaajh4iZHK/7ftHr6ahhwi5LXgdW+rkNPQQITM/xvgF
hk1DDxHy9aOlFhs1p6GHCDlwcKl6WPtU9BAh75G3h6sPTkUPEbIlfM6cYO+p
6CFCOmxgf/ouPBU9RMjRAqERsxoX9BAhy29YXbi+1AU9RMiGxzKxJlou6CFC
rjIWVxtrINFDlCzI/nKqIIFED1HSnU2mxiuQ6CFKJje0FBnNJ9Bj/N83HtTz
2+2MHqLkESVuv9zZKeghSn461JFcV+mEHqKkLHe7p1apI3qIkpPOBUtO2eGA
HqKkoJdfz6wZ9ughSjadSxTe9N4WPUTJTs3jdssDbdBDlHzBjZ+jvs8aPURJ
6/Mjl7V2WaKHGHna8byMpb05eoiRAb8XfcqWMUYPMfLLxZ5Pptc56CFGflhG
72zYroEeYmSt7bzL+gkC6CFGBjavZj4KluB/f4m8tIDB0XNkEzwPMfL14umX
KhZY4PM7MVJiqdD7FVcc+N+PIuXF429s7JjK//4USdad89uj6sH/fhV5yFQ6
xe26L//7V+TASMyCbSKB/O9nkXM8K3VT4oP4398io8ToxIvNs/F5qTiZnvom
Muh3EMHzECdzc1pkmn4E4vNVcfLP2Qum6mL+/O+PkVzm9437Cmbyv19GnvA5
w/BJceV//4xk1i2YZyBC8r+fRgreSLh74o4N//tr5DyT0mseZqbEB97328g0
eB2ols3E56fiZINh+u/zQdIEz0OCnKo4XLOl8W0dfn+OvBX1ZzKtWBY9JMgF
MX6vG7Q10UOCjN9R93irHQs9JEipHO4Mf1V99JAgt91nNWz1N8Q+JEibRTr0
aBET7EOC9O990fbV0xT7kCA5g0vdTmmYYx8SZINFb967L+bYhwRpzFFdvuSY
BfYhQf7KEAieZmqJfdDJp5tmTM4otcQ+6KQ3/dihLFUr7INO9imEO9knWWEf
dNLqndH6+jor7INOnvY4azdpzAr7oJMLLjjJyk62xj7oZOgGa2iKtMY+6OS7
rqCLmRnW2AedPNymoRtWaI190Mkm7xcFErXW2AedvO6vYhb4wJriedDJBGVy
5MULfh908tLPj7nmH62xD0kyYcjfv/GrNfYhSa45pVep8s0aPSTJtk1fmIk9
1ughSRKxDTsMv1ijhySZFcZS2vXeGj0kyQ/JDqufjL8ffv+VXHjHVcX5kTV6
SJJFnraCg/XW6CFJvvIsv2FdY40ekqTSxSkSKqXW6CFJBkxqCrxxwho9JMnY
1syY2but0UOKHDx8/uavddZ4vihF9udEiJ2PtUYPKXI+x8w9N8gaPaTIYI+X
/q9crPF8WIpMC+zsWzvJGj2kyESfOqsMNWt8XilFHjnmuVZeiO8hRUoQozcN
v1nh+bIUOdYp2vDiqRV6SJFTwl4oW4EVnj9LkStPf7J1KLHC45UUeWt6U8Ng
phV6SJEMqaodG9ZZ4fmoNHnxIT31fpQVekiTReffjnR5WuH9F2lSpnf5lTeW
VughTbLcHj28rGGF56vSpKmrevcyQSv0kCY/DJmby321xPNXafLIysSwvFZL
PB+XJgN36TWzqi3RY/zvr5hsOp5niefn0uS68+UMme2W6CFNxiSZK25MsMTz
dWkyOLMx6ftsfh8y5ONqCa0oZ0v0kCEXP6OXv9CzRA8Z8tLzqSfDpC3RQ4aE
2/U6X/ss0EOGnK9hS255aYEeMmTIKf9PRrct0EOGdLWyevDunAV6/FfTXUdF
tb5tHKc7poPpHhQQFFvkshvEAAsLu7tQ9IgoKsfALsBCDDCwlcFCsRULsPDY
R2Lohnfe39znT9bMsPd+Ps93M4s1cLuhcGnI9jM7/MjD9Py1bVI2RvqRhxs6
bSqZFRnhRx5u2DZ0oSR6gB95uOEtDn483MaPPNzA3KC6livyIw93LNsw8bje
xo883OHzq2xtfKEvebjj1GlvGf+NL3m4Y7BfXNsrGb7k4Q7vu0XzFib7koc7
HjPuzRq41Zc83NHRoL/cfZkvebjjYe3HJ6ETfMnDHfz3ndUb+/uShztSNS7q
/Db/3a/c8eXLcM/+El/ycMdSqceGPDtf8mCAL7JzY35pRb0z0MfT9XXaxVZ0
/2Kg+VDdy7jYVnR9DLi+Dp9xekwr8mKgcsLJUie/VnQ/YGASU3v2tG2rTPPn
wRjwEb/5+He+D10/A7LS7qnnz/rQ/c50/DMDuvNjfOh+wYBnSM4Vwygf8mXA
MmumLMXXh9aHgXvTm/56ZedD90PT135hBfjoTfcTBhYVXmxjTPcmfwYWRPWf
82WTN60fA/Gnr0ZyJnrT/ZKBjQ5rum3s6E3ryUDqkZmJgUxv2h8MKD5WzG3/
24vuPwy8q0+KnXfbi+6nDAQ9HnH9331etN4M7Ht4/eXxBV60fxjo5Tdtz+EB
XnR/YiC686AXH9VetJ8YeFL4LWBUU0vyYGL0pWUJvNyW5MHENK8xqawLLcmD
iY9ajSooriV5MPFtUsGl7CktyYOJcPcewrXd/nv/wkRh+7ym5eKW5MHE3r/9
eOeqW5AHEy3m27mqX7UgDyYUuyZtfZPWgjyYuB/0vM+9TS3Ig4nIjImfS6a0
IA8msv8tbwzr0YI8mFhl2ap/g6wFeTDR8kb69A8NnuTBhFLqa1mT50keTNid
WH4x6IoneTDhVXlMW7DTkzyY6MMU151e4EkepuNNTH9xfrAneTBRPzVjQKmP
J3kwwespcZnh6kkeTAS3GXFBVKgnDyZeVR3/ZPtYTx5MjOht4ac/pScPJphh
fv3WbtSTBwt/rftynz1dTx4sfNUd6/ehr548WKg6ZT3/vV5PHixkfI77wHDU
kwcLMSfzWq78rSMPFvjN+5vEj3TkwUJEyJGKslM68mBhTvi/qY2bdeTBwtiF
iY+6zNaRBwttOur+nA3SkQcLf4y6c6G+OvJgoX2/rdd9WTryYCHSsPd0QIWW
PFiw3/FKveqtljxYmB+hzy6+qqWfvyyMCf/UPv6AljxYqBMn8aZGacmDhdh2
a+xnT9CSBwub5zWmHu2pJQ8Wgi/YpTnpteTBwvvTTacPO2vJg4XCjpkDp5Vo
yIOFd5sOth37SkMeLMTbTXOJvqIhDxaGNC1Y+vaAhjzYSNNsl4xYoyEPNr7n
eiTbT9aQBxvWbUqufuunIQ82flYubir20ZAHG1F9Dsu0HA15sLGtV0nWxlo1
ebAxYuHMA8LP/73fZ6PE8lz/N/fU5MHG1qofUTdPqcmDjfRWj78+26YmDzb8
B5zUuCxVkwcbU+eOL10YriYPNsqrJ1bY9lSTBxsSxysfbrdQkwcbCxyrR5xg
qsmDjd82QwSXa1TkwYZv7eZHRZ9V5MFGoGuTLOiBijzYWHJp98O3aSryYCPu
Xt6yDbtV5MHG7JkFn8dFqciDjUrdyPPjpqjIg411xzYkrQ9SkQcb3WJ7Tnjd
TkUebBR1bDzRV6b67+/P0W9XuudXexV5cMDZ2XjgqFH539+v4+kfm0sb85Tk
wcHXxPUtd91RkgcHwzblXM46rSQPDurzHrmJdinJg4Pg2K9/dkYpyYODNvcV
9m2mKcmDA+8JIo/KkP/e/3NQKa/6lN9ZSR6m40mmMr5plOTBQQ/mhekMhpI8
OGAkpiSPq1OQBwfr9p+MfvlNQR4cvOuZlDH5uYI8OEjcYM0SX1eQBwcBLd50
rTimIA8OVNaHrYq3KsiDg5WalWLHSAV5cHDLyWZgrykK8uBg27XwkCMhCvLg
oPCXf5EsQEEeHPgrbhRk6BXkwYE2P7kokqMgDw6c97R+O9JCQR5czLMQh4cV
ysmDC3nDkV6LcuXkwcWNu7FDz92TkwcXE2rdBjifl5MHF2tvVBnXHZKTBxd9
rqx2kmySkwcX3TtNDX+1RE4eXAh6/Dx7IkJOHlw82X4pe99gOXlwEXLFau7J
ADl5cHFXvXzG2xZy8uBiW6cu0XKBnDy46Bj2868NtnLy4CLliXAc74eMPLi4
+GnG6dDbMvLgwqJ/xsrnB2XkwYXkd8XUNctk5GG6/pYfrKYPk5EHF2f9ld9i
fWXkwQXfcuTRzy4y8uAiIaY8d9ZvKXlwIX7TQ+p7X0oeXIT2Xu7qeVRKHqbn
70/oFrZGSh5cROn2hl4Pl5IHD4Mslb9DOkvJg2fq7dluiVBKHjx0vmzVJK6W
kAcPK1g1GcFvJOTBQ0/llSWX0iXkwcO51fyHg+Il5MFD5vmMUMF8CXnwsGiK
8A5nsIQ8eOh/LiKteysJefAQ2+tQ5mE3CXnwsOVO3H6/YjF58NBcfPNb6VMx
efDgYxvZ859UMXnw0NTwerzVFjF58FCQu+dLyBwxefAwt2rQ3BdBYvLgYfSE
gPRVrcTkwcMyzylhIxli8uCBdXONXUSpiDx4OBXYMHN/jog8TK8vb2jTnC4i
Dx6ubBvlvH2XiDx46HQ+ITF4qYg8eOjXzjqx00gRefCQc3He1ZDOIvLgI/3r
ygM7JSLy4MPFdXqNlYWIPPgYGy1fc/AfD/Lgw0rY/tv4LA/y4GPBgZ9vg1M8
yIOPpsEs5+mbPciDj9UrOvufmeNBHnz0ebfRTjjEgzz4+OOV1e5s2/9+f8TH
Py+HrZgj9CAPPpw6d90Q2igkDz6q4lScqV+E5MFHZKvuuYlZQvLgY+Dk+Zst
TgnJg4/r3+U/YrcIyYOP2SvCDndYKCQPPhITzy9xHyEkD9PjuvFy1wAhefDx
tEA70k8pJA8+kjH6Q6S9kDz4KHT7OrmwUEAefLzgtrmwNkdAHnzkvR4U1fWq
gDz48Gp3Z4MsQUAefMzscypOs05AHgL0qjw5YPAMAXkI8OJhUXTiYAF5CDAo
zbOS1V5AHgJ0P7tn3CmJgDwEqL9bFT3ZRkAeAvy1d6Oq5x8+eQjwaBTXoncO
nzwEmLqp4P2Ma3zyEGDM4/PLLyTxyUOAlTeeHRTH8slDgBOP6hxOzuWThwBV
3CVrw8L45CFAn14NT3WBfPIQoGjm3XNCHZ88BMj+s8Lo5c4nDwHko/sPnVDN
Iw8Bhs5+kXj5M488BLj5UXHIK5tHHgIUhGez7p7jkYcAs2NuZy/fxyMPAQ5m
rdoweC2PPASYNPYzv89MHnkI8DK0Y4/wYTzyEGDh0qBX8QE88hAgts/g+J9a
HnkIkeTyqf9oBo88hFjyxDq7qJZLHkLsDOn4JuErlzyE4LSe0HXOUy55CGGV
9+D56Ctc8hDi03Zl6NTDXPIQ4vbuLQnbNnPJQ4hI+bYl7xZzycN0vOXMM53H
c8lDiFmsia4Z/bnkIcSRfW2nj27LJQ8hVnGObuHJueQhxLc61aBiJy55CDF7
+I5F/1RyyEMI749eb8oKOOQhhEAaFyh7wiEPIcIPnF439QqHPITIrPy6+PER
DnkIMYHz51v/LRzyEKJP8Kuj35dzyEOIEQedYg5M5pCHEC8zRo6eFcIhDyGi
Fn6tDQvgkIcQvqkq/7GeHPIQ4ldm8ccoLoc8PDD/4LzH1yw55OEBroPXS7di
Nnl4YPO72rur8tnk4YFeLR2W2z1gk4cHvNPyslLS2eThgadveq6ZlMQmDw/c
US+M6vg3mzw8sGdOwW7dCjZ5eOCdZFSSz1Q2eXjgTGTT/KBhbPLwwMDazl/X
d2OThweGRr54/M6HTR4euJScbd1NzCYPD2xstTrijiObPDww1fPg3dHVLPLw
QOpITqPLdxZ5eACb9b/f5LDIwwOu3yZNuHyLRR4e6NclKTAtjUUeHmAtrQ/P
OMgiDw+4fSzY/XUTizw84LfMOku+nEUeHtgwf+zdRVNZ5OEBn3n+sz8PZ5GH
B7rXuSWM78kiDxFq3mb41bRmkYcI4xaE2iQrWOQhwr3ubcqmM1jkIcKYVuXv
ejQzyUOEYzXL4tsUM8lDhM+H/23q8JFJHiLEfDhXN/QJkzxE+HvRkoh1N5jk
IcJVg47/6BSTPETIsi8rV+9nkocIsO2Ru3MjkzxEeNMn+4hwOZM8RNifNqd1
+jQmeYjQ+sOEKRNGMMlDhAdnnKXqvkzyEOFaKrtjfXsmeYgwe/fYPT90TPIQ
IeiOq/AHn0keIsw5E5VQa88kDxHKZ/Z3UNQwyEOETq17tR/zi0EeIrx7uMrl
dC6DPETQ8gOmuz5kkIcIl/fZtoq+xiAPEXqUxAe6nGKQhxjHw/JWpuxnkIcY
lR1tH4ZtZpCHGJanV9h5rGSQhxjnK17zS2YxyEOMO9Ifn9+GM8hDjKhll7u9
DGKQhxiXVOvknwIZ5CHG4aQ74xp9GeQhhnK0x1cfJYM8xHjbYdqWBWwGeYgx
RZ/RK9uGQR5iZETcyB9X6E4eYlS7R78a8tydPMRY0FYbOP2CO3mI0Wb42J9H
drmThxhJ1/vubl7mTh5i+CdP5q0e404epvNfsae1Au7kIUbHP4rL31Xu5CFG
g/fJWU/s3clDjDnefso3f9zIQ4zNGeKjzc/dyEOMlzleNwdcdCMP0/Ovr+50
ba8beYjxbti2P31WuZGHBKwhbQ9VT3AjDwn2zE2SZPd2Iw8JFl0N73ytpRt5
SJBxf0jWI4YbeUjQ0t6wqaHSlTwkaN3UdnTQe1fykMBma4rdrVuu5CEBr+eo
8JBkV/KQ4MC+762s4lzJQ4Jl/ToF58x3JQ8J8vYejLsd5koeEmSdOHbteYAr
eUjw5HZASoPKlTwk+HPueIu+Tq7kIcFo5iz2BaMLeUhw5MT8tp3euZCHBG+u
/IwoyHAhDwm6jA1ecOyYC3lIIP53mf/6zS7kIUHnjtFRMQtcyMO0Htz36iMj
XchDgm07OzW8hwt5SDB4SUpea70LeUiQHrs0PtndhTwk0Dj1bmhX7UweUoxw
ayz8+smZPKQY/u15p9T7zuQhRY+ozjfj05zJQwq7fNu+O3c7k4cU+TMDLp2P
ciYPKZI3dnj/7xRn8pAiNHfn9sBgZ/KQ4t21dufOtncmDykcM/q6d5Y7k4cU
MW6dN3xxcCYPKfL+vWM8UupEHlL0ZuWrV+c7kYcU/gGGhsV3nchDiiPxxpAN
Z5zIQ4p6adumC7ucyEMK8aD49zVRTuQhxdlxg++NmOZEHlL4FNbE54Q4kYcU
HcJClVM6O5GH1PT+ZuEgtsaJPKSoDN1fkufmRB6m9fMe/u1ajSN5SOExZZZ9
+j+O5CHF3s8//LOeOJKHFMv7OvYzXnYkDxmSjw6X+x92JA8ZTj3dtGfbZkfy
kIFhfWyz7RJH8pDh4NTcvPjxjuQhg3zr/nEdBjiShwyZdnvrKts6kocMlz5f
jX0sdyQPGf7pJPt11dmRPGSIeaOtzqhyIA8ZKndP2pn/xYE8ZNDLkhPcnjqQ
h+n8QksrRl51IA8ZrJqjl9w86kAeMiT0fGXVbqsDecjQPmTz8vsrHMjD9Pjn
LddnT3EgDxnavag63nKIA3nIMNDAFFt0dSAPGVJ3RzT+6+lAHjKU+xxvUch1
IA8Zrn28u87ayoE8ZEhnfyn0LbYnDxkaK0N6Lsq3Jw8Z0moSZj29b08eMtSs
iO7TJd2ePOS4EFF0+Vaifeb6/30cQ448Q8PBUXH29P8W5dCNsf7guNw+k+aL
gD1nXeizyfbkJYe8hX/JiSH2mTSfBAnTq2N3B9pnmreXHJsHfLXb72WfSfNN
8Ottl4EXhPaZLf4HIMeYhGVdPtvZZ/7v2/nIIZrU6Ya8wo585Sg0DDuz5Iud
eX06yNGcmV1e8Mwuk+avwGtf1uJxN+0y/7f83U3H65nCKztpR/5ycL3qr+/d
Y5f57P+Xb6Ac73IW9xkaY5dJ81/QKqohSbHQzryeYXK4FiSesZ5gR/tDDp87
B4Nrg+wy//f/2CbIsfH86LlWAXaZ/9suU+RoPDWvVNrSLpPm06BH9v4bQUI7
2j9yWBbfTd9ub5dJ821gv8Li1s9KW9pPcnwr23J/8Ddbs8caOfZdeZf6JMfW
7BFjOv65WWNG37Y1e2wyfd3scK3hrC3tNzn6pm87dS7B1uyx0/T1CoZg6d+2
mTS/B9+HZvwKXmlr9kgwXV/vCuvOM21pP8rhzewU0mGUrdkjRY5F3ztd7dPP
1uyRJscJwSP59A62Zo90OaZ9+LLgoM6W9qscSyqP7P7Cs82k+URwWzhsUQc7
W7PHHTmWT42oSKq0yaT5RtidNLHZ47uN2eOJHDsnOEUlv7bJpPlIeCTuMLLH
PRva33JM8CleXppuY/b4IEfcnqEPzx21MXt8kSPwerrvXztszB4/5DjIjdo3
MdqG9r8cl6x6Fw1baGP2MJr264I73BERNvT/Qk374eTThplDbcwedXJ8sZ4c
t62HDfWhwIjUlLSsNjbUhwL2U94PclbbUB8K7MbEYRM4NtSHAr4R9848sLGh
PhR4nn2qW9dKa+pDgcdWBY33vltTHwq0rw9+MvqtNfWhQOwV+71WD6ypDwXe
i9oOvHbFmvpQ4Haa9vXqFGvqQ4GA8AGi0H3W1IcCLwNbu3bZZE19KDBj3KZd
fpHW1IcCrSOVSe1mWVMfCiQ/+yUYEG5NfSgwKPffP3OCrKkPBW7Ih9seCbSm
PhTgWi0M+eZrTX2Yjj8v7WZbpTX1oYDg9tY2u9nW1IcCRxZnHLG1taY+FNBY
N1RFV1lRHwq0OeQtYf6yoj4UON8cYpWaZ0V9KHCm4/odYY+tqA8FZi2zMTAy
rKgPBXJzVHNz06yoDwVOcEfsTEuyoj4UWL3VT7Qj3or6UMDy05jSmHVW1IcC
l64fsdmwxIr6UCAv+2f33dOsqA8F+kd47U8fZUV9KFA2I67m00Ar6kOBPdzA
gYJAK+rDtD8ydkeP87OiPkzrl2bx90WVFfWhQHq9TRifZ0V9KFDdt/eLDQ5W
1IcCnkl//bStt6Q+FMjGls3biyypDwX+nh9+ukWBJfVh8hpS1/ZljiX1oUCr
tI0eMVmW1IcC3Z/169v7qiX1ocDsgfFpnNOW1IcCJ3+86mI8RJ/fMiqQNWTv
P7nbLKkPBbqy1m59Fm1JfShwrvfANi+XWFIfSsSsf5RRMN2S+lCi4PwvaeMY
S+pDCW72qd7awZbUhxLBGV6aMT0sqQ8lEgcfOZXQzpL6UML/n9AHRZ6W1IcS
A/qnzuwnsaQ+lPh5VhZ7nmFJfSgxaHygq9bGkvpQ4mTyxT/J1RbUhxJFR7ty
/P9YUB9KqHXpS59+sqA+lKiMabJbmGNBfShxYrEqXX3fgvownf+3TrP/uWZB
fSgx/eVC7ZlUC+pDiWxP9ou/DltQH6bzTVw4OmKXBfWhxKF1ttcHb7SgPpQY
cyLoY79VFtSHEoNb/ns5aL4F9aHEvMmxHcZNtqA+lPj7SvHQyJEW1IcSlrOq
644MsqA+TOu9fbvsbTcL6kOJwLxb6Zx2FtSHEs/mHjo5toUF9aFE7seh5elS
C+pDif5f1dEctgX1YVrP4ZMHrLG3oD5M519dv7K4utlg7kMJ5ue3h8oKmg00
fxTrjZGfXB41G8x9KDHjbWt1QHqzwdyHElnsGcOiDzYbzH0o8fD25WGfY5oN
5j6UuBP02ilkbrOB5qMiocuxMbkjmg3mPpR4XODtu7h7s4HmqyJblTBT59Vs
MPdherxbn8pibrOB5rMic3NS+uPmJoO5DyX66Xv/nfG7yWDuQ4lWb2um3XvV
ZDD3YdoPaYe8CzKaDOY+TPvhe8AdRkqTgebHYssOO7fQ+CaDuQ8lPs7rW3N2
ZZOB5s8iN3HpNOnUJoO5DyV0c1v2PhzSZDD3oUKYTLq8Q5cmg7kPFWxTvH5/
1TYZzH2o4BMVGnWU2WQw96FC51EZ8qUNjQZzHyoIm49dHfuz0UDzdQHLhT6j
chrNHlIVwrekzZie0Wig+byIbWsRGpfSaPbQq7DrrF/enR2NZg8fFfxTvD+6
rG40e7RR4Z/1zf1nzGg0e3QwHa/jK+f3wxsNND8YjfUVDuO6NZo9uqvQRvey
ZZVXo4HmDyO+ujw8SdBo9hioQuoox43hNo0Gml9s+vn8Ybe3scHsEabCzOwR
8xkfGsweY1QIGLjByi67wewxQYXg4m3+bhcbzB5TVOhul1GqT2ow0HxlcKbN
V4fGNZg95pme37r1lV3LGgw0nxmdDh7e+XNSg9ljhQr77q0+MSCkweyxRgXD
mlP5twMazB4xKnxqKRH2b9Fg9tikQs0S46BvvAazx1YVrnUYNWmbdYPZY6cK
I7um9gky1hto/jRqRCO/Sj7WUx8qSJp+K5sf1lMfKlhEOpSVXq6nPlTYNml5
l6qj9dSHCqv3S4qdt9dTHyqc/1Ba1jqqnvpQYXyCW/uZM+upD5NX7onkiyPq
qQ/T6z+7+Lj3rqc+VPjTOuXaijb11IcKL4c3t62W11MfKrxPurB1nVs99aHC
cf6qdGVDHfWhwo8A/y0vf9dRHyokFj5w2f6ujvow7Qddd/GErDrqQwVe5f2T
3dLrqA8VtvvuPNL6cB31oULeJMuKNlvrqA8V+h1evbnXqjrqQ41uIftCp86s
oz7U2MUu675vZB31ocak+N5d3/epoz7UcB89q513uzrqQ42zl0OEW9V11Ica
+9c2vrZg11Efagx03Bq21rKO+lDj0PuArWxjLfWhhu+pkTMufqqlPtTwlvV/
N+lpLfWhRo+rW+6pb9ZSH2qUJxnkFadqqQ81muJi83P21VIfagTvuFBwK7aW
+lDDztFDaVhaS32okT0m/e9HU2qpD9P3L9vI+jG8lvpQQ9eUmcjoVUt9qCGe
uEXd37+W+lCj48ae2+JVtdSHGmt79s35zaqlPtS4e4KbH2xVS32o8fpH1z33
SmuoDzVOt55V2+dLDfVhOt6e0ca8FzXUhxoPcgtmrrhVQ32oYRjyfbTnuRrq
Q43+b6ae+5FYQ32ooV23cuSFrTXUhxqzLg3sE7e6hvpQI+oFb8aiuTXUhxo9
vX0uzBhXQ32ocaK8zn1ucA31oUaX+tqFfwXWUB9qtD5989nhVjXUhxoz8n8x
XshqqA81Xp7t0NKFUUN9qFG2doVbqEUN9aHG45vbTqcaq6kPNW5enV/O+lJN
fajx6rjuXczLaupDDa9pL/rY3ammPtRYt+JQu50XqqkPNQJfvNrZ6mg19aHG
oCuPh+buqKY+1PjrunHSlnXV1IcajutuXwtZXE19qMG99byHcko19aFGcnNm
RXNoNfWhxu0D/Qz/9qmmPjRI3tsu/p8O1dSHBr4bIyb+9KymPjQ4uSBTXutR
TX1osOTcgEy+SzX1ocGwXJFvj8Yq6kODIQnDJ0cWV1EfGhy75hty63MV9aHB
3eyq78yXVdSH6fF21rx5d6qoDw2iZHdf5adXUR8a/Gl7iTnkeBX1ocG6lOl3
3uyuoj40sLBfmzs5tor60GCs/nxvqxVV1IcGEYwbzadmVlEfGtS9WVQ1LryK
+tCgzcZ7EkVwFfWhwUvh4WnFqKI+NHgfwHr0oHUV9aHB4BG+bVPVVdSHBqrx
6kMJvCrqQ4MBD3SVBxyqqA8NXCau8z1eV0l9aDAqaGf364WV1IcGS9/flr7/
VEl9aPBs/oar9i8rqQ8NDq2Ya427ldSH6fV9OeXRlyqpD5NPkyzy1YlK6kMD
m8iBW332V1IfGjgFRKh2xVVSHxpMCA5oab+6kvowrbfv3f3r5ldSHxrculE4
2XVSJfWhQRzr9prDoZXUhwa7YkI/o18l9aHByqicxX86V1IfGvSYPr3DYZ9K
6kODvgljRRMVldSHBt8H2LB9OJXUhwa/xt9g29pXUh8ahC8pZ/6sraA+NAi4
3sLqdWEF9aFBdl5R7uPPFdSHBorCd5ue5VRQHxp0DI93+ZBVQX1oEJ/7ekjF
1QrqQ4NI/8lD+GcqqA8NXMP5Fr0SK6gPDa4EPh28Kr6C+tBiz+UlHW/FVFAf
WjgtYp51XV5BfWhxvDglefKsCupDi2sDQ7nZ4yqoD9Pjg2H0H1pBfWiR3fOA
15neFdSHFu9+pmR6d6qgPrToPvJqwjXvCupDixu22sxgRQX1ocWDHaN5Rk4F
9aHFoRfP9+13qKA+tLA5ZBcY3FBOfWjRO39bvauxnPrQYk2YS9bbr+XUhxZp
BtX2k+/KqQ8tAtduGb7+cTn1oUX0I4bD7Mxy6kOLvhGRCeHp5dSHFqknT7uN
OFFOfWjxYvnmoDEHyqkPLVwlzGEztpZTH1p8bx/IXRtdTn1oEXRVHXt0aTn1
oYXx7ocjz2aWUx+m80veMtp6fDn1oUXb27NTug0rpz5M17P02uqNfcupDy0+
yjLe5Xcppz602FD6PLmtXzn1oUV9+bCv+zTl1IcWN4uuR9t7lFMfWrwZujIq
yq2c+tCiuIPsUZNVOfWhRVmXtuGx1WXUhxaTVo72ERWWUR9atFrTyf9KQRn1
YfL0Xj95zJsy6kOLlRcbrzo9KqM+tEhaO1Nzx1BGfZjWw/f44bXpZdSHFiEL
NqsHppRRH1pcdXQ6Lj1URn1o4X+R71G3vYz60OKO+PKKT+vLqA/TejwuzXgc
WUZ9aLFa8E/+7Xll1IcWBwQns29NLqM+tPCMXxiVPaqM+jC9/s+y8tzgMupD
i/nSemlZzzLqQ4ddx3vXsDuVUR86dJx/YUnXVmXUhw65bxO3z1eXUR86/Fm7
AqnCMupDh7AZV1eUupVRHzpwbua172pTRn+fpMPLnGlzd9SWUh86PNbWCUqL
S6kPHVYEenmFfSulPnS4d/xEUlZeKfWhw9030jldnpdSHzro/ILibtwrpT50
aFtaX9b9ein1oYO3sGZfztlS6kOHA9PEy2ccL6U+dPg+aGCs04FS6kNnej+z
KPPCtlLqw3R9Z+J4EetLqQ8d7lTsiBGtLKU+dFAN22nzYX4p9aHD8PdJm49N
LaU+dPhS+4a1OLyU+jCd//yR8YOGllIfOszuP8rKp18p9aFD+V3GaF5gKfVh
Wo/+hp12bUupDx1mTU890dSilPrQocLgF9ckL6U+dIgvOdHJjl9KfeiwY9/i
01zXUupDh/y+ju+8rEvNHgk6rJ+Rf2lArZH60OErpmNBiZH60IH/ruvcpO9G
6kOHcZWFnd6+N1IfOnziuB1k5xipDx0KhvbaPCLbSH3oUDa9q+Vxg5H60KHz
wdSqmotG6kOHy+eDJw07baQ+dEj7+bv7lcNG6kMH3x/9Niv2GqkP0/682Kvd
ji1G6kMHcdqNLi4xRurDdL1L4vfERRqpD9P+LbkayFlgpD50GNFS63N0mpH6
0GHi5LzRHccZqQ+d6f1l3u23w43Uhw6JAe1HRg40Uh96PDnnINL1MFIfepRc
mm2R39FIfegxPPlvq52+RupDj9pbezyG64zUhx628rvdJFIj9aGHMC1ofiHH
SH3o8VP015E7zuSh0iP5TcqzRCvy0OsxqLT9J/vyEupDD+/4eXUfC0qoDz0G
Bt//dvtZCfWhx2M39rb0myXUhx5F9wNLLpwqoT70WD2jZ2Xm3hLqQw+X17pd
+etLqA89Vl1ovm21uIT60KPzYuOcDhEl1IcenA7eWyNDSqgPPTTnqrlPAkuo
Dz3sBElVnj4l1Icet8Ux6l3iEupDj56P2DtcnUuoDz2ilj1ou6O2mPrQA1c9
LbS/iqkPPSYh53vW22LqQw/9+yn5C7KKqQ89Wgw98NLrYjH1oYf/BL/M8iPF
1IceW/fV7H6wvZj60KNg5LOBKWuKqQ89Ei4fer1rbjH1oUfE9HHKbWOLqQ/T
+RmELfYMKqY+9OgTXfD5VJdi6kOPHhWv2z9uWUx96DH+tEZb41FMfeixdotb
op9TMfWhx4+M3N1La4uoDz1ers23fPSriPowXU/Xpa/1uUXUhx7RYTLrnQ+K
qA/T81sOXut8pYj60GNRw47eW5OLqA/T8z/91VO2u4j60OPhyYx5N2KKqA89
uv+qzoxYXER9mNY3q0grmFxEfeiR3jhtf+6wIurDdD3PAt2P9yyiPvSo+jZs
xSr/IurDE+rgPS8mqIsM/wcPK80L
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-2.285826380600569, 
        2.3278898583585126`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 12\"", "\"A ED 12\"", 
         RowBox[{"\"A Lehmann 12\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PIYprjMc61yE7qIfQxSnc8BHr+o76McQZX9U59zW6tvoxxDVeXtLTKcoOz+H
qIngyXf7qUr0Y4i6MrC9cLitDP0YoqKvu9ZdO1mCfgxSy3PtNrUo56Mfg1T7
7XsyblkZ6McgFWWboFQTcAn9GKTClTed5JdyQB6D1Iy77y8ZJCCPQYrHZt3Z
jCPs98FBKmdRl1vxthvIY4D6uGxLL+1VKfIYoPi/nTrYn1KJeTVAta9XWhHa
UY15NUD9qQ0vsoy5i3k1QHUU3FcYSa7FvBqgLL/0yb7uojCv+qmYdper9csB
/einxI61/41UBPSjn/LNWUwEMSj0o59aPn+jfuDmGvSjn2pazqX8pvQ2+tFP
3TA7c0HEtgr96KP2DD7XtD5Rhn70Ue9n9Z1NeXoD/eijrM8mr0h4y17/7aNo
y+OeuNuwz5P0Ua2vRbmFK08hjz7qldRt61mnUpBHL/Xn3SkXuZN5yKOXqmir
0zfPvok8eql7j+p16msrkUcvJaukaMlx9A7mVS/VFd9TquFJYV71UpWm4Ofn
VId51Ut5VYl1SdbWYz79pd4paiyRSmsgbJjj/ZdKMO/nNuG6R0gwx/cvNT+e
dlf9VwNRwhzPPxR/YIrmr+0zP88cvz/U8k+FMmOG9Vi/f6jfTqM2N/MB67WH
+qerfVXaqAbrs4fi7vK0nNhxC5+/hyI22358UlBKtDCf9zdlPRbNIXUnj/Bm
Pt9vasy2t6XOOIHQYD7Pb0pVTu7SujXuVAuznn5Rhrp7njCeZVLerAVRajUv
/4dnhiVYL7+oMNq9Yx+PVGF9/KSKDpxt26pfi/Xwk/qdRZvQW1WP/H9S6UW7
jKZ5G6le5uW6qfPbsr70HHhARTH5dlNDGzL0SYNHFMnk2U2pPteYnXHxMdXL
HPAu6oTHsbAYRhPmWRfl0UbEfaI1oS9d1DnOjMDvjo/Rjy6q03FB9x/BR+jD
D0r92RW/bf33KRaPH9ROoZbgzPn3KBaPH9QiX78HBQ+BYvH4Tq058mnnh7Rq
isXj+8z8L3y5N7sE6/c7df9GV/2KDalYr9+oPE+tdNvZEcjjG7Wl9WnrB+kb
yOMbpTf/QJ9tejXy+ErllR5OzjavRx5fqdfqk3S1rAfI4yslXiS5P+lqM8Hi
8YUCtfm9RSktBIvHF+rK4RMvNRJfYJ5+oboLQ8NnLWvF/Oyktn0cqn54/BXm
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
9rN/CU5dxXrBQ6WYV71E90vbfWZ32etdvYTZeLk3T1op9se9xK7OL+k9PKVY
b70EV95oZu5ECZXHev8hAt+TPBLyxVh/vQTnTC9+3+06ri/0Etnd3aoOBtew
HvuIEdXxpUnOWez3LyLDy7nNNz6F/X5GVBgfU7D3iWS/vxF9FwtDcqkz7Pc7
4hI8tFDb4Y68+4g1F9+XpgtEEwqs90PCbWnnxa/aqci/nzhvof7+kUEWvu/3
E56UmQljVy7WQz+x8O+OEPG2fFwv6CdSL396b32tEOujnzgsH3EmtawI1xsG
CIODzq2HB4oJA9b7L9HW06b8QK8E63+AaIk9pbpsqhjXMwaIhb4njCufFqEP
A8Q4z4rWIx8LcX1qgFA9bRaydXkB+jFI3Ajx16sfysX3xUGiPCiutHZWNvoy
SFg9VE67/ykd622Q2LxZ/PSJ+3EEi8cg4bI1szMnIhDrb5CYd2v2kE/nbvb6
AjGmKxmf1eqFPIaIV5t+ZwkuZZ//GyJUpR78NPiZjDyGiKerthxq68lAHkNE
G02PNnUiB3kMEd+N6zZk77uGeThERCxtXllalE+xeAwTQpP3tNZvv475OEyY
TujM6VtTiO/7w8SiYV6Hr+6FmJfDBPnsufzY6HVcLxgmJLnoHzMb2ftZw8TI
Bc7tJd15uN4wQrwI/ygm7ZxLsXiMEPmK+n4OztlY/yPEvLUi/drTV3A9Y4Q4
GEx0qexPYq8/EZ8XLg54szSKvT5FfC2gu/ycuMhevyIMy72+qs3fiDxGidP3
Fo/fC/JFHqPEqcf6gYtso5HHKEE11tss+JeEPEYJjSabS2ltV5DHKFHx1eZu
we8s5DFKPM6uW6N9/Crmwz9C7e9G05Kd13C96B+RMP/4qM+1PHw//Ee0XO4v
ersjH9eb/hHyE+vmyB3Ix/n+H2HpN3uy8V4e+vGPCN2+Zmtw+DX0Y4zIr+j7
0kldRT/GiMU6UVf+OWSjH2PEm0NSj/UyM9CPMaLqSPrPs99S0I8xQiIr03TR
71j2+ichtu+itYJQCHt9lPBOex8n7ueMfowTy2jq4kNn7ZDHOMFvUFaRVOKP
PMYJnfdneE+ERSOPcWKD257ExyuSkMc4oaIsdbPK8DLymCA+L9FLo1dmYl5N
EFfydowovMrGvJogiu1jPz44dRXzaoJYw9NWstgjF/Nqgtjsc9FQoD8X82qC
+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
zoxj80nh8rTnisIh7HklM5xtsbklc4wkPsxwtdDgkElKIPFhhjKzp8r43GXE
hxnW/LfuV/HESWx+KkoLb9gcNZlHepjBhm+749+ZPqSHGVI8Jl3Z1JvpYYaB
usV37HKiSQ8z3PTwWxhuriY9zDBrgNW6oG9x5FdmyNzi2O7BxETyKzP02f7d
tuFXEvmVGeort2zqpJfC5svC58oa543BKeRX2u+jOkwYPiiFzafFp/I2gldI
Jj7MYHFkZ+DiA4nEhxm2DzjrUaSMJz7MkGiWc8z9qpr4MMOe3UN+WgxREB9m
WP+qzeucbmHEhxkU4X06THPwZ/N30T5vYtJIJzfiwxy+w/eNL77fjvQwR2j2
sYEL3rmRHuaI8diZU6X2Jz3Moevb7Wm9IIz0MMf3LDMTpbmC9DBH/if1wfE7
2XxIcxzmDKzZNyae/MocJpIcs0fTE9l8YkxeG1x0/lwS+ZU5zk7+5jw/h/mV
OWqbxhTtK0smvzLH6K83HTgTkokPcxzvPmxxH1ES8WGO04v5Hc96JBAf5nCe
XFKVbcz6C8zxZm/S2S72jA9ziD9YlGzlRLH5zZjxeVW3vNdBxIc5Li1uE1Ti
tpL40P78/YSRo4/OIT7M8cUrrjQ70570MMe1HzaH1n72JD3MYVY0SH/LodWk
hzkSupx8vfRjOOlhgWUN7870Ha0kPSwQ+U9R4xaTWPIrC4x7pZNxPDCe/MoC
SZX9W3zHJ5JfWWBjd6PmeWHs/MMCMZ3+9fvaPZn8ygJO85uvvf6bxOZvI8CB
b1/jkER8WOCFnYPll79sP7fAj4+WhxrN4okPC1z9ll686aCa+LBAgabzdmmu
gviwwNL3O8/rtAsnPixQ2Na8oV9FAPFhgbwHnOaXiz2IDwtYbHWOD04Zz+aT
w264naeBqxPpYYFz8feLV+9nfWAWEAkkywacYHpY4PqQLl9tMyNJDwtY3+63
KucRuz9uATn3mL1daCz5lQVUWy5GuOSy/jML5Ay/9dxFnkh+ZYFp/15q6yNg
fmWJ8vodOmsjk8ivLJHUxeP++2FJbP47/Cp2D1w3J5H4sIQqpvlj2ZN44sMS
73Ytnr3sHru/YIkz97v4WE5XER+WiMt3TVtZGMXm0yPSwOOeumMI8WGJtO8D
NscXr2Lz7eH3q6nP4iGuxIclRGZu9uvm8kgPSyyJth9fMdCN9LDEuS+ZU/K5
fqSHJYIq/+7ftC6E9LDESrMly/O7RJMelvi+QVXOX8TmL1tio33+i+ryWPIr
S6QEKMSOe9g8O0sY9h+q7/I7gfzKEtt5Is3xk8yvLLHg3oNbdc8Tya8sUfQ0
09bPM5H4sMTQ6u59Tsyhfo73lih5YNDEPRxHfFjCpPjIo3QN64Pkw/PrXV59
pYL44GPiujqdFbfCWT8CHO4vdfHhBxIffFxoHjWpumE58cHHqtOmnfaazSI+
+PjlFvDfJ5PJpAcfTyP314prPUgPPk4Ez1nuvCWA9OCjvmut+WOHMNKDj2fd
OuqXusaQHnzMqRjS06dCRX7FxxCD7esHtcSSX/FhW9Xp5YQ98eRXfNS+ajGS
nGfnH3zcaPK73mSfSH7FB9+z2X2vdSLrt8DUXdV5xqkJxAcff63e3a9zZPNp
+Uh4vKFnWnIs8cHH1j3Kzm/sVMQHH9mTFz3vJoomPvhoY3th5IG/IcQHH+1k
f4+bTmP3A/k4e3Dqvn/d3IkP7fHtsaJt1WjW/4HlppyDLxvmliX873EMAQJy
Zm9KXehF88sEWCN/Ua9JCmxdbz0EuCoNdbn5kuklwLB3N+bHpiiov0eAuNd+
XH0rdVnr8hKA16fLlsuyOOr/EWD/1g+D6nLjy/r8TwABzvZ4nOIVnsD6UeD3
MV768EoC6StA/RaBWh2bwPpVMK759SNNYTzrX8G6B1c7XpsUx/pZoGlbNm3P
ItZPIMDOi1d8zv1VlN36/1/fdAGO5tsucg9i/d4CmNTPG393bFDr+p4nQGlI
tN1DI2/WH4Ma3abDN3Wdy17//8MtEeCf/bJtLselNN9MgN4vDy3mz1pM/U0C
uOY9v/U3cRWtHwFafDi7DRyDqf9JgOweplfmTIuk9STA0CzDtZ2m0PmgUoDu
87/57laqx/5Pj3gBLPbdCnEYE8f6dbDSNq2wPiSe1pv2+4/4VflCxPqrBJh/
uI2655gE1t+jPd9rGCa/Ej+29fUgAexOtrkcduH/+n/QpfTigq8jYsf+T48C
rd6zlvGarVSsPwgRX6JWtYuIbvW/wwLcsFd1OnOHXf8WgN9dguCMANZPhKjj
+x03/evJ+ouQdr+xyHiJI+s3wmfpMdMNbya36nFDgObszhb3uR7UHyaAYu+X
fiXH/MlvtOvj8mDPdZ9DqH9MgKJKv7V22VGtelRp14OfTsDBk0rqLxMgprve
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw10wswnFcUAOC1sd6spiFerdLQpNIM2oZEuWI6GpUm0WqZoiQNFSIejRmS
eDRFMIhITaikJVGJhm1Q1iOci9qx8drYxluihDBeYT0bsq39z56Zf/75597z
3XvOvb/JydDP/dksFsv//2frzYQ2zY7WfEO8+Rv5OXcruHQseohqhdaS92XB
pTFOWXorujdJR/tWaFFH1zoft/pqCJCFFv1s4rQeb6MWGE+LZpssjbz+JB89
TarY33h5wLgZPU3a5331isa+CvQ06JWdLu5H/wL0NKiD3gODb4+2oqdBLbLb
dVcy49FTp75GkUofBIjQU6eb0oc3NFKE6KnRIuNLfgXdQvTUqL6R0ScRkU/R
U6NnFr9aMlOrB8ZTpcp3FJtLhXPoqdJjNuIZpUiWI+OpUJ3qbn7Cr2xHxlOh
volXBRv31gjjqdD0D/knMsbFuD9l+kuJcXXS/ifAeMq0aTBrxC5gEGRcuxK1
X95o3iHiEcZTouet3lWWTjxGT4mWXubnHDBrQY9DeSrnYr6YakGPQ++aFhb4
rnahp0itqoM7vdIzsV5FuhD+iNP1fRt6itRoIivnrLbc20ZVdcZTAw346G2j
rZYf5Tce70SPTa+bskLGM/nosWmjOK7SL0jusam10WKbecwAegq0eNjktdKB
PuyfAk10jhps4nUSxmNRmyEj1xKvBqyXRcM+tR2OXyhFj0XzHEq6FexCiLUs
XwqaeTY/SSN4uP4reK4v1k5jl+N5bcLdG3+6qs8fQH8DDgsHUidmK9DbgFjb
4rpUzn30XoLA1EwgbSlA71+wSJHsXn/MhxyZtw7R1f7Ouq35WP8a7Nq9Pd1M
T+6tgRBcgvZLqtBbBYO2Oc/ivWnorUDIoGCgjluH3jJYrEzO6C/+gd4ScN8s
IwrhZegtQR3f5uAsqwE9CZx206rbbpWM/VkEj5fBX0NWA3oLoJPgGe4zVIPe
CzCs/DHFK1HevxfQdMJ5JkvSTE7J8ueg9qDTmMTvd+zPDDxaVLGv7moES9l6
02BStdLjbd6C/hTMx+XufSi4hd4k2JdeemdovB29CTh5p8POepWi9wzcSzMP
nS8SoDcGG5yCKifbv9H7B3wujRmaT+fi/zYC1wwzylfLBkmrLH8I3A/fF57b
M0SY+f2wIkrJecXtAT/Zej1glsRxfZ67hr4YbhkGevi6sCnjiaBvl/7ZZEsW
zZTlC+HBcYXVC9/N4/xm+AE8vMt590i8bLwGPL32HSkOHcbvYvgYrhXcfksk
v3+sWctAiNOtBRwnXiNRIvFcB1Amn2QcMfcfGxWAI+MT7aauYDcqgHxmfXIx
MLbG/qYY6xURyfrS7dGRPvn+SayuIKnoPRGEMfWRixF5Cus7cgmT308skrt7
7QpaiYjpDylZVjl0rLce9zdCXDMtpad6y+X9JcEuDsZdE01gy/SfpIQOvu1u
UAhM/jMy2pLULuLXkEDm/EjlU73AtKha+fmSaQ9uWerOLNz/FLk+GabZU1GL
3jT58pugBLXCEvRmSE2M057YhBL05ggd9YyT9lbJ7x85Iwm4wOMkkf8ARHsR
kA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw023c8VX0cwPFrc+29uYtrZWfnHBUiW6JERkkqpKU0JGkPpaVESJQKRZGc
b4sKSaVoayqaVLbH436vf57Xfcm55/d7/z7nnnEfZlRCwEJBGo12R4JG+/+/
vB9DIEyFHIbFaUSK0gX3zkED+Fr+qvGgEo34azBv380/BpB2PybHhkEjlk+h
Pyv4aQDaB+fWfjCmET3+V3W2dhtA16IdNidtaUTM/z+fDMBMol09ehqN6Fz3
/wYN4FwdsdLKl0ZMbO2lAVinPAiUDaURzwoSx7doALtoZ+r/xtCIgP8312oA
p4QEXnxJohHNTf//jG/fzzC3ayONmPH/BhsMwOLXZmbvThpx68//O2gAx33S
EiWO0Ij/dy/xugH8nnMl27iARvy/Of+rBuBYduvCnIs0wur/n0sGUALzrx28
RiPGd258gwZw5/eclo4GGmH4/w4WG8BA0+EB4yc0ovD/3SswgEBNeY+db2mE
7v+bO2kAeSrPm/p6aET2sf9/DODNLvWsJQM04v/RrssygD4hmQvfRQSI/4c7
b58BVHdLGW1UECD+370pOw1gZm2aqoauAPH/5nS2GsBDdu/Wm8YCxARHqgGE
mQ6kr7ET4HmsM4DQBHeOvasAz2OVAXCMi1eIBQjwPBINQHjzSNq7cAGexxID
OHTIJer+EgGeR4wBeFzPYFLJAjyPSANIP/PvIWwV4HnMM4DvO56lthwQ4HkE
G4CSV5pLd64Az8PfAA5cWspWOi/A8/AyAM/9HFvPGgGeh7sBuH3x27OnQYDn
MdUAag0rbF4/EeB5TBmfLx/WdKd3AjwPu/H5VDpUf+aHAM/DygD+cdRaGCMC
PA9TAxhyexx/hi7I8zAwgNFd4lcc1QR5Huxx/1Sl6ld6gjwPHQOQmRufscdK
kOehbgCLjIrNZ7oI8jyUDOCnVMI9FV9BnoesAcjO2RX1c54gz4NuAJaP30q3
xwnyPEQMYOXr+FfNyYI8D9r4eC74vW/NEMQ+uGCect3iQ5Yg9sEFjXLxF8IF
gtgHF1y5+b+sygWxDy5c8lfZvpwSxD64cGOVTPn1ZkHsgwt3XvttUnspiH1w
QVXxhkjaV0HsgwvLJSKCB/sFsQ8udIV7bdssJoR9cMFpz81iVRUh7IMLeUzt
llqOEPbBhZ+9T6SXWwlhH1xYHL452XqqEPbBhUer2lli/kLYBxdkpl5kfJkv
hH1wwe3fwNbn8ULYBxcCzJpiXmwQwj640M+e86x7txD2wQWXL73dkieEsA8u
7C+WrXY8J4R9cEH6JRGYUiOEfXChbaddy/17QtgHFwy3PnAx6hDCPrhQeeof
daxLCPvgQs/g/XD1fiHsgwsKkzZblYgJYx9caMlaGeihKox9cMFsL/PJgL4w
9sGFwMv6jTU2wtgHF9KZrj673YSxDy40XIxYET9bGPsY93RI9YuMEcY+uND7
unlowWph7IML98gju9ZmCGMfXHh931sl97Aw9sGF870ZFW1FwtgHF3Q2D6/W
viKMfXCBaN69bnWDMPbBBQdJxydvnwljH1zw3GN2fF6XMPbBhWH61U9f+oWx
Dy7YdLk/2C4hgn2Mv9/65MX2GiLYBxeY8yQeDhmJYB9csM59q/7QUQT74MJV
E8n5VV4i2AcXbgldv3IhTAT74MLSDH+n6ngR7IMLkndmijzdJIJ9cMHx/mxj
kUwR7EMfFn52bXDLF8E+9EFHUPl39iUR7EMfJN913Ra4I4J96MOeTbJzUp6K
YB/60B9AuyvWJYJ96MPxwnnGZwZEsA99WPHqx4k5kqLYhz6sbb9oo6stin3o
Q4f1dYV+U1HsQx8OFkfP/ECKYh/6oDFLY+h9gCgxsfxu6sNhlXSnfwtEsQ99
uPEuwUhnjSj2oQ/3lDrehOwQxT70Iffu5zVnjotiH/oQZfFLmn5BFPvQh0m/
1lxPBVHsQx96lpvkSz4WxT704Zfzt2dnP4piH/rgP79hXXi/KPahD0/K/hbp
S4phH/qgO/1TspCOGPahD67V5tJ/zMWwD33YmJOXOjRNDPvQh9n3zH+qBIth
H/qgB1Jr3ePEsA99+Cybabdngxj2oQ9eFTO9uvaLYR/6kBQ/3BpSKIZ96EOW
46HPr6+IYR/j813ocG5doxj2oQ8SJtMdTd6IYR/6sKrCqar3txj2oQ9bX7xz
aBUVxz704doqw67bGuLYx/j7v7N99cBUnOcxVR+cN8bZ/5gqjn3oAyEVqKUf
LI596EOmbvXpFUvEsQ996NyW/efZJnHsQx9U64xNArPEsQ99MApoX/yxWBz7
GB//nGkte6+LYx/6cOWt+wbfR+LYx/j4QgayuJ/FsQ99CJIstFUdFsc+9GHH
3uYMHXkJ7EMfFtlMLpyiL4F96IPDriflKx0lsA99iKXetN7yk8A+9CBIv17f
OEYC+9CDT6WWj8+mSGAferAxQGpwaqYE9qEHqQWr63qLJLAPPaBNfjTteq0E
9qEH4szr53MfSWAfevAoXZFxvEsC+9CDxWM/6i6OSmAfeiBqWXrhlRId+9AD
K5dORT1jOvahByHBsYoZLnTsQw8yDEIf0ULo2IceWK9RWn0ono596MGRbHPO
9K107EMP/onsFZQ+Qcc+9MCz1dv2ZwUd+9ADx2lPur7do2MfejB13r0pop10
7EMP3KPVw+z76djH+P6s+LNsm6wk9qEHr+lPjvzUl8Q+9EDtxHLBVc6S2Ice
/NJpbVOaLYl96IFFoZPDw2WS2IceyHx1DTmzVRL70INpv+tDsnMksQ898Dr2
bkFJpST2oQcRZiJFT5olsQ89OKXw0VXrkyT2oQdPPLfEp45KYh96cEzfxFNA
VQr70AP552uEcs2ksA89MNKdeWfODCnsY3z+nz2rsYiUwj7GX1/IkeWuk8I+
xt+Pivthf1AK+9CDr07zMuJKpbAPPdBSfkOrviOFfejB45Nlu/TeSGEf417T
3gSW9UthH3pw3agxY46CNPahB23d+gFME2nsQw/+OvS/F3OTxj70IOnE0Tjp
CGnsQw+U1KqULNdJYx96kPA9UH51ljT2oQdPfRv3dVyQxj70IFC5iZp3Txr7
0APplLDWsffS2IcefHz5uu/mqDT2wYEtK8VDi9RlsA8O5Kj3WJ+1liEmlstP
DrQI/b30wFcG++DAnL3fJJSWyGAfHLAe/RO7LkMG+xj/vcc+IcF8GeyDA5fe
HpY6d10G++DA/pQZV1Z1yGAfHAj96Gwb9UcG++CASvNKSJSXxT44wDziuu3U
JFnsgwM0i3jo85AlnCf64MC7T9Kn4mJksQ8O0J3OhAttkcU+OEDeZphRubLY
BwfO0epnnKyVxT44cGbKjHd5HbLYBweoFZRlw19Z7IMDnENtV8XpctgHB2Ze
WNtNqclhH+N/X7bSewdXDvvggFAcZ2iBjRz2wYGzpJZ8oKsc9sGBA2f1SgNn
yWEfHKg7TX6JiZbDPjjQbFH4cXeSHPbBgTv36+rubJbjeSRywOCjzQH5TDns
gwN6S7o3JObJYR8cmO7Yl/vuohz2wQHF4nyVWEoO++BAyMBmmkCLHPbBgcTv
wevPv5bDPsbne6peybLvctgHB7aa6Re5jMphHxzI7X90wFBGHvvggEb82716
OvI8jykc8E8mayabymMfHNDJZ02e6yyPfXCgqLBP96CPPPbBgWd9Ucffhstj
HxzwCphzd2qCPPbBgR3BQnerN8ljHxz4Itl8zXW/PPbBgcbV0Xc+5cljH+Pr
y7pSNKdcHvvgQL1U76nYm/LYBwdMd+6v9ngsj31wwCVreiL5QR774ACbTv/i
9Uce+2BDzHyGe4KoAvbBhgAHqQtnVBWwDzY0Kx51+WuggH2wgdbxRC/UQQH7
YEP5Xo1NT2cqYB9s0PgrnhQbpoB9sOGh1Xa2fIIC9jH+++R7Vx+mKmAfbHAq
cQ8+c0AB+2BDnOxdzqFCBeyDDVcFQ92zqxSwDzYUZs/7WHVXAftgw8n5q/S6
nytgH2zYMJptavtNAftgQ96InMHxMQXsgw0uKxfbqyooYh9sSL61dec5jiL2
wYal/kemhdgqYh9sCHJj7NH2VMQ+2JA/s2/f0DxF7IMN4t72q34nKGIfbLjl
GBsjuEUR+2BDw2PvPcaHFbEPNnhGSyrFlyhiH2xQzFLVu1+riH2wwceW6CYe
KmIfbAhTLMpsea+IfbBh4FLDtLX/FLEPNsQ6JU+aIqmEfYyPz+njOk1dJeyD
DayMwyFKVkrYx/j7SST0ct2VsA82fDt3Pnl2qBL2wYY1xt+V8xKUsA82nB40
HBBOV8I+2BCvV+239agS9sEGjk3gTOZ5JeyDDZracmodN5SwDzboaS7+VPpU
Cftgg90F+08nupWwDzZwN4N7CU0Z+2DD9rA8x0fKytgHG7IZnb9VjZWxDzYU
VPw8uY5Uxj7YYCZQuHwwSBn7GF+fw7Y5R5YoYx9sqM4KmBWwWRn7YEPmDaH7
RkeUsQ82FKfVWzDPK2Mf4+P/upmafEsZ+2DBqMHOM7EdytgHC4yzT+nU/FDG
Plgw9HRgjpGoCvbBgmf3rPdVa6lgHywwqF/Yt8hKBftgQU6+Akz2VME+WMB8
Zm3IjlTBPlhQlOOwyDxZBftgQbSKeEXYPhXsgwUuCf0u54pUsA8WVMq88VWv
U8E+WNB1Q1y5uE0F+2CBz3enxuBvKtgHCx7W15UaiKhiHyxwTvfp09BWxT5Y
sPaU0SvTyarYBwvcNeULFnirYh8sOH6JTKtdqIp9sOCM3borNhtVsQ8W1LYI
pD4+rIp9sKBjWp76wYuq2AcLpEIKb666q4p9sKBb+0N1Sqcq9sECyrfO+fSg
KvYx/vqCZuZvRTXsgwXLFib+ip6khn2wQCz+et6Amxr2MT7+4cy3lyLUsA8W
hP6Q6j2wTg37YMFT59caR7LUsA8WvF4z4zhcUMM+WEC3YV2VvaeGfYy/LnxW
mf5eDftgwTTa0g7dUTXsgwW/9VJiO9XUsQ8W0DQdS+5ZqWMfLIjI3/Cu3Ucd
+2AB+3F5qGycOvYxPr7LH+ct26qOfbBg6ZsG0948deyDBVNYJRqnatWxDxac
n7Qxbk27OvbBgsRpnbGr+9SxDxaEdStGnpTTwD5YkHqelvvDRAP7YEFyq1NC
nIcG9sECBTZdVzZGA/tgwd7akOFXaRrYBwvEn94NepargX2woCC7dN1QrQb2
wYTpQvRrns81sA8mSF45sejOPw3sgwmHfj1rXaKsiX0woTO+a6azlSb2wYRr
YVUGU/w1sQ8mzAj+fC02QRP7YEJu2Ns5N/ZoYh9MaHvTEOxeqol9MIG6vU1y
6L4m9sGExyktjS+/aGIfTDispPKzR1wL+2BCybwTD40NtLAPJqgJJ9Qfc9fC
PpgweDfW2HaRFvbBBOcS67nC27SwDya0aPpdEDijhX0wYYefdLpZgxb2wYSI
NYfs9n7Wwj6YkCbTbagjro19MEHXrqfqjYE29sGEaapBxGMPbeyDCVOtb7IH
4rSxDyYIfqm4479bG/tgwpknu7a9Oq+NfTDBMvhY04kWbeyDCUrKCgP7fmlj
H0x4kqaedEVRB/tgwo3kmzmKNjrYBxN+PZB/Xxiig30w4b2AwNklKTrYBxPY
b1JDY0/qYB/jvo7rI4/f0ME+mKB18bm+yEcd7IMJIpFbVIvEdbEPJow9mp+3
0UQX+xif7+vhZvv8dLEPJtz5sdqqfaUu9jG+PoizWnOP6WIfTJizXnyecp0u
9sEEs2UV0fT3utgHEwLj4x9rCTOwDybItX1palVhYB9MKFoxGlJoyMA+mHBx
7FtFlhMD+2DCopU7VQp8GdgHExrLbKElioF9jI9H81uPxmoG9sGElR62z9N3
MLAPJnwps6+XzmFgH+PjCSn7UVnGwD4YsC3r16ENtxnYBwMCb/3oX9DOwD4Y
IKnsOGdpDwP7YMDBIKH+gzQm9sEA0Tp11ZdKTOyDAY8bf/dPN2RiHwwI1Sl+
+2AKE/tgwKG5g/LrApjYBwOmKge2ui1iYh8MCLtVHz15PRP7YEBMuYqsWyYT
+2CAmsAl9bVFTOyDAV/P195/cI2JfTDg6lGxOPdWJvbBgOfHtMj3n5jYBwPu
Zzsezh9mYh8MuF4VVrVVgYV9MCAtyrZ7twGLmNjcSQZ8Pu6QetWZhX0wYAHj
2A3xIBb2Mf5+59yGNyxhEfsndpABH6cMbVBLY2Ef4/9+8eRD7UdZ2AcDfhY7
ZdZdZGEf4+9/nX3zfj0L+2DAZeXG5JFXLOyDASoO70WD/7CwDwYccftR90yK
jX0w4G+se98mDhv7YMCZxZpDvk5s7IMBbU6rDGbMYmMfDGg+4fgodikb+2DA
kvPWvhXpbOxjfDzF4v84OWxigsOLMX79NZ11o5KNfYyvB5Ewo20P2NgHA/ze
li1e85mNfTBgse1uxwM0DvbBgKcM4+Fn6hzsgwGxebXiHlYc7IMBxscWUh+9
ONgHA87em7bpQgwH+2BA06PE4oJUDs9DhwEXPERO3MnmYB8MmP5Es1apkoN9
MCDZ/8mSzBYOz0OWAUZSwbJOXznYBwOcB59JKovoYR8MeCua3aDF0MM+GCC4
+HdJoKMe9qAL10S8NGtm6xETfN26IPvGaKtfkh6ud10Q22cWoLpXD9e3LmS3
aHyXOauH61kXHGVb79jW6+H61YU6hXD3A+/0cL3qgmlhf6fOmB6uT11Y4Ssq
+lpTH9ejLqSa6Oo9tNMnJpbfMV2YekW+4k+QPh6PdYFZ9Ynhu0If15cuLDL9
+Onlfn1cT7qQsejwutwL+nh/RxcmjdwLPNKkj+tFF2bTsrtvf9XH9aELR7kJ
tQYSXFwPuhAhKzL1FpeL/rqQvCN+IMuNi/djdEFgRD3y5EIu+urC4adt/W/S
ueipCwoSbS5zC7l4fNMF3dxLddK3ueilC6rhKb2D77noowu9a4sXsoQN0EMX
5oaankjnGKCHDkSvWa/LcjVADx04Y79l7dBCA/TQgT5a9WT5bQbooQPvTHU7
o4sN0EMHVnm60/vuGaCHDmywCXG52W2AHjqwLEVRrUXaED104O7p50xNc0P0
0IGTVy/3FgUYoocOyFcGclasMkSP8fe30fBKPWqIHjrwSp8p0nLNED10gJk2
pXv+G0P00IFRO9ETVkJG6KEDEeznVZ5cI/TQgXipTy9PzzRCDx243GZU7ppo
hB460FG+pd3okBF66MCsNaUDQTVG6KEDbZIzrje8MUIPHVja9ak5VcQYPXRA
/Yp0+2ZjY/TQAQW6085Gf2P00AHdSb1Z4cnG6DE+fvnrZx1zjdFDG04EWaVG
1xujhzaYxog2Pf1mjB7aIFUn7H5Y2QQ9tMGSZJXmTzFBD20ovbjp6vBCE/TQ
hq3Tk4xP7zVBD21YG76r/sQVE/TQBr/Zed4f3pqgx/j7L3uUsZ4+CT20YfDV
YYcY60nooQ1sccoqP3wSemhDwK1UwmLHJPTQhj3NGycpXZ6EHtoQFNbaMvPN
JPTQBv82maF2uil6aENs9qyMWhtT9NCGqdJ+M/9FmaKHNnQXuevv3GeKHtrg
4MD5u6rWFD20oWDOuhPXvpiihzaUvzs4Eqpqhh7asOLiWlqIqxl6jI8vfmRv
2Qoz9NCG8/m3DsXkm6GHNkTf8xZOaTVDDy04H5QWs4Zmjh5asD7uVFKkmjl6
aMGZExdZ683N0UMLdo2F9jXMMEcPLThX+zrGNdIcPbTG1//oYN9ac/TQAu1X
KlbPDpijhxYcyNI62HPOHD20YPv7wrzJd8zRQwsULn99V/HaHD20oLfhybsF
/ebooQWJbUNGXgoW6KEF5bVl7otNLNBDC2raBBtq3SzQQwsKg+vt3CMt0EML
zDuyTSXWW6CHFnh3/3IUOmKBHlrQ2qz8d3KFBXpowU1n875TzRbooQUHF/i3
uH+xQA8tePR4NctAxBI9tGBD2YGd05iW6KEFC7oPFGVPsUQPLZA4EatqOtcS
PbRg5xrZ1NHVluihCYELDm2VyrJED014asxqCSm3RA9NaPUYE/nwwBI9NGHK
89y2Cz2W6KEJ+08Xd1fTrdBDE2y8+v+JGFqhhyZMzrxYetDdCj00ofS2fV10
jBV6aIKBT9D71Vut0EMTPIK12poLrdBDE5hHpH0X37ZCD01wdlaW9fxghR6a
oCV8uC1R2Bo9NOFiUNLC1xxr9NCEL6eV0w+6WqOHJlS+2TCwP8YaPcbHPzh9
/7Nt1uihCcUXzyrHllijhya8n3VyzrRGa/TQhHNtd03jvlmjhyZktx6OeyU7
GT00wf/l1I85lpPRQxN637xZWxo0GT004fupaFH62snooQlOceVLrpyYjB4a
sKGpcE8lTEYPDRg7oBUo8nEyemgAu1Gk6IyEDXpogGFvzIocUxv00ADbGUvO
fQ60QQ8NKLGOd9m21gY9xl+/EjXZkGuDHhoQ26K48P4dG/TQgA/19V8SemzQ
QwOWHy2riVe0RY/x/bNoftHgYIseGlB0ed+s9VG26KEBche+m+3ZaYseGnA7
PHH9UIUtemhAk5at190XtuihAbR66co+YTv00ACzaSsfbja1Qw8NOKNWei0x
xA49NCBM4M6Rm2l26KEB2pklO5LP26GHBug8N6452G6HHhrQKK8wW1nYHj00
YMiMvXfUzB49NGDLFqsjfvPs0UMDsmwszkrtsEcPdTCsNRe2rrJHD3WgdNd+
anhvjx7qEGS2//A9eQf0UAfjNW7hDqQDeqhDtMitXZoJDuihDs++7l0ef9IB
PdRBfVlejPUDB/RQh8KXC+vjRx3QQx2+jrX81DFzRA91EBGa5+kW4Yge6tDQ
oeX0KdMRPdTBZeyWFe22I3qog8D6koJDfx3x/FwdrNQfCxYbOqGHOjwqGGyy
C3NCD3U4q3swzSPTCT3U4dKdpuIXd5zQQx2qC4/c+znohB7qEFtVuGKn+RT0
UIdF1gsdzsZMQQ912PZbrMo/Zwp6qAMnZeWWtCdT0EMdDp6aNt1Zyhk91OGL
VeXJjOnO6KEOpxfnTwnb4IwearArZ+nDW1XO6KEGoa2f6bU/ndFDDV4sJE+7
GxPooQa5oS9CY2MI9Bj/90HmP3TzCfRQg/6VJ9iJrwn0GP/7LYcjzkuT6KEG
FgvK7iWakOihBls4CdZbZpLooQZ53Xt3fIwj0UMNXicIXjq6k0QPNbg45erx
nLMkeqhBgtlssz/3SfRQg1cJX+bkdZPooQYB0jvE8qRc0EMNplNd7D+TXNBD
DWwEO47l+bqghxokK5cHFCx3QQ81SCs6OXn0oAt6qME18af6FVUu6KEGuy+c
EIUOF/RQg1aWfpnBiAt6jP++y76/hzEVPdRghs/hc9KuU9FDDUSmC+zZtXgq
eqjC/Li+gEV7p6KHKujkNBWeujQVPVRh+4NwVceOqeihCj4ljQbWY1PRQxXW
rolw3KM3DT1U4Xy46z43r2noMf6657RDxIpp6KEK/dmfdZ9nT0MPVThoGdF5
6eY09FCFST8etvZ8nYYeqhCscfHtFsXp6KEKT8//Tl3jNB09VEE3unr7nYXT
0UMVxB9sFluybzp6qIISQ15uQfV09FCFynrnpHPvp6OHKmiq9s53kHFFD1WI
bOv4J2bvih7j22+yLhNf4IoeqiA06Hpy0j5X9FCFmV8ZJ6NrXNFDFe5UWyQd
+OiKHqqQtX+r7gk5N/RQhb3MNtMwRzf0UIVh42Ti4kI39FABIiLjcuI+N/RQ
gbcLnmoevuqGHiqwQ0OzyrPTDT1UYIPV3ve6dHf0UIHeCLnjk63d0UMFwgxI
NVakO3qogAYnNHb+AXf0UIGr0fnXV911Rw8VeO3hPJIrOAM9VGDkw7zn3sQM
9FCBVf19z/vXz0APFdhstkrgZM0M9FCBWYyDZ2/9m4EeKvDxMM3dy9oDPVTg
WlWNjEeiB3qowJGwiksvz3mghwp4Gqu6mXz2QA8VeHK7vz6E5YkeKvBu1Vm9
DWGe6KECwWeczS8c9UQPFeh32uYw9NgTPVTA4mpRT7zsTPRQgeiU1jHZmTPR
QwWofc1POzNmoocKNGgN//hwcyZ6KANVscdadWwmeiiD8s4XhisdvdBDGXqb
kiT+rPFCD2Uoehp6a/9lL/RQhswyiW+Ov7zQQxmsNPxPdk3yRg9lmFH1yCkj
zhs9xt/PbMFkgTPe6KEMR2FS/tT33uihDNuVQl6Y6fqghzLsvuL0o2SuD3oo
Q+FZwdHdh3zQQxnCB0NWXGzxQQ9leP0yQ7VT3Bc9lGHrV6sfX0hf9FAGj87h
19vX+KKHMmT7DAonlfqihzJkqWVXeb3xRQ9lsKjVz2gX80MPZbh0QCPhgI4f
eiiDXVWg6G4rP/RQhg8vnX8nuPmhhzJ0B/qXtc/2Qw9loLUeHPJa4IceylDR
5TnNMd4PPZRguFmou3eFH3oowc3v6/+eWumHHkoQ8SjltEuCH3oowQ/fiNCs
KD/0UIIV688OyHn7oYcS2AnmZraY+KGHEuxvyhh7NeqLHkogOHZk1sctvuih
BDIH2LkmnT7ooQRzardnG0vzPZTAJsrKtGXICz2UoKLS4fnTnJnooQS6alSr
yVsP9FCCx3N/msSfc0cPJYiXFTzP+cA/XimB0YJ15feX8j8/lECLqXhvVbAD
eijBmZ0mR5gW5uihBIn1SRYWxfj810oJ2jSDNCXWalM8DyXI1H59M9nckuJ5
KMG14vS02TH2FG/3lGCphWVReJMDxfNQgiKjrGm/8idTPA8lkNc535XmrE/x
PBQh52RHeLuAEHooQnXn2Z/XDvKvBxUhdd+i46zhKeihCH+XG3Ry+qajh+L4
8UZOUVLNEz0U4eI8zfsLkn3QQxHkut9qxaj5o4ciFDw7FBR6MQA9FEGtYKd0
tMws9FCEhcxpzhfJIPRQhFIdj71BvrPRQxG+t/UHH3IJRg9FCA5fmmGiHYIe
isAeyY4q+hSCHorgkFxfn3NqDnoowhajy8a//eaihyJ0Phab9OvvXPRQhHwL
4szqQ6HooQi0uVSSiOk89FAEy4Y1S5/fmId9KIKCRDt7yD8M+1CEuD9g6/Im
DPtQBOJBk0l0XDj2oQjzqmmzh3rDsQ9FUJRbMm3P+vnYhwJ0xP0WdRWMQA8F
WEwNvjV0i0APBXDOGJJm7IxADwXYdqAjzPtBBHoowO/lkasfK0SihwLEfNTd
8zA4Ej0UQIZ9cmx+TiR6KIB/RvPD7PeR6KEAXc29ckeNotBDARJS3ayXJUWh
hwI8+L4l1PRaFHooQOgOo8zvwtHooQDD7YtGKN9o9FCApPh4hcvHo9FDAQSr
9la86IpGDwX4UmXi7267AD0UoHdFsqzYtgXExO65K0Bpd2GbUfsC9FAAX3+7
xTeNFqKHAvQRf1JfbVyIHgrwmdbwdNeTheihAFFrJOxeGceghwK4iq7J6kyP
QQ8FWGcyJFnyJgY9FGCJdu7QNKdF6CEPB15cl7iVvQifb8jDeqEzFrZDi4h3
Ex7ykO3y6EF5WCzxdMJDHsQMb5yZfjOWd3+8SR5kCkr6BQwXo4c87J1N2zic
uRg95OGYfP9G95HF6CEPa6Ml2v/GxaGHPPQpZYnovojD5wvyMEI7Z9rmvQSf
J8iDzld1c7NbS4j0CQ95OENePjPNcSkxsXvr5GHJ3KExw6ql6CEPv+YarR+0
WoYe8hD7s3L6g8vL0GP87zV8VlJ28eghD/eiE/W+UPHYhzwIuR9LXeSZgPfz
5WHZALsxuD2BsJ7wkAcTs5WOPdaJBO9/l5GHxseBx9I3JeL9eXl4kFK6QaQp
ET3kIdHIWjVVYzl6yMPBkg0+okuWo4c8XJE0eHj2+nL0kIPysCLVzQpJ6CEH
gb7n1uUsTkKP8dcrXScr30pCDzmQK6tePaqzAj3k4Ogio4TEDSvQQw4GHDXD
t7xegR5y4ODz7pTf1JXoIQdZK9Tv/i5eiR5yIDidnbtVYRV6yIH+8Y4Z+ptW
oYcczB9Y79P7fRV6yME9h9FKqajV6CEHNQF1alntq9FDDoQs3l0rDViDHnKQ
dCb0bMrDNeghB+GcxofcgGT0kIPm+ZGaz58lo4ccZF/rPnQ9ci16yIG1psPe
sR9r0UMOUhfLV7ekrUMPOaj7/m5OhEYKesiBjVTGsk9VKeghBzpCdu3HQtaj
hxx4M0yOVI6tRw85kOeM/llTugHnXxbWSkbeZc3fSLRPzLcsnC9aVjykuom4
PTG/smBSN2rv9WwTUToxn7LgR79vX+6TShydmD9ZYDufWj2jMhXnSxaEn7GO
H9HdjPMjC1/m96g179mM8yELL/RFnTVoaTh+WYjtrlhyaXUajlcW5ixWDnj4
K41gTIxPFuz7DS1Kl28hxCfGIwvzNE7pZvzdQvRNTIgMBIXbhZxKTSfeTgDJ
gO9Fl72ucltxvcjAlIU6ntTprbg+ZAA27fKJcMnA9SADNR1XxFLfZ6C/DFQF
O4ms372NWD8xoTJQX2qRetVpO7FgwlcG/ATufs/r2074TWxQBuRCe4uKL+8g
nCYmXAbUVf5kztywE71kgKNz97eM7y70kYHVnrUuaUa70WP89a3XuqTcHvSQ
hopDxgt/0PaihzR4X/vlNX1kL3pIw9m7Bu9oQvvRQxq+bylOGNmzHz2kIdjv
qROdkYke0nAz/Wx6QXUmekjDJOWaWX6hB9BDGqZP7asoEDmIHtLQOWNy15Tq
g+ghDZoHxP40r85CD2mIL26xUSQOoYc0WDqXTn+jcBg9pMCt8KCUWu9h9JAC
85FKh5q3R9BDCman9f198fIoekiBzMco0bKuY+ghBQ8PzYvcIXIcPaTAWP2p
/xvrE+ghBeeXz7UISM5Bj/HXzLp3Za0n0UMKmlYfydrEzEMPKZhZkZXm/DkP
PaRgu5dRYfC1U+ghBfmVL5utc/PRQwoqp0QylmUVoIckkEJNvxtPFKKHJDxo
fzAcUnMaPSRBeJKWcNSPIvSQhMtOwhEZzsXoIQlNhWU1t8+WoIckeH8nM3fZ
nkMPSfh8xVC5uasUPSThz+Knjqq3LqCHJPj7BaW2LyxDD0kYSM1UmJ9ejh6S
sNHeenclVKCHJDQHE4fkdS+jBx0kVp7oWlxYiR50uMl56Z03+wp60OESMcO9
yqkaPehgEn98n+z8a+hBBwv7jtT6huvoQYf+m1ldu1wAPehwq954yd+WG+hB
h8jlKV/djt5CDzp8XLR+xe3Td9CDDkxPwe540bvoQQdPy6jPNxrvowcdjM1a
ZpRLPkAPOtAKj0n8+/kQPSTA8rdpOtg9Rg8J4K6yFY3obUMPCXB3jEm+7dSB
HhJwbNrTmsu2r9BDAuKtp4yai3WihwRcLjpQcbH/PXpIwMFfVqohOz6jhwSo
jVW+8G7qRg8JqD6/XC4u4id6SEDVW/OzPVq96CEBj5VcX3Pf/EGP8f2Nse5s
cOxHD3H4+Xymk1rpAHqIg+9Cm/dwdwA9xCE9XqZafEc/eojD9giVzQ0z/qKH
ONwxmnExeW8veojD9dGls+SafqKHOKhJzvY+trMHPcRBcOU/gWnGXeghDjl6
TRLfNn1AD3GY5PMkP3ZNJ3qIw1vNKnXV36/QQxwednBnL2zvQA9xeGEawIhd
/RQ9xOCevIqSZTHfY/y11QrNR36t6CEG14mv4gcqHqCHGDBDR288Cm9ED7Hx
9bV4aumOu+ghBmNaR+3madWjhxg8Tn5xtF74NnqIwUDSncJ465voIQYxhO+n
c7mAHmLgcSnyi+a6OvQQgwuddvPvStSihxiMzsztuNFZjR6i8OjsdLWCf1fQ
QxQWcIZ+NU2tQg9RCFfJuiBTexk9RKEiUVIqMuwSeohC7YeMoovMCvQQhTrd
qvTzwuXoIQrWj139KwTL0EMUvERv1DlZXEAPUVg59EFu+7ZS9BAFiQ8mu88K
nUMPUbCiUmeXnCpBD1GodCWZCuHF6CEKYjT3F58mn0EPEdDaVdC1W78IPUTg
L03bnprEP16JgMGGFdVpHoXoIQLPn56u0kouQA8RGIxzfEu/mo8eInC7Y+TM
sFg+eojAStv6xuaYU+ghAvRJrzo3P85DDxFYoJJ3n/TOQw8RONmy9tOZolz0
EAFaQPO1GfdPoocI7G85154kfBI9hGGuPPtD4qwc9BCGBWe77e9Xn0APYXjw
dvNh1/HPA56HMGwP2/P8263j6CEMIZeHmOqL+Z8fwiCVfc8tiXMcPYRB28xt
ifC/bPQQhin0jZ/c3mWjhzA8v7ZUUq8rGz2E4ajDMaN/9OPoITx+fn8kYbb3
cfQQhoec7a9PlR9HD2EICpFu67M7gR5CcHTzq8bZnSfQQwiU03/JLC7IQQ8h
OLOd42ez/CR6CMHWIzr3Z9vnoocQfLkgceP3j1z0EIJ1e4uytLzy0EMIIg+s
/7s7Pw89hODHnXdG/uKn0EMISpIV4hJ3nEIPIbi1j/Viqlk+egjBiV+LV+oK
FKCHEDw5ZXz9vkghegiCDtRcvDH9NHoIQui2zul2DUXoIQjlQXN7eo4Wo4cg
9C3ukh26exY9BOFWadCh5rjz6CEIOb7T/hbMLEMPQdiR/jFUzbYCPQTBfU3U
jK+7LqOHIGhkTCubFX0FPQRh6djXK4Yva9BDEJ5cy1Hw0KDQQxCUzYq2XGPe
RA9ByG/KEfR0vIMeAnDwxtAnm5d30UMA4jt/bT/Z1YQeAtA35nUhbNtD9BCA
QnkLsWmhj9BDAAbaN3Zn7HqMHgIwr6Bb7sOtx+ghAFE5VUaevx+hhwB0uCgd
ZgS2oocA3Lf7UVWQ9QA9BMBE4cIp7ej76CEAid+zz83fXI8eArD+W1xxre4t
9KDBlWyNS8FugB400ApZWXHs8TX0oIHJ+4bVjT+uoAcN7BvuFT65dhk9aLBX
f2wwSoV/vKIBGPvFzW64iB40OLaA67JcoxQ9aHDt6KtFcwVL0IMGtpneN1qi
itCDBvWGVcc26BWiBw2+WwWeqLTLRw8avA45vCJ2bx560OCxgcRQuc1JnP8x
qqRts8Fw6XGibGK+xyh1J+8c+eXHiO0T8ztGnZP8eU56zREiZGI+x6gRt0mR
1pWHCPOJ+RujPKzCWtLYWThfY1Rej7ZvyLUDOD+jlNlkmZeWazJxPkYpoVvn
uOsC9uP4R6mA3N1GpQf2ErET4x2lOtstvbTKdxPkxPhGqTFfraE3gzsJuYnx
jFJ5d8tc1izZQXRNrKcR6suI0BeDsW0ETKyfEcr6sfWOnooMXC8jVM0b+auh
6VtxfYxQZZMXFpYsT8f1MELlrC9flrd2C/qPUH1hU4QKjqcR/RMTOkzl21yv
Knu2mbg74TtMpTYuuxdtupnIm9jgMDXyovnVi7xUInliwocpmYXlAqvMU9Fr
mCogh0xZtZvQZ5h6+GFNk7X/JvQYphY5jvS/UNqEHkPU8LNWGr1nI3oMUWyl
THHz4o3oMUSRJVeSo2Q3oscQ5XCsZYPQn/XoMUQJs8j1s2aloMcQdb+uKPR3
wFr0GKR66JpTUgzWoMcg9Uny0VmaMP/6e5B66e1b6yCwAj0GqT+dFqJCxsvR
Y5D6uy74y1uhBPQYpD6ENl4qEFqKHgPUQUiseeWxGD0GqMqyoszJjTHoMUCt
kPzaWbBhAXoMUOHVHUCFRKHHALXLajkUBUWgxwB1flLpcMareejRT91+nHNQ
l5iDHv2UmdU5qLkbhB791Ee1ycv9VgagRz9ld+B4yN21PujRT1kdEdc76jQD
PfqpdlNBZwkj/vPBfipxNDbdPtkOPf5R7WkWuserDNHjHyX+SXlLzvR/zjyP
f9Rfz427t+9gUzyPf1SsUG3az6fWFM/jH7W8bl7g0bsExfP4R02/JkXd8HWl
eB5/qQiN9RabyjwpnsdfqqdVpCNF2I/iefylBGZ369ScD6B4Hn+phCXmK6WD
giiex1+qKb1n3bqhYIrn8Zc6veyjwOCpuRTP4w91JXmPXYpHGMXz+ENtX/Xm
0Mff8ymexx8qMbqE3OMbSfE8/lBC18QWppyJongef6i7P5SGSgQWUDyPP1Rb
0der6eELKZ5HH6UwO+PR6roYiufRRykGbl/XzYyleB59lFCSVqjPjsUUz6OP
+pnzW1zqTxzF8+ijnq/qWn5g4VKK59FHLXv5YIb/i2V4v72PKo3anVAzO4Hi
efRSN0+HmzOXJlI8j16q6V2Pl7n5corn0UuZ31oqdPffcvTopeIUGFe5t5LQ
o5ey9XH8u//ACvTopQpelZx1j1mJHr8pS/PQyAPOq9DjN9V2fPfWGs3V6PGb
evp622mp0dXo8ZtS/xhY0/5xDXr8pr4/erki6XEyevymZiUwd1o0rEWPX9Tx
z6OKSTfWoccvauol8kPWzRT0+EV9NC/5NnZ/PXr8olZfvXpB58UG9PhFeayS
Korq3Ygev6gfEawuJj0VPX5SNizno4zcVPT4SW2Qcqz4abcZPX5SHeYf8zue
bUaPn9QsDcqLuz4NPX5S3/xaFhnpb0GPn1RmceBXu6db0OMn1R0xN+XC7nSc
/x/U0ZaInz0eW6mIifn+QZHbHZ/Nk8mg5Cbm9wdFxVVKxz/PoMom5vM7xU5L
iz16YRsVMTF/3ylpw7lL5u3ajvP1ndqZ76k0ffkOnJ9vlHlmXu37iJ04H98o
S105hRdzd+H4v1G/lUyNn87fTT2cGG8PtbCjqmZv4h4qdWJ8PVSDcsHC5j17
KcbEeHooKMsjl1zdRz2cWE/d1I8kzeslyfupVN4DA0qA3nb8plYmrpduir3h
URv9Xiauj69UvekCW/WNB3A9fKXu3G6QP+B0EP2/UuVd5FUDkSzq58TmvlBl
R66bnmrPovZP+H6hko5vkn905RBFTnh+oZq/7KkrKjhM/ZyY8C6q8pB9IzPn
CHp1UdYL21vnnz6KPl3ULq5UUfb1Y+jRRdEKD9Mmfc5Gj8/Ui66fVYfZJ9Dj
M9X1/ebhzStz0OMzdXubqmDDi5Po8YlyXbrO9tqkPPT4RCk/k1n3fTAPPT5R
AWZAb3h6Cj0+Us99noheuZmPHh8p29p1P8KhAD0+UvqKYrezWgvR4wM1N31s
4dL+0+jxgUrPmLfbxfYMenygxmT+HL+1vxg93lOSIwYPhcTPosd76lxWnX1G
3jn0eE+VpIQ6zQ4/jx7vKDGh+fN13S6ixzuKcuLC6Qtl6PGOytd7/kaxrRw9
OqlGpZRf4hqX0KOTEpn9x7J982X06KSWezHkTshXocdbSnX74VORLVfQ4y1V
Jj7Jd/7NavR4S0kmFj2x772GHm+pPekuv0KX1uH8v6F2z/xtY5UDFEzM92vq
lWHv6HybmxRtYn5fU97/wlZzJW9TERPz+Yq6ccuk3ZpbT8HE/L2kcl2cL4sd
u4vz9ZIqKGvqr0tqxPl5QZlu7/ih2/gA5+M5td7a6dOK+a04/udUVoqzr0P1
YypvYrwd1Cavi/IfdjylaBMPfNqp2TuiRRd876DIifG0UzXJl5aV0F9TeRPr
6RmVrXJXWmRrJ0XjPTCjop70WXze+wHXy1OquDJtS5FjF66PNmqB3PGBpBM9
uB7aKFkvE1+q7Sf6P6EGnwsf+HW0l3o7sbnHFJOe80hh1l+KMeH7mHK3evnE
7FA/lTrh+Yi6dWFQ6kHbAPV2wq+V+pD9t1KlZgC9Wqnrx74J3fbsR5+HlLpH
jY3Zjz/o8ZCK3nBVTca0F+f/ARVyNPtbZdL4/kzMdzNl8sc6Nry3m6JNzG8T
tcGhTVri0mcKJubzPtV+e8k1E70PVOrE/N2jDLMafM7adOJ83aVSWemZ9JxX
OD8NlJ5CwKXe4g6cjzvU9UNxr7vH54k3/tuU47TzIw6XH1PkxHhvUU9/7hoV
XNVK0SYeUNygvDy+BITot1CpE+MBarP+O5/9g+PeE/tfRwVOdcs3m3kP97eW
mlSdMrxesAH3r5qac2X1BVL2Du7PFUpd+9OHe9G38P0vUwm3g6VM/9zA9yun
+lRTSiprgKJNPPC7QJ2ete5i+1yKok1sr4QKOmP39si+6xRt4u8LqdrRdfkD
9FqKxvsfeKhOdeMK7/oa/H0Wdasp5X5ubTW+Tqckj96K3fX1KnrQaH6K9Kts
n6v83xM2kZ+3fv90hf/3hFzepk2/K8dfTyygk0RuUI/n8+vjr5Un3p+Y7k1F
mQmN//3EA6QSotc9qrFs91X+/hM+TteW3I+u5o+PeFzkKmZxqIY/fsKV+2xq
vkUtf36IiIfM8zU+dfz5IyqE7i3u2AL8+SVChdvX3HG+iduvI3LIqhP3425T
wPMh0gaOrdbQaOD7EZ+9nFYOBt/n+xKiCQG9dzUf8P0JyRdO1C/1Vv76IFRc
loqMqDzmrx8i61p/s3/JE/76Ily2nQlsjmujgLf+iLGXdkSxdhtFm3hgfJ9Y
nWJ6bsqT8fXEW79EPSx9uPVDK399E/vPz4qhx7Xw1z8hfcxcNFO/kd8HcebR
0TfD/g38foiim/KhZ8Rv8/siwOHBmmF3/nppJaxdX162oNVRebw+iRmfLqoa
OtbgeB8TB8u/7hnWvMLvmxjyG4z/kXaZ3z+RPnfjwT9BFfzjA5Fb4HrdOLWM
f/wgfs/bvnek8zz/+EI8fxFQcdrmHP/4Q3iVL/2690sxBbzjE5FyIFBkytci
KoJ3/CJeSnn4bTM+zT++EavtRexf5Rfwj39EyKpXjyrd8/nHR2JlyOdChuIp
/vGTCF+zpP/NaC7/+Eq8lY9b+E32JP/4S6iFz95b4n+Cess7PhMxZTbpJ69n
43y/Ihxrtm+K9DlGMXjHdyLeOMIpcuwI//hPrGwfOFzXdJj/+UBY3czUmnTp
EP/zg/BOPvew42IW//OFeMGd+XA2HOR//hBndV427nx3AMf3ljh0KXx3gdIB
yo/3+UWcoH/4SA/KxPF2Et6VY8fD8vfzP/+IoJ3UhYa/+/ifj0TGi1mgXLeX
//lJ7FNi3qCO7uF/vhKtWfmjKlt38z9/Cfo/+eATm3fxP5+J5H0L/wzs3one
74lvZWvGRk7voMx5n+/EUYk06cON2/mf/0RbSYlH4/A2/vkBIec9X4uy28Y/
fyAqUs19izdm8M8vCB3h/QcfNm/ln38QXnnu4Qf0tvLPT4i4Oc/pwVvTqUTe
+QuRm2bvdKhnC873J+Jh+ZflLXO38M9/iGNFjPsHWtL450dE8ofMr6s80/jn
T8Sll0fpao2b+edXxJt8Zw2G/2b++RfxudNV0OllKv/8jIjy7B/QXZqKHl1E
798vP7bSUtHjC1FSlC0613ITenwhlsXuV61YspF/fkhkLxebV1i6gX/+SPx+
/PLv3b71/PNL4mRktS01bT3//JM473FjzORYCv/8lAgyL59c17eOf/5KPI4q
cefMXoce3cSGIEa18vW16NFDWPkWXfM2XMs/PyaqjX1ad2Un88+ficANl9Yc
lEvmn18Tfk8qnxvvWsM//yauBmrt1aWv4Z+fEz92LPV22rOaf/5O2M2YdSNA
aTV6fCfuBKt52uSuQo/vxFDjjge1k1bxrw8Ik+Py++qolfzrB0J7QfywctBK
/vUFESjSmJn7bQX/+oNQNXhdbr9jBf/6hHjt3Jhxm7uCf/1CTHqV/oF5LwnH
95NIe7l60uRlSVQx7/qHUDkw3f69YhKO9ycxa/PSKQrXl/Ovn4hX+89cKYld
zr++Iq6/fDXngMpy/vUXIde1919lfSL/+oxQs9y7ciw5kX/9RuRq91+eOymR
f31HaCzZpbW4IQG9fxGvoh4m/bFNoNR414cEPf7CLtvSeP71I/Fn+YiGDCee
f31J7JX7GzAndxn/+pO4F6vfMqi9jH99SuxcUZ/alruUf/1KGKb4n2jmLOVf
3xIflnltv1u6hLLjXf8SU5+xmkttl+B89xI3uaKiUXfi+NfPxKaTtY8eBsXx
r6+J4Aqf+++6FvOvv4kOuy3xaRsX86/PiV3NmozjKov51+/ECdZtRfXyWP71
PSH784z7F+9Y9Ogj1hoXrh3oWYQefcQmBQkdu72L0KOPoIW9n51lsYh/f4F4
W3Kre+RpDP/+A7Gkc8hl4cYY/v0JYt1nz6Br3Bj+/QtiV8aPsl+PFvLvbxCO
AlqLBzct5N//IGZb3Fa6a7oQPf4Q1TuhwfvNAvT4S7yhSOlNmQv491cIF/aO
d76uC/j3X4gQ+7/llwej+fdniEDnqT755dH8+zdEwHnx79Jx0fz7O4SxZjr3
Gzuaf/+HWP03rWfymyj0+EdU9O/LeH08Cj3+EZ4zZx58NScKPf4RPQd/0YzU
o9DjH7HBS0byWkckevwjrvTOtt1+PBI9+gnh5tKAHeGR6NFPNNCnxVexItGj
n7gT8fmlWFcEevQTCVpLzFdfiECPfkJ/zMh2cFUEevQTghaXB3Y7R6BHPxFT
l36VKx6BHgPEU/+mx9tOz0ePAaIm+EZCldN89BggIlt3DT9oC0ePAaJqW0Hm
ncRw9BggOo9C/l7pcPQYIE5aJQzrlIahxyCxyOYeLPEKQ49BwutO4IK47/PQ
Y5CYJT52Vu7APPQYJCDU7fQs23noMUj8mJVw3uR1KHoMEpHKnxbsywhFjyFi
7brK8hXmoegxRFxuUq99+GIuegwRzEKTnpztc9FjiJC5W/z5kc1c9BgiOt7d
3rfo0xz0GCJO/WCPBR6Zgx7DxNng59v2e8xBj2Ei+mZGufJICHoME6fPbLB9
WR6CHuP/nhIVe7UoBD2GicE156bI64agxzABOYe4Sc+C0WOYWLt2ZMrA/mD0
GCG+5Rbp5c0MRo8RwvxO3PkIsWD0GCF+fmptsr49Gz1GiCVGV/JV0majxwix
tHVgBc1lNnqMENvL7M/20GajxyhRffjko7Yb/PuPo8QmzbMnqrYEoccoEeqr
2LHDLQg9Romk5nPJnvQg9Bglhiq8d/U+mIUeo4SC8CPn1KxZ6DFG/JSQfd09
dxZ6jBES9q9bLFiz0GOM0LUwPOz9NRA9xoh7cSNNDpcC0WOMmGdYZPhnfSB6
jBFZM5rWJrsH8q8/SJ9Nx/NBIRC/70sj48t7cu+9DkAfGhnRvXLLvnMBOD4a
+eBU/wqZtQHULN7zFxJa0kqnuvPvx9LIX7tyUwxUAih8fkO+PX9sau1Hfxw/
jaxRvbZysNKfwuc/ZIndvsNvMvxxPmjk4WDulNgQfwqfH5GRlhHSmUb+OD80
UnOtwbXZI37oTSP1zzSIVz30o6R4z6fI4UpO/blCP/QXID20pR5ar/Wj8PkW
mbR7payPjx+uBwFytO5Gch/bj8LnY+TddAkVzz5fXB8C5Pzvy09Wn/Kl8Pka
OUl+8IKFny91gvf8jdxL37u+dMwH51uAVInWm8kp86Hw+R0500hh6cFIH5x/
AZIRQTr1KfpQ+PyPfOIRzXJp8EYPQXKDosyelSne6CFIlj27/HO7uTd6CJKj
zw7cSf7khR6C5JdZSVudc7zQQ5BcIR1Q8mSWF3oIkjr/3hdNlvZCD0HylsPb
b6H1M9FDkLz+Sf+jS+pM9BAkxdTPfu50mIkeguTRY+ouNn890UOQ1PvnbmRf
4YkeguRTU/LOh3hP9BAkDaoE1K1MPNFDiFSe/0xK56sHegiRzL+O0bnFHugh
RNaennK5bJEHegiRkaK+i2ZyPdBDaHx+kkpjP89ADyEyXqp4pUDxDPQQIv0G
ti2WWTwDPYRIxw0f328zmoEeQuQ3Tnjnwh539BAiVz0p6c+94I4eQmTFyY1e
k5a7o4cQqbLi0Xpha3f0ECZtOh0Pa/5zQw9hsny3wdiiGjf0ECanOh2Mer3B
DT2EyVj3J0eSXNzQQ5iUGVbapirihh7C5I+6dgnqrit6CJNPZvXVz9ntih7C
ZOI7Y4lnvq7oIUxyN+3Yx1F0RQ9hUlfWd7bp0+noIUzSlpkEvz46HT2EycO6
WoRW6HT0ECb1jvxSbdaajh4iZHK/7ftHr6ahhwi5LXgdW+rkNPQQITM/xvgF
hk1DDxHy9aOlFhs1p6GHCDlwcKl6WPtU9BAh75G3h6sPTkUPEbIlfM6cYO+p
6CFCOmxgf/ouPBU9RMjRAqERsxoX9BAhy29YXbi+1AU9RMiGxzKxJlou6CFC
rjIWVxtrINFDlCzI/nKqIIFED1HSnU2mxiuQ6CFKJje0FBnNJ9Bj/N83HtTz
2+2MHqLkESVuv9zZKeghSn461JFcV+mEHqKkLHe7p1apI3qIkpPOBUtO2eGA
HqKkoJdfz6wZ9ughSjadSxTe9N4WPUTJTs3jdssDbdBDlHzBjZ+jvs8aPURJ
6/Mjl7V2WaKHGHna8byMpb05eoiRAb8XfcqWMUYPMfLLxZ5Pptc56CFGflhG
72zYroEeYmSt7bzL+gkC6CFGBjavZj4KluB/f4m8tIDB0XNkEzwPMfL14umX
KhZY4PM7MVJiqdD7FVcc+N+PIuXF429s7JjK//4USdad89uj6sH/fhV5yFQ6
xe26L//7V+TASMyCbSKB/O9nkXM8K3VT4oP4398io8ToxIvNs/F5qTiZnvom
Muh3EMHzECdzc1pkmn4E4vNVcfLP2Qum6mL+/O+PkVzm9437Cmbyv19GnvA5
w/BJceV//4xk1i2YZyBC8r+fRgreSLh74o4N//tr5DyT0mseZqbEB97328g0
eB2ols3E56fiZINh+u/zQdIEz0OCnKo4XLOl8W0dfn+OvBX1ZzKtWBY9JMgF
MX6vG7Q10UOCjN9R93irHQs9JEipHO4Mf1V99JAgt91nNWz1N8Q+JEibRTr0
aBET7EOC9O990fbV0xT7kCA5g0vdTmmYYx8SZINFb967L+bYhwRpzFFdvuSY
BfYhQf7KEAieZmqJfdDJp5tmTM4otcQ+6KQ3/dihLFUr7INO9imEO9knWWEf
dNLqndH6+jor7INOnvY4azdpzAr7oJMLLjjJyk62xj7oZOgGa2iKtMY+6OS7
rqCLmRnW2AedPNymoRtWaI190Mkm7xcFErXW2AedvO6vYhb4wJriedDJBGVy
5MULfh908tLPj7nmH62xD0kyYcjfv/GrNfYhSa45pVep8s0aPSTJtk1fmIk9
1ughSRKxDTsMv1ijhySZFcZS2vXeGj0kyQ/JDqufjL8ffv+VXHjHVcX5kTV6
SJJFnraCg/XW6CFJvvIsv2FdY40ekqTSxSkSKqXW6CFJBkxqCrxxwho9JMnY
1syY2but0UOKHDx8/uavddZ4vihF9udEiJ2PtUYPKXI+x8w9N8gaPaTIYI+X
/q9crPF8WIpMC+zsWzvJGj2kyESfOqsMNWt8XilFHjnmuVZeiO8hRUoQozcN
v1nh+bIUOdYp2vDiqRV6SJFTwl4oW4EVnj9LkStPf7J1KLHC45UUeWt6U8Ng
phV6SJEMqaodG9ZZ4fmoNHnxIT31fpQVekiTReffjnR5WuH9F2lSpnf5lTeW
VughTbLcHj28rGGF56vSpKmrevcyQSv0kCY/DJmby321xPNXafLIysSwvFZL
PB+XJgN36TWzqi3RY/zvr5hsOp5niefn0uS68+UMme2W6CFNxiSZK25MsMTz
dWkyOLMx6ftsfh8y5ONqCa0oZ0v0kCEXP6OXv9CzRA8Z8tLzqSfDpC3RQ4aE
2/U6X/ss0EOGnK9hS255aYEeMmTIKf9PRrct0EOGdLWyevDunAV6/FfTXUdF
tb5tHKc7poPpHhQQFFvkshvEAAsLu7tQ9IgoKsfALsBCDDCwlcFCsRULsPDY
R2Lohnfe39znT9bMsPd+Ps93M4s1cLuhcGnI9jM7/MjD9Py1bVI2RvqRhxs6
bSqZFRnhRx5u2DZ0oSR6gB95uOEtDn483MaPPNzA3KC6livyIw93LNsw8bje
xo883OHzq2xtfKEvebjj1GlvGf+NL3m4Y7BfXNsrGb7k4Q7vu0XzFib7koc7
HjPuzRq41Zc83NHRoL/cfZkvebjjYe3HJ6ETfMnDHfz3ndUb+/uShztSNS7q
/Db/3a/c8eXLcM/+El/ycMdSqceGPDtf8mCAL7JzY35pRb0z0MfT9XXaxVZ0
/2Kg+VDdy7jYVnR9DLi+Dp9xekwr8mKgcsLJUie/VnQ/YGASU3v2tG2rTPPn
wRjwEb/5+He+D10/A7LS7qnnz/rQ/c50/DMDuvNjfOh+wYBnSM4Vwygf8mXA
MmumLMXXh9aHgXvTm/56ZedD90PT135hBfjoTfcTBhYVXmxjTPcmfwYWRPWf
82WTN60fA/Gnr0ZyJnrT/ZKBjQ5rum3s6E3ryUDqkZmJgUxv2h8MKD5WzG3/
24vuPwy8q0+KnXfbi+6nDAQ9HnH9331etN4M7Ht4/eXxBV60fxjo5Tdtz+EB
XnR/YiC686AXH9VetJ8YeFL4LWBUU0vyYGL0pWUJvNyW5MHENK8xqawLLcmD
iY9ajSooriV5MPFtUsGl7CktyYOJcPcewrXd/nv/wkRh+7ym5eKW5MHE3r/9
eOeqW5AHEy3m27mqX7UgDyYUuyZtfZPWgjyYuB/0vM+9TS3Ig4nIjImfS6a0
IA8msv8tbwzr0YI8mFhl2ap/g6wFeTDR8kb69A8NnuTBhFLqa1mT50keTNid
WH4x6IoneTDhVXlMW7DTkzyY6MMU151e4EkepuNNTH9xfrAneTBRPzVjQKmP
J3kwwespcZnh6kkeTAS3GXFBVKgnDyZeVR3/ZPtYTx5MjOht4ac/pScPJphh
fv3WbtSTBwt/rftynz1dTx4sfNUd6/ehr548WKg6ZT3/vV5PHixkfI77wHDU
kwcLMSfzWq78rSMPFvjN+5vEj3TkwUJEyJGKslM68mBhTvi/qY2bdeTBwtiF
iY+6zNaRBwttOur+nA3SkQcLf4y6c6G+OvJgoX2/rdd9WTryYCHSsPd0QIWW
PFiw3/FKveqtljxYmB+hzy6+qqWfvyyMCf/UPv6AljxYqBMn8aZGacmDhdh2
a+xnT9CSBwub5zWmHu2pJQ8Wgi/YpTnpteTBwvvTTacPO2vJg4XCjpkDp5Vo
yIOFd5sOth37SkMeLMTbTXOJvqIhDxaGNC1Y+vaAhjzYSNNsl4xYoyEPNr7n
eiTbT9aQBxvWbUqufuunIQ82flYubir20ZAHG1F9Dsu0HA15sLGtV0nWxlo1
ebAxYuHMA8LP/73fZ6PE8lz/N/fU5MHG1qofUTdPqcmDjfRWj78+26YmDzb8
B5zUuCxVkwcbU+eOL10YriYPNsqrJ1bY9lSTBxsSxysfbrdQkwcbCxyrR5xg
qsmDjd82QwSXa1TkwYZv7eZHRZ9V5MFGoGuTLOiBijzYWHJp98O3aSryYCPu
Xt6yDbtV5MHG7JkFn8dFqciDjUrdyPPjpqjIg411xzYkrQ9SkQcb3WJ7Tnjd
TkUebBR1bDzRV6b67+/P0W9XuudXexV5cMDZ2XjgqFH539+v4+kfm0sb85Tk
wcHXxPUtd91RkgcHwzblXM46rSQPDurzHrmJdinJg4Pg2K9/dkYpyYODNvcV
9m2mKcmDA+8JIo/KkP/e/3NQKa/6lN9ZSR6m40mmMr5plOTBQQ/mhekMhpI8
OGAkpiSPq1OQBwfr9p+MfvlNQR4cvOuZlDH5uYI8OEjcYM0SX1eQBwcBLd50
rTimIA8OVNaHrYq3KsiDg5WalWLHSAV5cHDLyWZgrykK8uBg27XwkCMhCvLg
oPCXf5EsQEEeHPgrbhRk6BXkwYE2P7kokqMgDw6c97R+O9JCQR5czLMQh4cV
ysmDC3nDkV6LcuXkwcWNu7FDz92TkwcXE2rdBjifl5MHF2tvVBnXHZKTBxd9
rqx2kmySkwcX3TtNDX+1RE4eXAh6/Dx7IkJOHlw82X4pe99gOXlwEXLFau7J
ADl5cHFXvXzG2xZy8uBiW6cu0XKBnDy46Bj2868NtnLy4CLliXAc74eMPLi4
+GnG6dDbMvLgwqJ/xsrnB2XkwYXkd8XUNctk5GG6/pYfrKYPk5EHF2f9ld9i
fWXkwQXfcuTRzy4y8uAiIaY8d9ZvKXlwIX7TQ+p7X0oeXIT2Xu7qeVRKHqbn
70/oFrZGSh5cROn2hl4Pl5IHD4Mslb9DOkvJg2fq7dluiVBKHjx0vmzVJK6W
kAcPK1g1GcFvJOTBQ0/llSWX0iXkwcO51fyHg+Il5MFD5vmMUMF8CXnwsGiK
8A5nsIQ8eOh/LiKteysJefAQ2+tQ5mE3CXnwsOVO3H6/YjF58NBcfPNb6VMx
efDgYxvZ859UMXnw0NTwerzVFjF58FCQu+dLyBwxefAwt2rQ3BdBYvLgYfSE
gPRVrcTkwcMyzylhIxli8uCBdXONXUSpiDx4OBXYMHN/jog8TK8vb2jTnC4i
Dx6ubBvlvH2XiDx46HQ+ITF4qYg8eOjXzjqx00gRefCQc3He1ZDOIvLgI/3r
ygM7JSLy4MPFdXqNlYWIPPgYGy1fc/AfD/Lgw0rY/tv4LA/y4GPBgZ9vg1M8
yIOPpsEs5+mbPciDj9UrOvufmeNBHnz0ebfRTjjEgzz4+OOV1e5s2/9+f8TH
Py+HrZgj9CAPPpw6d90Q2igkDz6q4lScqV+E5MFHZKvuuYlZQvLgY+Dk+Zst
TgnJg4/r3+U/YrcIyYOP2SvCDndYKCQPPhITzy9xHyEkD9PjuvFy1wAhefDx
tEA70k8pJA8+kjH6Q6S9kDz4KHT7OrmwUEAefLzgtrmwNkdAHnzkvR4U1fWq
gDz48Gp3Z4MsQUAefMzscypOs05AHgL0qjw5YPAMAXkI8OJhUXTiYAF5CDAo
zbOS1V5AHgJ0P7tn3CmJgDwEqL9bFT3ZRkAeAvy1d6Oq5x8+eQjwaBTXoncO
nzwEmLqp4P2Ma3zyEGDM4/PLLyTxyUOAlTeeHRTH8slDgBOP6hxOzuWThwBV
3CVrw8L45CFAn14NT3WBfPIQoGjm3XNCHZ88BMj+s8Lo5c4nDwHko/sPnVDN
Iw8Bhs5+kXj5M488BLj5UXHIK5tHHgIUhGez7p7jkYcAs2NuZy/fxyMPAQ5m
rdoweC2PPASYNPYzv89MHnkI8DK0Y4/wYTzyEGDh0qBX8QE88hAgts/g+J9a
HnkIkeTyqf9oBo88hFjyxDq7qJZLHkLsDOn4JuErlzyE4LSe0HXOUy55CGGV
9+D56Ctc8hDi03Zl6NTDXPIQ4vbuLQnbNnPJQ4hI+bYl7xZzycN0vOXMM53H
c8lDiFmsia4Z/bnkIcSRfW2nj27LJQ8hVnGObuHJueQhxLc61aBiJy55CDF7
+I5F/1RyyEMI749eb8oKOOQhhEAaFyh7wiEPIcIPnF439QqHPITIrPy6+PER
DnkIMYHz51v/LRzyEKJP8Kuj35dzyEOIEQedYg5M5pCHEC8zRo6eFcIhDyGi
Fn6tDQvgkIcQvqkq/7GeHPIQ4ldm8ccoLoc8PDD/4LzH1yw55OEBroPXS7di
Nnl4YPO72rur8tnk4YFeLR2W2z1gk4cHvNPyslLS2eThgadveq6ZlMQmDw/c
US+M6vg3mzw8sGdOwW7dCjZ5eOCdZFSSz1Q2eXjgTGTT/KBhbPLwwMDazl/X
d2OThweGRr54/M6HTR4euJScbd1NzCYPD2xstTrijiObPDww1fPg3dHVLPLw
QOpITqPLdxZ5eACb9b/f5LDIwwOu3yZNuHyLRR4e6NclKTAtjUUeHmAtrQ/P
OMgiDw+4fSzY/XUTizw84LfMOku+nEUeHtgwf+zdRVNZ5OEBn3n+sz8PZ5GH
B7rXuSWM78kiDxFq3mb41bRmkYcI4xaE2iQrWOQhwr3ubcqmM1jkIcKYVuXv
ejQzyUOEYzXL4tsUM8lDhM+H/23q8JFJHiLEfDhXN/QJkzxE+HvRkoh1N5jk
IcJVg47/6BSTPETIsi8rV+9nkocIsO2Ru3MjkzxEeNMn+4hwOZM8RNifNqd1
+jQmeYjQ+sOEKRNGMMlDhAdnnKXqvkzyEOFaKrtjfXsmeYgwe/fYPT90TPIQ
IeiOq/AHn0keIsw5E5VQa88kDxHKZ/Z3UNQwyEOETq17tR/zi0EeIrx7uMrl
dC6DPETQ8gOmuz5kkIcIl/fZtoq+xiAPEXqUxAe6nGKQhxjHw/JWpuxnkIcY
lR1tH4ZtZpCHGJanV9h5rGSQhxjnK17zS2YxyEOMO9Ifn9+GM8hDjKhll7u9
DGKQhxiXVOvknwIZ5CHG4aQ74xp9GeQhhnK0x1cfJYM8xHjbYdqWBWwGeYgx
RZ/RK9uGQR5iZETcyB9X6E4eYlS7R78a8tydPMRY0FYbOP2CO3mI0Wb42J9H
drmThxhJ1/vubl7mTh5i+CdP5q0e404epvNfsae1Au7kIUbHP4rL31Xu5CFG
g/fJWU/s3clDjDnefso3f9zIQ4zNGeKjzc/dyEOMlzleNwdcdCMP0/Ovr+50
ba8beYjxbti2P31WuZGHBKwhbQ9VT3AjDwn2zE2SZPd2Iw8JFl0N73ytpRt5
SJBxf0jWI4YbeUjQ0t6wqaHSlTwkaN3UdnTQe1fykMBma4rdrVuu5CEBr+eo
8JBkV/KQ4MC+762s4lzJQ4Jl/ToF58x3JQ8J8vYejLsd5koeEmSdOHbteYAr
eUjw5HZASoPKlTwk+HPueIu+Tq7kIcFo5iz2BaMLeUhw5MT8tp3euZCHBG+u
/IwoyHAhDwm6jA1ecOyYC3lIIP53mf/6zS7kIUHnjtFRMQtcyMO0Htz36iMj
XchDgm07OzW8hwt5SDB4SUpea70LeUiQHrs0PtndhTwk0Dj1bmhX7UweUoxw
ayz8+smZPKQY/u15p9T7zuQhRY+ozjfj05zJQwq7fNu+O3c7k4cU+TMDLp2P
ciYPKZI3dnj/7xRn8pAiNHfn9sBgZ/KQ4t21dufOtncmDykcM/q6d5Y7k4cU
MW6dN3xxcCYPKfL+vWM8UupEHlL0ZuWrV+c7kYcU/gGGhsV3nchDiiPxxpAN
Z5zIQ4p6adumC7ucyEMK8aD49zVRTuQhxdlxg++NmOZEHlL4FNbE54Q4kYcU
HcJClVM6O5GH1PT+ZuEgtsaJPKSoDN1fkufmRB6m9fMe/u1ajSN5SOExZZZ9
+j+O5CHF3s8//LOeOJKHFMv7OvYzXnYkDxmSjw6X+x92JA8ZTj3dtGfbZkfy
kIFhfWyz7RJH8pDh4NTcvPjxjuQhg3zr/nEdBjiShwyZdnvrKts6kocMlz5f
jX0sdyQPGf7pJPt11dmRPGSIeaOtzqhyIA8ZKndP2pn/xYE8ZNDLkhPcnjqQ
h+n8QksrRl51IA8ZrJqjl9w86kAeMiT0fGXVbqsDecjQPmTz8vsrHMjD9Pjn
LddnT3EgDxnavag63nKIA3nIMNDAFFt0dSAPGVJ3RzT+6+lAHjKU+xxvUch1
IA8Zrn28u87ayoE8ZEhnfyn0LbYnDxkaK0N6Lsq3Jw8Z0moSZj29b08eMtSs
iO7TJd2ePOS4EFF0+Vaifeb6/30cQ448Q8PBUXH29P8W5dCNsf7guNw+k+aL
gD1nXeizyfbkJYe8hX/JiSH2mTSfBAnTq2N3B9pnmreXHJsHfLXb72WfSfNN
8Ottl4EXhPaZLf4HIMeYhGVdPtvZZ/7v2/nIIZrU6Ya8wo585Sg0DDuz5Iud
eX06yNGcmV1e8Mwuk+avwGtf1uJxN+0y/7f83U3H65nCKztpR/5ycL3qr+/d
Y5f57P+Xb6Ac73IW9xkaY5dJ81/QKqohSbHQzryeYXK4FiSesZ5gR/tDDp87
B4Nrg+wy//f/2CbIsfH86LlWAXaZ/9suU+RoPDWvVNrSLpPm06BH9v4bQUI7
2j9yWBbfTd9ub5dJ821gv8Li1s9KW9pPcnwr23J/8Ddbs8caOfZdeZf6JMfW
7BFjOv65WWNG37Y1e2wyfd3scK3hrC3tNzn6pm87dS7B1uyx0/T1CoZg6d+2
mTS/B9+HZvwKXmlr9kgwXV/vCuvOM21pP8rhzewU0mGUrdkjRY5F3ztd7dPP
1uyRJscJwSP59A62Zo90OaZ9+LLgoM6W9qscSyqP7P7Cs82k+URwWzhsUQc7
W7PHHTmWT42oSKq0yaT5RtidNLHZ47uN2eOJHDsnOEUlv7bJpPlIeCTuMLLH
PRva33JM8CleXppuY/b4IEfcnqEPzx21MXt8kSPwerrvXztszB4/5DjIjdo3
MdqG9r8cl6x6Fw1baGP2MJr264I73BERNvT/Qk374eTThplDbcwedXJ8sZ4c
t62HDfWhwIjUlLSsNjbUhwL2U94PclbbUB8K7MbEYRM4NtSHAr4R9848sLGh
PhR4nn2qW9dKa+pDgcdWBY33vltTHwq0rw9+MvqtNfWhQOwV+71WD6ypDwXe
i9oOvHbFmvpQ4Haa9vXqFGvqQ4GA8AGi0H3W1IcCLwNbu3bZZE19KDBj3KZd
fpHW1IcCrSOVSe1mWVMfCiQ/+yUYEG5NfSgwKPffP3OCrKkPBW7Ih9seCbSm
PhTgWi0M+eZrTX2Yjj8v7WZbpTX1oYDg9tY2u9nW1IcCRxZnHLG1taY+FNBY
N1RFV1lRHwq0OeQtYf6yoj4UON8cYpWaZ0V9KHCm4/odYY+tqA8FZi2zMTAy
rKgPBXJzVHNz06yoDwVOcEfsTEuyoj4UWL3VT7Qj3or6UMDy05jSmHVW1IcC
l64fsdmwxIr6UCAv+2f33dOsqA8F+kd47U8fZUV9KFA2I67m00Ar6kOBPdzA
gYJAK+rDtD8ydkeP87OiPkzrl2bx90WVFfWhQHq9TRifZ0V9KFDdt/eLDQ5W
1IcCnkl//bStt6Q+FMjGls3biyypDwX+nh9+ukWBJfVh8hpS1/ZljiX1oUCr
tI0eMVmW1IcC3Z/169v7qiX1ocDsgfFpnNOW1IcCJ3+86mI8RJ/fMiqQNWTv
P7nbLKkPBbqy1m59Fm1JfShwrvfANi+XWFIfSsSsf5RRMN2S+lCi4PwvaeMY
S+pDCW72qd7awZbUhxLBGV6aMT0sqQ8lEgcfOZXQzpL6UML/n9AHRZ6W1IcS
A/qnzuwnsaQ+lPh5VhZ7nmFJfSgxaHygq9bGkvpQ4mTyxT/J1RbUhxJFR7ty
/P9YUB9KqHXpS59+sqA+lKiMabJbmGNBfShxYrEqXX3fgvownf+3TrP/uWZB
fSgx/eVC7ZlUC+pDiWxP9ou/DltQH6bzTVw4OmKXBfWhxKF1ttcHb7SgPpQY
cyLoY79VFtSHEoNb/ns5aL4F9aHEvMmxHcZNtqA+lPj7SvHQyJEW1IcSlrOq
644MsqA+TOu9fbvsbTcL6kOJwLxb6Zx2FtSHEs/mHjo5toUF9aFE7seh5elS
C+pDif5f1dEctgX1YVrP4ZMHrLG3oD5M519dv7K4utlg7kMJ5ue3h8oKmg00
fxTrjZGfXB41G8x9KDHjbWt1QHqzwdyHElnsGcOiDzYbzH0o8fD25WGfY5oN
5j6UuBP02ilkbrOB5qMiocuxMbkjmg3mPpR4XODtu7h7s4HmqyJblTBT59Vs
MPdherxbn8pibrOB5rMic3NS+uPmJoO5DyX66Xv/nfG7yWDuQ4lWb2um3XvV
ZDD3YdoPaYe8CzKaDOY+TPvhe8AdRkqTgebHYssOO7fQ+CaDuQ8lPs7rW3N2
ZZOB5s8iN3HpNOnUJoO5DyV0c1v2PhzSZDD3oUKYTLq8Q5cmg7kPFWxTvH5/
1TYZzH2o4BMVGnWU2WQw96FC51EZ8qUNjQZzHyoIm49dHfuz0UDzdQHLhT6j
chrNHlIVwrekzZie0Wig+byIbWsRGpfSaPbQq7DrrF/enR2NZg8fFfxTvD+6
rG40e7RR4Z/1zf1nzGg0e3QwHa/jK+f3wxsNND8YjfUVDuO6NZo9uqvQRvey
ZZVXo4HmDyO+ujw8SdBo9hioQuoox43hNo0Gml9s+vn8Ybe3scHsEabCzOwR
8xkfGsweY1QIGLjByi67wewxQYXg4m3+bhcbzB5TVOhul1GqT2ow0HxlcKbN
V4fGNZg95pme37r1lV3LGgw0nxmdDh7e+XNSg9ljhQr77q0+MSCkweyxRgXD
mlP5twMazB4xKnxqKRH2b9Fg9tikQs0S46BvvAazx1YVrnUYNWmbdYPZY6cK
I7um9gky1hto/jRqRCO/Sj7WUx8qSJp+K5sf1lMfKlhEOpSVXq6nPlTYNml5
l6qj9dSHCqv3S4qdt9dTHyqc/1Ba1jqqnvpQYXyCW/uZM+upD5NX7onkiyPq
qQ/T6z+7+Lj3rqc+VPjTOuXaijb11IcKL4c3t62W11MfKrxPurB1nVs99aHC
cf6qdGVDHfWhwo8A/y0vf9dRHyokFj5w2f6ujvow7Qddd/GErDrqQwVe5f2T
3dLrqA8VtvvuPNL6cB31oULeJMuKNlvrqA8V+h1evbnXqjrqQ41uIftCp86s
oz7U2MUu675vZB31ocak+N5d3/epoz7UcB89q513uzrqQ42zl0OEW9V11Ica
+9c2vrZg11Efagx03Bq21rKO+lDj0PuArWxjLfWhhu+pkTMufqqlPtTwlvV/
N+lpLfWhRo+rW+6pb9ZSH2qUJxnkFadqqQ81muJi83P21VIfagTvuFBwK7aW
+lDDztFDaVhaS32okT0m/e9HU2qpD9P3L9vI+jG8lvpQQ9eUmcjoVUt9qCGe
uEXd37+W+lCj48ae2+JVtdSHGmt79s35zaqlPtS4e4KbH2xVS32o8fpH1z33
SmuoDzVOt55V2+dLDfVhOt6e0ca8FzXUhxoPcgtmrrhVQ32oYRjyfbTnuRrq
Q43+b6ae+5FYQ32ooV23cuSFrTXUhxqzLg3sE7e6hvpQI+oFb8aiuTXUhxo9
vX0uzBhXQ32ocaK8zn1ucA31oUaX+tqFfwXWUB9qtD5989nhVjXUhxoz8n8x
XshqqA81Xp7t0NKFUUN9qFG2doVbqEUN9aHG45vbTqcaq6kPNW5enV/O+lJN
fajx6rjuXczLaupDDa9pL/rY3ammPtRYt+JQu50XqqkPNQJfvNrZ6mg19aHG
oCuPh+buqKY+1PjrunHSlnXV1IcajutuXwtZXE19qMG99byHcko19aFGcnNm
RXNoNfWhxu0D/Qz/9qmmPjRI3tsu/p8O1dSHBr4bIyb+9KymPjQ4uSBTXutR
TX1osOTcgEy+SzX1ocGwXJFvj8Yq6kODIQnDJ0cWV1EfGhy75hty63MV9aHB
3eyq78yXVdSH6fF21rx5d6qoDw2iZHdf5adXUR8a/Gl7iTnkeBX1ocG6lOl3
3uyuoj40sLBfmzs5tor60GCs/nxvqxVV1IcGEYwbzadmVlEfGtS9WVQ1LryK
+tCgzcZ7EkVwFfWhwUvh4WnFqKI+NHgfwHr0oHUV9aHB4BG+bVPVVdSHBqrx
6kMJvCrqQ4MBD3SVBxyqqA8NXCau8z1eV0l9aDAqaGf364WV1IcGS9/flr7/
VEl9aPBs/oar9i8rqQ8NDq2Ya427ldSH6fV9OeXRlyqpD5NPkyzy1YlK6kMD
m8iBW332V1IfGjgFRKh2xVVSHxpMCA5oab+6kvowrbfv3f3r5ldSHxrculE4
2XVSJfWhQRzr9prDoZXUhwa7YkI/o18l9aHByqicxX86V1IfGvSYPr3DYZ9K
6kODvgljRRMVldSHBt8H2LB9OJXUhwa/xt9g29pXUh8ahC8pZ/6sraA+NAi4
3sLqdWEF9aFBdl5R7uPPFdSHBorCd5ue5VRQHxp0DI93+ZBVQX1oEJ/7ekjF
1QrqQ4NI/8lD+GcqqA8NXMP5Fr0SK6gPDa4EPh28Kr6C+tBiz+UlHW/FVFAf
WjgtYp51XV5BfWhxvDglefKsCupDi2sDQ7nZ4yqoD9Pjg2H0H1pBfWiR3fOA
15neFdSHFu9+pmR6d6qgPrToPvJqwjXvCupDixu22sxgRQX1ocWDHaN5Rk4F
9aHFoRfP9+13qKA+tLA5ZBcY3FBOfWjRO39bvauxnPrQYk2YS9bbr+XUhxZp
BtX2k+/KqQ8tAtduGb7+cTn1oUX0I4bD7Mxy6kOLvhGRCeHp5dSHFqknT7uN
OFFOfWjxYvnmoDEHyqkPLVwlzGEztpZTH1p8bx/IXRtdTn1oEXRVHXt0aTn1
oYXx7ocjz2aWUx+m80veMtp6fDn1oUXb27NTug0rpz5M17P02uqNfcupDy0+
yjLe5Xcppz602FD6PLmtXzn1oUV9+bCv+zTl1IcWN4uuR9t7lFMfWrwZujIq
yq2c+tCiuIPsUZNVOfWhRVmXtuGx1WXUhxaTVo72ERWWUR9atFrTyf9KQRn1
YfL0Xj95zJsy6kOLlRcbrzo9KqM+tEhaO1Nzx1BGfZjWw/f44bXpZdSHFiEL
NqsHppRRH1pcdXQ6Lj1URn1o4X+R71G3vYz60OKO+PKKT+vLqA/TejwuzXgc
WUZ9aLFa8E/+7Xll1IcWBwQns29NLqM+tPCMXxiVPaqM+jC9/s+y8tzgMupD
i/nSemlZzzLqQ4ddx3vXsDuVUR86dJx/YUnXVmXUhw65bxO3z1eXUR86/Fm7
AqnCMupDh7AZV1eUupVRHzpwbua172pTRn+fpMPLnGlzd9SWUh86PNbWCUqL
S6kPHVYEenmFfSulPnS4d/xEUlZeKfWhw9030jldnpdSHzro/ILibtwrpT50
aFtaX9b9ein1oYO3sGZfztlS6kOHA9PEy2ccL6U+dPg+aGCs04FS6kNnej+z
KPPCtlLqw3R9Z+J4EetLqQ8d7lTsiBGtLKU+dFAN22nzYX4p9aHD8PdJm49N
LaU+dPhS+4a1OLyU+jCd//yR8YOGllIfOszuP8rKp18p9aFD+V3GaF5gKfVh
Wo/+hp12bUupDx1mTU890dSilPrQocLgF9ckL6U+dIgvOdHJjl9KfeiwY9/i
01zXUupDh/y+ju+8rEvNHgk6rJ+Rf2lArZH60OErpmNBiZH60IH/ruvcpO9G
6kOHcZWFnd6+N1IfOnziuB1k5xipDx0KhvbaPCLbSH3oUDa9q+Vxg5H60KHz
wdSqmotG6kOHy+eDJw07baQ+dEj7+bv7lcNG6kMH3x/9Niv2GqkP0/682Kvd
ji1G6kMHcdqNLi4xRurDdL1L4vfERRqpD9P+LbkayFlgpD50GNFS63N0mpH6
0GHi5LzRHccZqQ+d6f1l3u23w43Uhw6JAe1HRg40Uh96PDnnINL1MFIfepRc
mm2R39FIfegxPPlvq52+RupDj9pbezyG64zUhx628rvdJFIj9aGHMC1ofiHH
SH3o8VP015E7zuSh0iP5TcqzRCvy0OsxqLT9J/vyEupDD+/4eXUfC0qoDz0G
Bt//dvtZCfWhx2M39rb0myXUhx5F9wNLLpwqoT70WD2jZ2Xm3hLqQw+X17pd
+etLqA89Vl1ovm21uIT60KPzYuOcDhEl1IcenA7eWyNDSqgPPTTnqrlPAkuo
Dz3sBElVnj4l1Icet8Ux6l3iEupDj56P2DtcnUuoDz2ilj1ou6O2mPrQA1c9
LbS/iqkPPSYh53vW22LqQw/9+yn5C7KKqQ89Wgw98NLrYjH1oYf/BL/M8iPF
1IceW/fV7H6wvZj60KNg5LOBKWuKqQ89Ei4fer1rbjH1oUfE9HHKbWOLqQ/T
+RmELfYMKqY+9OgTXfD5VJdi6kOPHhWv2z9uWUx96DH+tEZb41FMfeixdotb
op9TMfWhx4+M3N1La4uoDz1ers23fPSriPowXU/Xpa/1uUXUhx7RYTLrnQ+K
qA/T81sOXut8pYj60GNRw47eW5OLqA/T8z/91VO2u4j60OPhyYx5N2KKqA89
uv+qzoxYXER9mNY3q0grmFxEfeiR3jhtf+6wIurDdD3PAt2P9yyiPvSo+jZs
xSr/IurDE+rgPS8mqIsM/wcPK80L
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-2.285826380600569, 
        2.3278898583585126`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 21\"", "\"A ED 21\"", 
         RowBox[{"\"A Lehmann 21\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wcwRa6qLFYuIDw5CW5a+XKVVSHxw8C3xwXvBoXzig4OHiwaXsspziQ8OjLa3
WygZM3xwwC08kyHrTSY+OJg6IcLw+tw44kN+vOPH9d9mFUR8cGBm6v206R9X
Zv8rLLYwPLF/2EbSQxvl7o0TIzr8SQ9tfGzl9RbLYkgPbZjvT37reyWJ9NDG
0Du7Hn5sZa6faiN3hh/3y4Yc8ittBHQ83bt9SD75lTYsHE92VroWkF9pI6ha
75DTamb9oY0R49cv+XGd8SttGBie9vpYXUh+pY31julPJvILiQ9tmJ4wCVIe
xsxzbVyZVs0+G5ZHfGjDb2+I6fzR2cSHNmbcfnvFN576iAq1Maj/2H+fWicS
H9qY0Flr2zk7ktk/DSMcFL3EG3yJD/nxGPOl00BkTXxow3j8n/VL7HeQHvLj
M3LjqMqmYNJDG3f4/6SbnmT00MbBN4vX2qox61lt7Oiunj7hIdPHooMdXz+N
MfiXWd/qYM7WBfPCNPPJr3QwfqtCYZk5cz+lDrZEXuoO+lNAfqWDJklo/ekp
heRXOtDSetFs2FVAfOhg2hXV6Y+nMvuB6GBPe4//r8H5xIcO+AuKayNu5RAf
Otj63tfZ63wG8aGDCv1htmeUUogPHRzpnD628Goc8aGDvSO1j783CSE+dPAz
4Ub9nKKdxIcONIfULs7JsyQ9dGBmJmutLPAmPeSvR7Cy09wjnPTQQenK9DN/
jU8gPXRwyffpPw6mqaSHDrIsc76vS8skPXSQyzIS35yTS36lgw7VuW+11Jn9
CHSgNtZs+CT5+dKnhw5q2gdvz09h/EoH4qcHTSYWMZ9/6GJ/iv2D3xMLiA9d
vJo0e4zqynziQxdHc08qxijmER+62FPzQLkzKov40IUqy3n1q7VpxIcu7i89
fP9wUiLxIX98pHLMnKwoZn9I2N+0UFS18yc+dDGo98bW7zc3MftLQmvXwMn1
lk6khy6CX13778Z+f9JDF9MMHIbvuxhFeuhi1DnDCq2oRNJDF7aGt565maSR
Hrq4nsn/bDE5i/xKF0obexweBuaSX8lf347KXcq9TL7SRUjDUvupt5n1hy6c
9lZNThAXkF/pQmXUtz/CQQXkV7oo+G5zQdk9n/jQRdHmoOGbtjDzXBePHMe9
cfpF/RwfdXG5RzRziXUG8aGLbJ5n8FXlFOJDDwkZd+usx8UTH3oYrvathvMs
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
mf0/sxcHwA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw10g1Uk2UUAOCNKWywTSzsJCYM7YhihqYCUccXkSAPKNRJj2bOv60RmhJZ
CFiKZKkcZWr+UvITTAdT/NsEFtyXn4EK63yoy1EqIwZGozH5CVCIct/dPec7
3/nO+93n3ve+b8DmHe/L3Tgcjvz/5/mbDW+qeM9+bcmQlpw98zwm0fKMczt0
sjyy0BmTaPy0ueagwCtgbH4eYmqI3tVy8ZEWPnaGmM6bYewLiU0mrCem9uNT
1skTy9ET0YzBJH/9havoiSgnsdH/Ff559IS0rdI7/c2PqtET0uFI66eXvlAD
6wnp1v3mwzl8l+dFbx8oz1+3vBY9L1omWXpmRr6SsJ4njRvu37mv2YCeJ62N
bFMHfH4LPU+qS/uuuK/gPHoCepc7d8jr+EP0BJRJCVn1+qVu9Pi06GiSPviE
jbAen65Pn59YqOnA/fKpMVC27VVjE3oeND9WE5c4WQ+s50HXj69c8+PYLXBy
ze50ZmH9JvsHOuzPne7VLNiUINCh504V9uzuwZ216E2k1FHlI2GKsb+J1Msv
raBaUYHeBLo9sKF+NAzQm0B3zDTPCZ1J0JtAe3P+niRqB/R4NN8/bE5aRjl6
PNp6StnQKrqMnhtVtQTEckrr0HOjSuHa72VLzuD83OhDqWOMKf0FPS6NXraJ
m1dgRo9LbW8vlIZrGcJ6HJrKxDQsV6egx6HKTJNiILMWPQ498dXJacJKNbzh
zB+HslHltppDVTjvf+En7poevcXV/xh8u1vFC2EKsd9R8Iw1yCG4Hr1RMObE
dDBTr6H3DEr6qqX611zeUzjuc2jyPqGBnHZ6I5DU5pOl3T4F+x2G3xNS2rNv
NKA3DBuUEnVoYA16QzBuk26Wb7yB3j8wOf3oZ3+dakJvEK7kwOrKby6jNwBu
ubYkvttN9AZg61tlfnFHmtDrhy3n4qfriorR64OLef2C+NQW9J6Aj17Rc5tv
QM8BkWZH2i7fRvQcUHVTlbnUwwQyZ74dJHXPBIykBOfTA9qgbQnxZhOZ76xn
g8LQ68bMpSb0u2HW6g+Zdxw16P0JdTHXt/QfsKDXBZGh8xq13gx6VhC8m9se
VPgAvQ4QxMnWLqvqQq8deI0l0S/zM/D+WUCZ1bhqd6YDbjrzH8BiSyb3pIcD
2P9bIXcW7+mKPTay0VnvV+jac2xD1kZRBOvfBUfw4tywtikRrMdA/nltZ9Sx
FyOUzvxbkFWhajki5eH/dbDoy4MaqdfPsNe5XgF/iGMS7n3Sh99qyF5UV9RR
ZnXdP05sVHPob/YWguvEfVV24qDISiibT3zDZZxHQjOJYH1ifulslGS2geSz
9cnBNNXai/73cb8MqenVrxGLOnE+d0lFbXa4/HE7SWb3R4aN8iJVtRrzW4m+
Jn72aV8zMOx8SJAp4smB2fewPwupGtEErJiuc82XKC5E+VnEJhLGzp9cuN/M
T11UT9h8K/Grto8sUDVAInt+JDh5y43ux4zrfMnhctXpqck/AFu/m6SV5mkq
rU3o2UiNTmLyudOAXg8xvhDaO1J4FT078erffqJT0eS6f2Tl1wLpnXQt/Adh
IwpV
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
S85d+v0TkpKqjh2C9+jjI5rFn3nr3LxHHz+RHvFqKfPTfXp8iEXDXO6RpIf0
+BFvX3Yf1tnzmB5f4tW2G9vXcp/i618httR5L5brekbAhA+xbuvmF2nK9Hhe
JR44W9pzGltoX0J60+f2Q89f0/7Ef71XXJTs3tHnB3H06qZoNrTR5w8xbfl9
brJ0B31+EXcNHz/aX91BwMT5R2TeTnXYEd5BCIwvGN8jDOR7nE+7txPkxPlL
hJeWLT/h9J7A85sIDJj+xWd7K15/HhHcrEV3Kj61oMcT4pHiZtnrVc14fXtC
rKmrVVv/6ileD58S7Gf+brqCj/H4nhLtR/+Ve2rdJ8om+iRmPLrv2NB2G4+3
iTije0EnwvImgX0TVS2eJzIHruHxNxN2d/UNbJSv4ufFcyJiuOJ0yZ8r9PWD
+GFkI37WpZG+vhCP/hObX/jtIn39Ie4Y71hykf88DhPXJ2L30P4ha845Inzi
+kXI9rXofd5/hr6+EXtm3VjSNe00ff0jLM472P4SP0VfH4nb5kULTX/V09dP
os2Rurxr4D/6+ko0dPX5Z9qcoK+/hPiTmVfOlh4j2iauz8Scd17yRaZHcbzf
EktDNTV2vK0l9Ceu74S5w0j5iZoa+vpPHMqJsTq5s5r+fCAOHN66m9p2hP78
IAIlXqxYUVBFf74QbvZu/pWnK+nPH2Lf28YdhR0VeHxtxLnakLYTehWE38Tn
FzFvrohR3rJyPN52okNd4LgEdZj+/CPW/lp1VEzvMP35SCya3q9XkknPn3YQ
1ZZOuV8GSunPV8IgNezF0S+H6M9fIqj6Y4zx94P05zPBiNuuS46VoPcH4s6O
6DOvtEsI84nPd2K2SauYuMcB+vOfONRJNHxL2k/fHxASC9SX3jlP3892Eneu
xvA+/qPXZzqJaQVvNh6atZe+/yCmPdqbsuRIMX1/Qnz+6Mw7Jsq/X564fyFu
uw8xRpcX4Xh3ESLdX6I6XxbS9z9ER4Wt46h3IX1/REQePeTSeaOAvn8irM5D
tbtrAX1/Rfzyf7fo4a099P0XQW0XyrHw3UPfnxEf/C+3Gb/JR49uYjBHRWPT
inz0+EyIV9cUfhXKR4/PRMI5u0/TSvLo+0PiprD+GsIhj75/JBr3xbGuvqLn
R74Qa46lqBal0vOxX4jFC7vDCli59P0p8d2oeaXhwRz6/pW4d6Px3cfB3ejR
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
exMPYwTGHyuRhHsTD2PUusYMa+/iTTyMkTb4fm4XkTfxMIbB8ecudu292b4T
Giac/jjtjRfxMMbfy30yHl9l+5vGeJpx8eq4w17EwxjpE0LS9PO8iIcxVr51
H1u7wIt4GEN5LT/4/J9exMMYPTzbNFwN9yIexnjS+JewxdWLeBijvGpOgY/U
i+1fYfHzAO9dnb2Ihwk6Bw6rtPvA9klNcJW79ePm7d7EwwT2iUHFWSd7Ew8T
fNJUbJ25vTfxMMF9l2vFM1f2Jh4mKEtJXps1rTfb98LVfTbczeG9iYcJipve
WtsE9Wb7YAgKE8zYYtebeJjgYujCO84mvdm+GERli41etelNPEwQ4Vzb4eAb
T+JhgrrmvZPzbngSDxOkT86x3nLMk3iYYGO3oo6VW9m+rAn4t/0vt1vpSTxM
UFE0blD0dE+2n4bVNt4Trsd6Eg8TjImb/zIuxJN4mKCNYZ91PRw9iYcJ4qp7
9b0p8iQeJriXfeT+oc6exMME5m3Tjfd/8iAeJrh+VXyr6gHb3zVFWM8Vr1oq
PYiHKfReuCgCStl+rylOZLyMLsr2IB6mWIOTCRbpHsTDFBonH0nFRA/iYYpd
mf0GTo3yIB6mqEgS1noHeLD9O6Q8xd9Kew/iYYq5r7YHys092H4e6pdk3nbt
5EE8TDHjQb7xuE/ubH8PkXon6kpq3YmHKVoyHHroVrkTD1PkNOUmLTngTjxM
kRH16q1JgTvxMEU7z4FhZ5a5s31APDuZNCNtmjvxMEVCpdrvj5HubF8QAcY7
FwX3dycephAvSxKHubsTD1Mssxn6YgLvTjxMET5j2uHN+u7EwxQ6c10SG367
EQ9TvBSFvwirdyMeprjgdu571R22T22GNV8fLB16zo14mEH71nri71I3tr+I
vyauXXw0z414mKH2hktpxjI34mGGO5sWnJ863Y14mCHgjeXOpFFuxMMMk5fw
DovC3dg+JEonHwwo8XIjHmao/Bl5ssHKje1LItTp5iwfUzfiYYZZ1k4xRZ3c
iIcZnPtV+qi/uhIPM0j26+kcq3MlHmb4Oft15sirtNe9ygy6zkNPiU+4Eg8z
7BOX/PWhyJXtZ+LaxplpN7NciYcZpi1edPfyIle2v4npO2sHPZjqSjzMUNXu
3J2fI2nPvNoM8uDTvtpwV+JhBn2v1dNnebsSDzOMVmuH3rVxJR5maHK8dz5Y
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
/MyNij9F3v8DA7Tb3Q==
           "]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Epilog -> {
         InsetBox[
          FormBox[
           StyleBox["\"t=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.9}]], 
         InsetBox[
          FormBox[
           StyleBox["\"U=1.4\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.8}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Mu]=0\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.7}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Beta]=20\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.6}]], 
         InsetBox[
          FormBox[
           StyleBox["\"\[Epsilon]={-1, 1}\"", 13, StripOnInput -> False], 
           TraditionalForm], 
          Scaled[{0.9, 0.5}]], 
         InsetBox[
          FormBox[
           StyleBox["\"B=1\"", 13, StripOnInput -> False], TraditionalForm], 
          Scaled[{0.9, 0.4}]]}, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-12.5, 12.5}, {-1.150837243637334, 5.467989373322766}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"A NEDyson 22\"", "\"A ED 22\"", 
         RowBox[{"\"A Lehmann 22\"", " ", "\"\\n(Broadened)\""}]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.797610169522023*^9, 3.797610257195732*^9, {3.797610307679984*^9, 
   3.797610321881299*^9}, {3.797610478476297*^9, 3.797610523920842*^9}, {
   3.797610620772924*^9, 3.7976107018058863`*^9}, 3.797611897728133*^9, 
   3.797614044894981*^9, 3.79761409053857*^9, 3.797615008305632*^9, 
   3.797618015636509*^9, 3.797631786934477*^9, 3.79763838726007*^9, 
   3.79841175700432*^9, {3.798411795758057*^9, 3.798411803302898*^9}, 
   3.79841305734914*^9, 3.798413726009934*^9, 3.798415202936694*^9, 
   3.7984153303273706`*^9, 3.798415407703198*^9, 3.798415500350554*^9, 
   3.798415664552568*^9, 3.798416102458418*^9, 3.798416925624268*^9, 
   3.7984174530948*^9, 3.7984178543463287`*^9, 3.7984179193931932`*^9, 
   3.7984188252791433`*^9, 3.7984189159996157`*^9, 3.798419262327409*^9, 
   3.7984193665986643`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"315d7fb9-33a6-451f-b2ef-663a8682b212"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<B\>\"", "<>", 
        RowBox[{"ToString", "[", "B", "]"}], "<>", "\"\<U\>\"", "<>", 
        RowBox[{"ToString", "[", "U", "]"}], "<>", "\"\<A\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.eps\>\""}], ",", 
       RowBox[{"Aplots", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "sites"}], "+", "j"}], "]"}],
         "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "sites"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "sites"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7976180048683577`*^9, 3.797618009642652*^9}, {
  3.7984198641122923`*^9, 3.7984198843201227`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"3fe52a2e-fc2b-467e-b3c1-9653c0a5972e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"B1U1.4A11.eps\"\>", ",", "\<\"B1U1.4A12.eps\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B1U1.4A21.eps\"\>", ",", "\<\"B1U1.4A22.eps\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.797618018997837*^9, 3.797638517625537*^9, 
  3.798419922573811*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"ebbae239-30ae-41fa-a28f-2085f41a125e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Junk Below here", "Chapter",
 CellChangeTimes->{{3.7976381760961123`*^9, 
  3.7976381830565777`*^9}},ExpressionUUID->"2b4dc8e2-3e08-4341-bae2-\
85d09a99410b"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"bb9e4ac1-bb87-4a76-823a-106dcde98e5a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"wlist", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "w", "}"}], ",", 
         RowBox[{"FTf1D", "[", 
          RowBox[{"24", ",", "w", ",", "i", ",", "j"}], "]"}]}], "]"}], "/@", 
       "wlist"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"2", "sites"}], ",", "2"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.798411515161447*^9, 
  3.798411546435668*^9}},ExpressionUUID->"d9661995-91a0-4307-8b33-\
418df8dfb95c"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.798411541672983*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"a1ce23cb-d828-4864-9abc-079f92635d95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.45503`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "0.056090185189211085`"}], "}"}], ",", 
       RowBox[{"{", "0.010804393621867617`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.010804393621867617`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.08383650339910444`"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.798411560067872*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"6bc57bb0-6339-436f-b24b-a80f7b51fd82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FTf1D", "[", 
   RowBox[{"24", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.798411588263479*^9, 3.798411595399617*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"f6ce82dd-0f52-4985-891f-c9801b16a5ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.625743`", ",", 
   RowBox[{"-", "0.056090185189211085`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.798411600416665*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"6da48123-2134-4153-ae75-f7adf6cb0cf9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTf1D", "[", 
    RowBox[{"tmax_", ",", "w_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "Pi"], 
    RowBox[{"Im", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GRf1D", "[", 
         RowBox[{"trel", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "w", " ", "trel"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"trel", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",ExpressionUUID->"192163aa-2ec0-4098-9d6e-7173dfd337c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadFile", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{"datadir", "<>", "\"\</energy.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nt", "=", 
   RowBox[{"Read", "[", 
    RowBox[{"ReadFile", ",", "Number"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edat", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Read", "[", 
      RowBox[{"ReadFile", ",", "Number"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", 
       RowBox[{"nt", "+", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"t", "-", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", 
          RowBox[{"nt", "+", "2"}]}], "}"}]}], "]"}], ",", " ", "edat"}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8027202505875483`*^9, 3.80272034785338*^9}, {
  3.802720581818028*^9, 3.802720584138014*^9}, {3.8027225517398663`*^9, 
  3.8027225553183937`*^9}, {3.802784766747266*^9, 3.8027847800375834`*^9}, {
  3.8027848238654327`*^9, 3.802784828710689*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"5f3d6b1d-4247-4823-867d-72929d293e26"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdyzdKBEAAheGHlaWFhYiFioiIiDmHNcc1rLkVtBVvMOfQw+ycwLN4BBVR
2G9gGL75eUOPL62nriTP3/fn/T2f7frRfH/tf2v//XT6c5Pe6HQ37sG9uA8P
4EE8jEfwKB7D43gCT+IpPI1n8Cyew/N4AS/iJbyMV/AqXsPreANv4kanC84W
HWebjrNDx9ml4+zRcfbpOAd0nEM6zhEd55iOc0LHOaXjNOk4Z3ScczrORacb
uOCKc8keF1xxWuxxwRXnij0uuOJcs8cFV5wb9rjginPLHhdcce7Y44Irzj17
XHDFefj3F0GECVU=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 100.}, {-0.050983, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.80278482491916*^9, 3.802784829167473*^9}, {
   3.8027848951592073`*^9, 3.802784898406275*^9}, 3.802785046488613*^9, 
   3.8027852121341553`*^9, 3.802787322450712*^9, 3.8027875797040987`*^9, 
   3.802789481840786*^9, 3.80278970254982*^9, 3.802790015904614*^9, 
   3.8027904658417597`*^9, 3.802790712888936*^9, 3.802791020626265*^9, 
   3.8027911523460817`*^9, 3.802792057360669*^9, 3.802792607524078*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"88183c9b-4e61-4451-9556-b81d0879c5b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1848, 1016},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 223, 4, 147, "Title",ExpressionUUID->"b12ddd7a-35b6-400f-bdf2-24eb5c84b069"],
Cell[806, 28, 329, 10, 13, "Text",ExpressionUUID->"d50bf871-2357-4d07-b762-f5f96a6a1274"],
Cell[CellGroupData[{
Cell[1160, 42, 276, 4, 105, "Chapter",ExpressionUUID->"850a0c90-583e-4431-8d35-1e6cd71a1681"],
Cell[1439, 48, 2458, 67, 252, "Input",ExpressionUUID->"23d6e924-3c4b-4f78-b78b-778166e4b94d"],
Cell[3900, 117, 3355, 85, 422, "Input",ExpressionUUID->"7f53f976-69eb-4fc3-9506-80bedeb75112"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7292, 207, 166, 3, 105, "Chapter",ExpressionUUID->"a38d7bfa-9038-4cac-a7fb-9df1652d2304"],
Cell[7461, 212, 6417, 137, 218, "Input",ExpressionUUID->"14a85532-8a48-4c0c-bb4d-f36c3a5fd145"],
Cell[CellGroupData[{
Cell[13903, 353, 2529, 70, 286, "Input",ExpressionUUID->"fe9b6f12-82fc-40ba-9a2f-8005b8cf81a9"],
Cell[16435, 425, 702, 11, 37, "Print",ExpressionUUID->"7a3c7b49-a130-4e89-8abe-5b51ab2b6e06"],
Cell[17140, 438, 847, 11, 53, "Output",ExpressionUUID->"5468163b-c884-44df-9c0f-d3843e8b91b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18036, 455, 222, 4, 105, "Chapter",ExpressionUUID->"33638414-0c5e-4f85-8575-c35d52a84829"],
Cell[18261, 461, 4975, 128, 486, "Input",ExpressionUUID->"9a835ecc-b544-490a-afdf-e9a865d79cb3"],
Cell[CellGroupData[{
Cell[23261, 593, 5675, 133, 456, "Input",ExpressionUUID->"cd94c9dc-5801-4518-a62d-1725fc62b57a"],
Cell[28939, 728, 106442, 1965, 347, "Output",ExpressionUUID->"407d2cd0-abd9-4d15-8d3d-916b6e056904"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135418, 2698, 300, 6, 47, "Input",ExpressionUUID->"680bb8be-28c8-45a6-8082-55df911738b2"],
Cell[135721, 2706, 218, 4, 53, "Output",ExpressionUUID->"218e06dc-99ea-4321-96aa-a34e14e839ae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135988, 2716, 153, 3, 105, "Chapter",ExpressionUUID->"9218f325-0557-46c1-8dee-95118d392943"],
Cell[136144, 2721, 3500, 88, 196, "Input",ExpressionUUID->"14b63a35-09eb-46d3-a129-9b8918ced47a"],
Cell[139647, 2811, 2446, 76, 242, "Input",ExpressionUUID->"b2fe4b85-b08b-492d-92ec-d70aad551803"],
Cell[CellGroupData[{
Cell[142118, 2891, 11711, 276, 587, "Input",ExpressionUUID->"4c8585b8-8ebb-40a9-9c36-377bd2d7272c"],
Cell[153832, 3169, 158743, 3051, 449, "Output",ExpressionUUID->"36d4bd15-f66e-4b63-8bab-d193bc1dadd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312612, 6225, 1062, 25, 82, "Input",ExpressionUUID->"99a35514-1ff4-4be9-b489-c10c4973aa3e"],
Cell[313677, 6252, 804, 16, 53, "Output",ExpressionUUID->"bfa8d1d8-35e9-4479-b317-59fcba440cb2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314530, 6274, 162, 3, 105, "Chapter",ExpressionUUID->"ee0de9ce-15c3-45ad-84eb-f37421f2c5fa"],
Cell[314695, 6279, 3428, 90, 196, "Input",ExpressionUUID->"6a0fe541-0a9e-4140-a40c-d97382b0188a"],
Cell[318126, 6371, 4490, 124, 449, "Input",ExpressionUUID->"275f6d39-05b4-46ed-979d-88750b7e8631"],
Cell[322619, 6497, 2884, 72, 150, "Input",ExpressionUUID->"6b81302c-7029-4cd1-a3a6-3d487e9d0083"],
Cell[CellGroupData[{
Cell[325528, 6573, 6514, 171, 371, "Input",ExpressionUUID->"fb798e6d-9565-44b9-9071-d733f33c0674"],
Cell[332045, 6746, 370116, 6500, 406, "Output",ExpressionUUID->"315d7fb9-33a6-451f-b2ef-663a8682b212"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702198, 13251, 1036, 26, 82, "Input",ExpressionUUID->"3fe52a2e-fc2b-467e-b3c1-9653c0a5972e"],
Cell[703237, 13279, 430, 12, 53, "Output",ExpressionUUID->"ebbae239-30ae-41fa-a28f-2085f41a125e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[703716, 13297, 164, 3, 105, "Chapter",ExpressionUUID->"2b4dc8e2-3e08-4341-bae2-85d09a99410b"],
Cell[703883, 13302, 329, 10, 13, "Text",ExpressionUUID->"bb9e4ac1-bb87-4a76-823a-106dcde98e5a"],
Cell[CellGroupData[{
Cell[704237, 13316, 829, 24, 82, "Input",ExpressionUUID->"d9661995-91a0-4307-8b33-418df8dfb95c"],
Cell[705069, 13342, 171, 3, 53, "Output",ExpressionUUID->"a1ce23cb-d828-4864-9abc-079f92635d95"],
Cell[705243, 13347, 599, 17, 53, "Output",ExpressionUUID->"6bc57bb0-6339-436f-b24b-a80f7b51fd82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705879, 13369, 281, 5, 47, "Input",ExpressionUUID->"f6ce82dd-0f52-4985-891f-c9801b16a5ad"],
Cell[706163, 13376, 241, 5, 53, "Output",ExpressionUUID->"6da48123-2134-4153-ae75-f7adf6cb0cf9"]
}, Open  ]],
Cell[706419, 13384, 628, 18, 73, "Input",ExpressionUUID->"192163aa-2ec0-4098-9d6e-7173dfd337c8"],
Cell[CellGroupData[{
Cell[707072, 13406, 1380, 39, 150, "Input",ExpressionUUID->"5f3d6b1d-4247-4823-867d-72929d293e26"],
Cell[708455, 13447, 2208, 52, 400, "Output",ExpressionUUID->"88183c9b-4e61-4451-9556-b81d0879c5b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

